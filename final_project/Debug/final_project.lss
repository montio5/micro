
final_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002492  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f8  00800060  00002492  00002526  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000fa  00800158  00800158  0000261e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000261e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000267c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000390  00000000  00000000  000026b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000038fa  00000000  00000000  00002a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001030  00000000  00000000  00006342  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d0f  00000000  00000000  00007372  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a9c  00000000  00000000  00009084  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010f6  00000000  00000000  00009b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000295c  00000000  00000000  0000ac16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000330  00000000  00000000  0000d572  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__ctors_end>
       4:	0c 94 95 04 	jmp	0x92a	; 0x92a <__vector_1>
       8:	0c 94 68 05 	jmp	0xad0	; 0xad0 <__vector_2>
       c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      24:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__vector_9>
      28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      2c:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__vector_11>
      30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      34:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <__vector_13>
      38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	63 64       	ori	r22, 0x43	; 67
      56:	69 6e       	ori	r22, 0xE9	; 233
      58:	6f 70       	andi	r22, 0x0F	; 15
      5a:	73 75       	andi	r23, 0x53	; 83
      5c:	78 58       	subi	r23, 0x88	; 136
      5e:	5b 00       	.word	0x005b	; ????
      60:	00 40       	sbci	r16, 0x00	; 0
      62:	7a 10       	cpse	r7, r10
      64:	f3 5a       	subi	r31, 0xA3	; 163
      66:	00 a0       	ldd	r0, Z+32	; 0x20
      68:	72 4e       	sbci	r23, 0xE2	; 226
      6a:	18 09       	sbc	r17, r8
      6c:	00 10       	cpse	r0, r0
      6e:	a5 d4       	rcall	.+2378   	; 0x9ba <openTrash+0x16>
      70:	e8 00       	.word	0x00e8	; ????
      72:	00 e8       	ldi	r16, 0x80	; 128
      74:	76 48       	sbci	r23, 0x86	; 134
      76:	17 00       	.word	0x0017	; ????
      78:	00 e4       	ldi	r16, 0x40	; 64
      7a:	0b 54       	subi	r16, 0x4B	; 75
      7c:	02 00       	.word	0x0002	; ????
      7e:	00 ca       	rjmp	.-3072   	; 0xfffff480 <__eeprom_end+0xff7ef480>
      80:	9a 3b       	cpi	r25, 0xBA	; 186
      82:	00 00       	nop
      84:	00 e1       	ldi	r16, 0x10	; 16
      86:	f5 05       	cpc	r31, r5
      88:	00 00       	nop
      8a:	80 96       	adiw	r24, 0x20	; 32
      8c:	98 00       	.word	0x0098	; ????
      8e:	00 00       	nop
      90:	40 42       	sbci	r20, 0x20	; 32
      92:	0f 00       	.word	0x000f	; ????
      94:	00 00       	nop
      96:	a0 86       	std	Z+8, r10	; 0x08
      98:	01 00       	.word	0x0001	; ????
      9a:	00 00       	nop
      9c:	10 27       	eor	r17, r16
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	e8 03       	fmulsu	r22, r16
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	64 00       	.word	0x0064	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	0a 00       	.word	0x000a	; ????
      b0:	00 00       	nop
      b2:	00 00       	nop
      b4:	01 00       	.word	0x0001	; ????
      b6:	00 00       	nop
      b8:	00 00       	nop
      ba:	2c 76       	andi	r18, 0x6C	; 108
      bc:	d8 88       	ldd	r13, Y+16	; 0x10
      be:	dc 67       	ori	r29, 0x7C	; 124
      c0:	4f 08       	sbc	r4, r15
      c2:	23 df       	rcall	.-442    	; 0xffffff0a <__eeprom_end+0xff7eff0a>
      c4:	c1 df       	rcall	.-126    	; 0x48 <__SREG__+0x9>
      c6:	ae 59       	subi	r26, 0x9E	; 158
      c8:	e1 b1       	in	r30, 0x01	; 1
      ca:	b7 96       	adiw	r30, 0x27	; 39
      cc:	e5 e3       	ldi	r30, 0x35	; 53
      ce:	e4 53       	subi	r30, 0x34	; 52
      d0:	c6 3a       	cpi	r28, 0xA6	; 166
      d2:	e6 51       	subi	r30, 0x16	; 22
      d4:	99 76       	andi	r25, 0x69	; 105
      d6:	96 e8       	ldi	r25, 0x86	; 134
      d8:	e6 c2       	rjmp	.+1484   	; 0x6a6 <i2c_master_sendByte+0x14>
      da:	84 26       	eor	r8, r20
      dc:	eb 89       	ldd	r30, Y+19	; 0x13
      de:	8c 9b       	sbis	0x11, 4	; 17
      e0:	62 ed       	ldi	r22, 0xD2	; 210
      e2:	40 7c       	andi	r20, 0xC0	; 192
      e4:	6f fc       	.word	0xfc6f	; ????
      e6:	ef bc       	out	0x2f, r14	; 47
      e8:	9c 9f       	mul	r25, r28
      ea:	40 f2       	brcs	.-112    	; 0x7c <__trampolines_end+0x28>
      ec:	ba a5       	ldd	r27, Y+42	; 0x2a
      ee:	6f a5       	ldd	r22, Y+47	; 0x2f
      f0:	f4 90       	lpm	r15, Z
      f2:	05 5a       	subi	r16, 0xA5	; 165
      f4:	2a f7       	brpl	.-54     	; 0xc0 <__trampolines_end+0x6c>
      f6:	5c 93       	st	X, r21
      f8:	6b 6c       	ori	r22, 0xCB	; 203
      fa:	f9 67       	ori	r31, 0x79	; 121
      fc:	6d c1       	rjmp	.+730    	; 0x3d8 <FlagWrite+0x58>
      fe:	1b fc       	.word	0xfc1b	; ????
     100:	e0 e4       	ldi	r30, 0x40	; 64
     102:	0d 47       	sbci	r16, 0x7D	; 125
     104:	fe f5       	brtc	.+126    	; 0x184 <.do_clear_bss_loop>
     106:	20 e6       	ldi	r18, 0x60	; 96
     108:	b5 00       	.word	0x00b5	; ????
     10a:	d0 ed       	ldi	r29, 0xD0	; 208
     10c:	90 2e       	mov	r9, r16
     10e:	03 00       	.word	0x0003	; ????
     110:	94 35       	cpi	r25, 0x54	; 84
     112:	77 05       	cpc	r23, r7
     114:	00 80       	ld	r0, Z
     116:	84 1e       	adc	r8, r20
     118:	08 00       	.word	0x0008	; ????
     11a:	00 20       	and	r0, r0
     11c:	4e 0a       	sbc	r4, r30
     11e:	00 00       	nop
     120:	00 c8       	rjmp	.-4096   	; 0xfffff122 <__eeprom_end+0xff7ef122>
     122:	0c 33       	cpi	r16, 0x3C	; 60
     124:	33 33       	cpi	r19, 0x33	; 51
     126:	33 0f       	add	r19, r19
     128:	98 6e       	ori	r25, 0xE8	; 232
     12a:	12 83       	std	Z+2, r17	; 0x02
     12c:	11 41       	sbci	r17, 0x11	; 17
     12e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     130:	21 14       	cp	r2, r1
     132:	89 3b       	cpi	r24, 0xB9	; 185
     134:	e6 55       	subi	r30, 0x56	; 86
     136:	16 cf       	rjmp	.-468    	; 0xffffff64 <__eeprom_end+0xff7eff64>
     138:	fe e6       	ldi	r31, 0x6E	; 110
     13a:	db 18       	sub	r13, r11
     13c:	d1 84       	ldd	r13, Z+9	; 0x09
     13e:	4b 38       	cpi	r20, 0x8B	; 139
     140:	1b f7       	brvc	.-58     	; 0x108 <__trampolines_end+0xb4>
     142:	7c 1d       	adc	r23, r12
     144:	90 1d       	adc	r25, r0
     146:	a4 bb       	out	0x14, r26	; 20
     148:	e4 24       	eor	r14, r4
     14a:	20 32       	cpi	r18, 0x20	; 32
     14c:	84 72       	andi	r24, 0x24	; 36
     14e:	5e 22       	and	r5, r30
     150:	81 00       	.word	0x0081	; ????
     152:	c9 f1       	breq	.+114    	; 0x1c6 <RTC_Status+0x4>
     154:	24 ec       	ldi	r18, 0xC4	; 196
     156:	a1 e5       	ldi	r26, 0x51	; 81
     158:	3d 27       	eor	r19, r29

0000015a <__ctors_end>:
     15a:	11 24       	eor	r1, r1
     15c:	1f be       	out	0x3f, r1	; 63
     15e:	cf e5       	ldi	r28, 0x5F	; 95
     160:	d8 e0       	ldi	r29, 0x08	; 8
     162:	de bf       	out	0x3e, r29	; 62
     164:	cd bf       	out	0x3d, r28	; 61

00000166 <__do_copy_data>:
     166:	11 e0       	ldi	r17, 0x01	; 1
     168:	a0 e6       	ldi	r26, 0x60	; 96
     16a:	b0 e0       	ldi	r27, 0x00	; 0
     16c:	e2 e9       	ldi	r30, 0x92	; 146
     16e:	f4 e2       	ldi	r31, 0x24	; 36
     170:	02 c0       	rjmp	.+4      	; 0x176 <__do_copy_data+0x10>
     172:	05 90       	lpm	r0, Z+
     174:	0d 92       	st	X+, r0
     176:	a8 35       	cpi	r26, 0x58	; 88
     178:	b1 07       	cpc	r27, r17
     17a:	d9 f7       	brne	.-10     	; 0x172 <__do_copy_data+0xc>

0000017c <__do_clear_bss>:
     17c:	22 e0       	ldi	r18, 0x02	; 2
     17e:	a8 e5       	ldi	r26, 0x58	; 88
     180:	b1 e0       	ldi	r27, 0x01	; 1
     182:	01 c0       	rjmp	.+2      	; 0x186 <.do_clear_bss_start>

00000184 <.do_clear_bss_loop>:
     184:	1d 92       	st	X+, r1

00000186 <.do_clear_bss_start>:
     186:	a2 35       	cpi	r26, 0x52	; 82
     188:	b2 07       	cpc	r27, r18
     18a:	e1 f7       	brne	.-8      	; 0x184 <.do_clear_bss_loop>
     18c:	0e 94 28 08 	call	0x1050	; 0x1050 <main>
     190:	0c 94 47 12 	jmp	0x248e	; 0x248e <_exit>

00000194 <__bad_interrupt>:
     194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <Dec2bcd>:
		reg |= Frequency;
	}

	//Write control register
	RTC_WriteByte(__RTC_Address_Control, reg);
}
     198:	9a e1       	ldi	r25, 0x1A	; 26
     19a:	89 9f       	mul	r24, r25
     19c:	90 01       	movw	r18, r0
     19e:	11 24       	eor	r1, r1
     1a0:	93 2f       	mov	r25, r19
     1a2:	99 0f       	add	r25, r25
     1a4:	93 0f       	add	r25, r19
     1a6:	29 2f       	mov	r18, r25
     1a8:	22 0f       	add	r18, r18
     1aa:	82 0f       	add	r24, r18
     1ac:	08 95       	ret

000001ae <Bcd2dec>:
     1ae:	98 2f       	mov	r25, r24
     1b0:	92 95       	swap	r25
     1b2:	9f 70       	andi	r25, 0x0F	; 15
     1b4:	29 2f       	mov	r18, r25
     1b6:	22 0f       	add	r18, r18
     1b8:	92 0f       	add	r25, r18
     1ba:	29 2f       	mov	r18, r25
     1bc:	22 0f       	add	r18, r18
     1be:	82 1b       	sub	r24, r18
     1c0:	08 95       	ret

000001c2 <RTC_Status>:
     1c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1c6:	08 95       	ret

000001c8 <RTC_WriteBlock>:
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	c8 2f       	mov	r28, r24
     1d2:	8b 01       	movw	r16, r22
     1d4:	d4 2f       	mov	r29, r20
     1d6:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <TWI_BeginTransmission>
     1da:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     1de:	88 30       	cpi	r24, 0x08	; 8
     1e0:	29 f0       	breq	.+10     	; 0x1ec <RTC_WriteBlock+0x24>
     1e2:	80 31       	cpi	r24, 0x10	; 16
     1e4:	19 f0       	breq	.+6      	; 0x1ec <RTC_WriteBlock+0x24>
     1e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ea:	2e c0       	rjmp	.+92     	; 0x248 <RTC_WriteBlock+0x80>
     1ec:	80 ed       	ldi	r24, 0xD0	; 208
     1ee:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     1f2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     1f6:	88 31       	cpi	r24, 0x18	; 24
     1f8:	29 f0       	breq	.+10     	; 0x204 <RTC_WriteBlock+0x3c>
     1fa:	80 32       	cpi	r24, 0x20	; 32
     1fc:	19 f0       	breq	.+6      	; 0x204 <RTC_WriteBlock+0x3c>
     1fe:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     202:	22 c0       	rjmp	.+68     	; 0x248 <RTC_WriteBlock+0x80>
     204:	8c 2f       	mov	r24, r28
     206:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     20a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     20e:	88 32       	cpi	r24, 0x28	; 40
     210:	99 f0       	breq	.+38     	; 0x238 <RTC_WriteBlock+0x70>
     212:	80 33       	cpi	r24, 0x30	; 48
     214:	99 f0       	breq	.+38     	; 0x23c <RTC_WriteBlock+0x74>
     216:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     21a:	16 c0       	rjmp	.+44     	; 0x248 <RTC_WriteBlock+0x80>
     21c:	f8 01       	movw	r30, r16
     21e:	ec 0f       	add	r30, r28
     220:	f1 1d       	adc	r31, r1
     222:	80 81       	ld	r24, Z
     224:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     228:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     22c:	88 32       	cpi	r24, 0x28	; 40
     22e:	11 f0       	breq	.+4      	; 0x234 <RTC_WriteBlock+0x6c>
     230:	80 33       	cpi	r24, 0x30	; 48
     232:	39 f4       	brne	.+14     	; 0x242 <RTC_WriteBlock+0x7a>
     234:	cf 5f       	subi	r28, 0xFF	; 255
     236:	03 c0       	rjmp	.+6      	; 0x23e <RTC_WriteBlock+0x76>
     238:	c0 e0       	ldi	r28, 0x00	; 0
     23a:	01 c0       	rjmp	.+2      	; 0x23e <RTC_WriteBlock+0x76>
     23c:	c0 e0       	ldi	r28, 0x00	; 0
     23e:	cd 17       	cp	r28, r29
     240:	68 f3       	brcs	.-38     	; 0x21c <RTC_WriteBlock+0x54>
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     248:	0e 94 83 08 	call	0x1106	; 0x1106 <TWI_EndTransmission>
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	08 95       	ret

00000256 <RTC_WriteByte>:
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	1f 92       	push	r1
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62
     260:	69 83       	std	Y+1, r22	; 0x01
     262:	41 e0       	ldi	r20, 0x01	; 1
     264:	be 01       	movw	r22, r28
     266:	6f 5f       	subi	r22, 0xFF	; 255
     268:	7f 4f       	sbci	r23, 0xFF	; 255
     26a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     26e:	0f 90       	pop	r0
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <RTC_ReadBlock>:
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	08 2f       	mov	r16, r24
     280:	eb 01       	movw	r28, r22
     282:	14 2f       	mov	r17, r20
     284:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <TWI_BeginTransmission>
     288:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     28c:	88 30       	cpi	r24, 0x08	; 8
     28e:	29 f0       	breq	.+10     	; 0x29a <RTC_ReadBlock+0x24>
     290:	80 31       	cpi	r24, 0x10	; 16
     292:	19 f0       	breq	.+6      	; 0x29a <RTC_ReadBlock+0x24>
     294:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     298:	5c c0       	rjmp	.+184    	; 0x352 <RTC_ReadBlock+0xdc>
     29a:	80 ed       	ldi	r24, 0xD0	; 208
     29c:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     2a0:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     2a4:	88 31       	cpi	r24, 0x18	; 24
     2a6:	29 f0       	breq	.+10     	; 0x2b2 <RTC_ReadBlock+0x3c>
     2a8:	80 32       	cpi	r24, 0x20	; 32
     2aa:	19 f0       	breq	.+6      	; 0x2b2 <RTC_ReadBlock+0x3c>
     2ac:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2b0:	50 c0       	rjmp	.+160    	; 0x352 <RTC_ReadBlock+0xdc>
     2b2:	80 2f       	mov	r24, r16
     2b4:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     2b8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     2bc:	88 32       	cpi	r24, 0x28	; 40
     2be:	29 f0       	breq	.+10     	; 0x2ca <RTC_ReadBlock+0x54>
     2c0:	80 33       	cpi	r24, 0x30	; 48
     2c2:	19 f0       	breq	.+6      	; 0x2ca <RTC_ReadBlock+0x54>
     2c4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2c8:	44 c0       	rjmp	.+136    	; 0x352 <RTC_ReadBlock+0xdc>
     2ca:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <TWI_BeginTransmission>
     2ce:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     2d2:	88 30       	cpi	r24, 0x08	; 8
     2d4:	29 f0       	breq	.+10     	; 0x2e0 <RTC_ReadBlock+0x6a>
     2d6:	80 31       	cpi	r24, 0x10	; 16
     2d8:	19 f0       	breq	.+6      	; 0x2e0 <RTC_ReadBlock+0x6a>
     2da:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2de:	39 c0       	rjmp	.+114    	; 0x352 <RTC_ReadBlock+0xdc>
     2e0:	81 ed       	ldi	r24, 0xD1	; 209
     2e2:	0e 94 89 08 	call	0x1112	; 0x1112 <TWI_Transmit>
     2e6:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     2ea:	80 34       	cpi	r24, 0x40	; 64
     2ec:	b1 f0       	breq	.+44     	; 0x31a <RTC_ReadBlock+0xa4>
     2ee:	88 34       	cpi	r24, 0x48	; 72
     2f0:	b1 f0       	breq	.+44     	; 0x31e <RTC_ReadBlock+0xa8>
     2f2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2f6:	2d c0       	rjmp	.+90     	; 0x352 <RTC_ReadBlock+0xdc>
     2f8:	0e 94 92 08 	call	0x1124	; 0x1124 <TWI_ReceiveACK>
     2fc:	fe 01       	movw	r30, r28
     2fe:	e0 0f       	add	r30, r16
     300:	f1 1d       	adc	r31, r1
     302:	80 83       	st	Z, r24
     304:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     308:	80 35       	cpi	r24, 0x50	; 80
     30a:	29 f0       	breq	.+10     	; 0x316 <RTC_ReadBlock+0xa0>
     30c:	88 35       	cpi	r24, 0x58	; 88
     30e:	19 f0       	breq	.+6      	; 0x316 <RTC_ReadBlock+0xa0>
     310:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     314:	0d c0       	rjmp	.+26     	; 0x330 <RTC_ReadBlock+0xba>
     316:	0f 5f       	subi	r16, 0xFF	; 255
     318:	03 c0       	rjmp	.+6      	; 0x320 <RTC_ReadBlock+0xaa>
     31a:	00 e0       	ldi	r16, 0x00	; 0
     31c:	01 c0       	rjmp	.+2      	; 0x320 <RTC_ReadBlock+0xaa>
     31e:	00 e0       	ldi	r16, 0x00	; 0
     320:	20 2f       	mov	r18, r16
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	81 2f       	mov	r24, r17
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	28 17       	cp	r18, r24
     32c:	39 07       	cpc	r19, r25
     32e:	24 f3       	brlt	.-56     	; 0x2f8 <RTC_ReadBlock+0x82>
     330:	c0 0f       	add	r28, r16
     332:	d1 1d       	adc	r29, r1
     334:	0e 94 99 08 	call	0x1132	; 0x1132 <TWI_ReceiveNACK>
     338:	88 83       	st	Y, r24
     33a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
     33e:	80 35       	cpi	r24, 0x50	; 80
     340:	29 f0       	breq	.+10     	; 0x34c <RTC_ReadBlock+0xd6>
     342:	88 35       	cpi	r24, 0x58	; 88
     344:	19 f0       	breq	.+6      	; 0x34c <RTC_ReadBlock+0xd6>
     346:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     34a:	03 c0       	rjmp	.+6      	; 0x352 <RTC_ReadBlock+0xdc>
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     352:	0e 94 83 08 	call	0x1106	; 0x1106 <TWI_EndTransmission>
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	08 95       	ret

00000360 <RTC_ReadByte>:
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	1f 92       	push	r1
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	be 01       	movw	r22, r28
     36e:	6f 5f       	subi	r22, 0xFF	; 255
     370:	7f 4f       	sbci	r23, 0xFF	; 255
     372:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	0f 90       	pop	r0
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <FlagWrite>:
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	0f 93       	push	r16
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	d8 2f       	mov	r29, r24
     38e:	e6 2e       	mov	r14, r22
     390:	f4 2e       	mov	r15, r20
     392:	0e 94 b0 01 	call	0x360	; 0x360 <RTC_ReadByte>
     396:	48 2f       	mov	r20, r24
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	60 e0       	ldi	r22, 0x00	; 0
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	0e 2c       	mov	r0, r14
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <FlagWrite+0x2a>
     3a2:	76 95       	lsr	r23
     3a4:	67 95       	ror	r22
     3a6:	57 95       	ror	r21
     3a8:	47 95       	ror	r20
     3aa:	0a 94       	dec	r0
     3ac:	d2 f7       	brpl	.-12     	; 0x3a2 <FlagWrite+0x22>
     3ae:	91 e0       	ldi	r25, 0x01	; 1
     3b0:	40 ff       	sbrs	r20, 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	c9 2f       	mov	r28, r25
     3b6:	01 e0       	ldi	r16, 0x01	; 1
     3b8:	10 e0       	ldi	r17, 0x00	; 0
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <FlagWrite+0x48>
     3c0:	00 0f       	add	r16, r16
     3c2:	11 1f       	adc	r17, r17
     3c4:	22 1f       	adc	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	ea 94       	dec	r14
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <FlagWrite+0x40>
     3cc:	60 2f       	mov	r22, r16
     3ce:	60 95       	com	r22
     3d0:	68 23       	and	r22, r24
     3d2:	f1 10       	cpse	r15, r1
     3d4:	60 2b       	or	r22, r16
     3d6:	8d 2f       	mov	r24, r29
     3d8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     3dc:	8c 2f       	mov	r24, r28
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	ff 90       	pop	r15
     3e8:	ef 90       	pop	r14
     3ea:	08 95       	ret

000003ec <RTC_Set>:
     3ec:	af 92       	push	r10
     3ee:	bf 92       	push	r11
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	28 97       	sbiw	r28, 0x08	; 8
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	a3 2e       	mov	r10, r19
     412:	b4 2e       	mov	r11, r20
     414:	c5 2e       	mov	r12, r21
     416:	d6 2e       	mov	r13, r22
     418:	e7 2e       	mov	r14, r23
     41a:	f8 2e       	mov	r15, r24
     41c:	82 2f       	mov	r24, r18
     41e:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     422:	0c e6       	ldi	r16, 0x6C	; 108
     424:	11 e0       	ldi	r17, 0x01	; 1
     426:	f8 01       	movw	r30, r16
     428:	80 83       	st	Z, r24
     42a:	8a 2d       	mov	r24, r10
     42c:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     430:	f8 01       	movw	r30, r16
     432:	81 83       	std	Z+1, r24	; 0x01
     434:	8b 2d       	mov	r24, r11
     436:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     43a:	f8 01       	movw	r30, r16
     43c:	82 83       	std	Z+2, r24	; 0x02
     43e:	8c 2d       	mov	r24, r12
     440:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     444:	f8 01       	movw	r30, r16
     446:	83 83       	std	Z+3, r24	; 0x03
     448:	8d 2d       	mov	r24, r13
     44a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     44e:	f8 01       	movw	r30, r16
     450:	84 83       	std	Z+4, r24	; 0x04
     452:	8e 2d       	mov	r24, r14
     454:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     458:	f8 01       	movw	r30, r16
     45a:	85 83       	std	Z+5, r24	; 0x05
     45c:	80 e3       	ldi	r24, 0x30	; 48
     45e:	8f 0d       	add	r24, r15
     460:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     464:	f8 01       	movw	r30, r16
     466:	86 83       	std	Z+6, r24	; 0x06
     468:	47 e0       	ldi	r20, 0x07	; 7
     46a:	b8 01       	movw	r22, r16
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     472:	28 96       	adiw	r28, 0x08	; 8
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	ff 90       	pop	r15
     488:	ef 90       	pop	r14
     48a:	df 90       	pop	r13
     48c:	cf 90       	pop	r12
     48e:	bf 90       	pop	r11
     490:	af 90       	pop	r10
     492:	08 95       	ret

00000494 <RTC_Get>:
     494:	0f 93       	push	r16
     496:	1f 93       	push	r17
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	60 97       	sbiw	r28, 0x10	; 16
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
     4ac:	47 e0       	ldi	r20, 0x07	; 7
     4ae:	6c e6       	ldi	r22, 0x6C	; 108
     4b0:	71 e0       	ldi	r23, 0x01	; 1
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     4b8:	0c e6       	ldi	r16, 0x6C	; 108
     4ba:	11 e0       	ldi	r17, 0x01	; 1
     4bc:	f8 01       	movw	r30, r16
     4be:	80 81       	ld	r24, Z
     4c0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4c4:	89 87       	std	Y+9, r24	; 0x09
     4c6:	f8 01       	movw	r30, r16
     4c8:	81 81       	ldd	r24, Z+1	; 0x01
     4ca:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ce:	8a 87       	std	Y+10, r24	; 0x0a
     4d0:	f8 01       	movw	r30, r16
     4d2:	82 81       	ldd	r24, Z+2	; 0x02
     4d4:	8f 73       	andi	r24, 0x3F	; 63
     4d6:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4da:	8b 87       	std	Y+11, r24	; 0x0b
     4dc:	f8 01       	movw	r30, r16
     4de:	83 81       	ldd	r24, Z+3	; 0x03
     4e0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4e4:	8c 87       	std	Y+12, r24	; 0x0c
     4e6:	f8 01       	movw	r30, r16
     4e8:	84 81       	ldd	r24, Z+4	; 0x04
     4ea:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ee:	8d 87       	std	Y+13, r24	; 0x0d
     4f0:	f8 01       	movw	r30, r16
     4f2:	85 81       	ldd	r24, Z+5	; 0x05
     4f4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4f8:	8e 87       	std	Y+14, r24	; 0x0e
     4fa:	f8 01       	movw	r30, r16
     4fc:	86 81       	ldd	r24, Z+6	; 0x06
     4fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	80 53       	subi	r24, 0x30	; 48
     506:	98 4f       	sbci	r25, 0xF8	; 248
     508:	98 8b       	std	Y+16, r25	; 0x10
     50a:	8f 87       	std	Y+15, r24	; 0x0f
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	fe 01       	movw	r30, r28
     510:	39 96       	adiw	r30, 0x09	; 9
     512:	de 01       	movw	r26, r28
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	01 90       	ld	r0, Z+
     518:	0d 92       	st	X+, r0
     51a:	8a 95       	dec	r24
     51c:	e1 f7       	brne	.-8      	; 0x516 <RTC_Get+0x82>
     51e:	29 81       	ldd	r18, Y+1	; 0x01
     520:	3a 81       	ldd	r19, Y+2	; 0x02
     522:	4b 81       	ldd	r20, Y+3	; 0x03
     524:	5c 81       	ldd	r21, Y+4	; 0x04
     526:	6d 81       	ldd	r22, Y+5	; 0x05
     528:	7e 81       	ldd	r23, Y+6	; 0x06
     52a:	8f 81       	ldd	r24, Y+7	; 0x07
     52c:	98 85       	ldd	r25, Y+8	; 0x08
     52e:	60 96       	adiw	r28, 0x10	; 16
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	08 95       	ret

00000544 <RTC_AlarmSet>:

//Set alarm.
void RTC_AlarmSet(Alarm_Type_t Alarm, uint8_t DayDate, uint8_t Hours, uint8_t Minutes, uint8_t Seconds)
{
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	c8 2f       	mov	r28, r24
     552:	d6 2f       	mov	r29, r22
     554:	14 2f       	mov	r17, r20
     556:	e2 2e       	mov	r14, r18
     558:	80 2f       	mov	r24, r16
	uint8_t addr;

	//Convert all decimal values to their corresponding BCD values
	Seconds = Dec2bcd(Seconds);
     55a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     55e:	f8 2e       	mov	r15, r24
	Minutes = Dec2bcd(Minutes);
     560:	8e 2d       	mov	r24, r14
     562:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     566:	08 2f       	mov	r16, r24
	Hours   = Dec2bcd(Hours);
     568:	81 2f       	mov	r24, r17
     56a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     56e:	18 2f       	mov	r17, r24
	DayDate = Dec2bcd(DayDate);	//Either Day or Date can be used. Not both.
     570:	8d 2f       	mov	r24, r29
     572:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     576:	d8 2f       	mov	r29, r24
	
	//Set Alarm Control Bits based on Alarm Mask Bits
	//Seconds
	if (BitCheck(Alarm, 0))
     578:	c0 ff       	sbrs	r28, 0
     57a:	03 c0       	rjmp	.+6      	; 0x582 <RTC_AlarmSet+0x3e>
		BitSet(Seconds, __RTC_A1M1);
     57c:	8f 2d       	mov	r24, r15
     57e:	80 68       	ori	r24, 0x80	; 128
     580:	f8 2e       	mov	r15, r24
	//Minutes
	if (BitCheck(Alarm, 1))
     582:	c1 fd       	sbrc	r28, 1
		BitSet(Minutes, __RTC_A1M2);
     584:	00 68       	ori	r16, 0x80	; 128
	//Hours
	if (BitCheck(Alarm, 2))
     586:	c2 fd       	sbrc	r28, 2
		BitSet(Hours, __RTC_A1M3);
     588:	10 68       	ori	r17, 0x80	; 128
	//Day-Date value
	if (BitCheck(Alarm, 3))
     58a:	c3 fd       	sbrc	r28, 3
		BitSet(DayDate, __RTC_A1M4);
     58c:	d0 68       	ori	r29, 0x80	; 128
	//Day-Date flag
	if (BitCheck(Alarm, 4))
     58e:	c4 fd       	sbrc	r28, 4
		BitSet(DayDate, __RTC_DYDT);
     590:	d0 64       	ori	r29, 0x40	; 64
	
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
     592:	cc 23       	and	r28, r28
     594:	34 f0       	brlt	.+12     	; 0x5a2 <RTC_AlarmSet+0x5e>
	//Alarm 1
	else
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
     596:	6f 2d       	mov	r22, r15
     598:	87 e0       	ldi	r24, 0x07	; 7
     59a:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     59e:	c8 e0       	ldi	r28, 0x08	; 8
     5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <RTC_AlarmSet+0x60>
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
	{
		//Alarm 2 does not have seconds register
		addr = __RTC_Address_Alarm2_Minutes;
     5a2:	cb e0       	ldi	r28, 0x0B	; 11
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
	}
	RTC_WriteByte(addr++, Minutes);
     5a4:	ff 24       	eor	r15, r15
     5a6:	f3 94       	inc	r15
     5a8:	fc 0e       	add	r15, r28
     5aa:	60 2f       	mov	r22, r16
     5ac:	8c 2f       	mov	r24, r28
     5ae:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, Hours);
     5b2:	ce 5f       	subi	r28, 0xFE	; 254
     5b4:	61 2f       	mov	r22, r17
     5b6:	8f 2d       	mov	r24, r15
     5b8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, DayDate);
     5bc:	6d 2f       	mov	r22, r29
     5be:	8c 2f       	mov	r24, r28
     5c0:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <RTC_AlarmInterrupt>:

//Set alarm interrupt pin 
uint8_t RTC_AlarmInterrupt(Alarm_Number_t Alarm, uint8_t Enable)
{
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	d8 2f       	mov	r29, r24
     5d8:	c6 2f       	mov	r28, r22
	//Enable INTCN
	FlagWrite(__RTC_Address_Control, __RTC_INTCN, Enable);
     5da:	46 2f       	mov	r20, r22
     5dc:	62 e0       	ldi	r22, 0x02	; 2
     5de:	8e e0       	ldi	r24, 0x0E	; 14
     5e0:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
		
	//Enable alarm
	return (FlagWrite(__RTC_Address_Control, Alarm, Enable));
     5e4:	4c 2f       	mov	r20, r28
     5e6:	6d 2f       	mov	r22, r29
     5e8:	8e e0       	ldi	r24, 0x0E	; 14
     5ea:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <RTC_AlarmCheck>:

//Check if alarm rung. 
uint8_t RTC_AlarmCheck(Alarm_Number_t Alarm)
{
	return (FlagWrite(__RTC_Address_Status, Alarm, False));
     5f4:	40 e0       	ldi	r20, 0x00	; 0
     5f6:	68 2f       	mov	r22, r24
     5f8:	8f e0       	ldi	r24, 0x0F	; 15
     5fa:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
}
     5fe:	08 95       	ret

00000600 <i2c_master_init>:
	}
	
	i2c_master_stop();
	
	return I2C_STATUS_SUCCESS;
}
     600:	9b 01       	movw	r18, r22
     602:	ac 01       	movw	r20, r24
     604:	11 b8       	out	0x01, r1	; 1
     606:	60 e0       	ldi	r22, 0x00	; 0
     608:	72 e1       	ldi	r23, 0x12	; 18
     60a:	8a e7       	ldi	r24, 0x7A	; 122
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	0e 94 9b 09 	call	0x1336	; 0x1336 <__udivmodsi4>
     612:	da 01       	movw	r26, r20
     614:	c9 01       	movw	r24, r18
     616:	40 97       	sbiw	r24, 0x10	; 16
     618:	a1 09       	sbc	r26, r1
     61a:	b1 09       	sbc	r27, r1
     61c:	b6 95       	lsr	r27
     61e:	a7 95       	ror	r26
     620:	97 95       	ror	r25
     622:	87 95       	ror	r24
     624:	80 b9       	out	0x00, r24	; 0
     626:	08 95       	ret

00000628 <i2c_master_start>:
     628:	16 be       	out	0x36, r1	; 54
     62a:	94 ea       	ldi	r25, 0xA4	; 164
     62c:	96 bf       	out	0x36, r25	; 54
     62e:	06 b6       	in	r0, 0x36	; 54
     630:	07 fe       	sbrs	r0, 7
     632:	fd cf       	rjmp	.-6      	; 0x62e <i2c_master_start+0x6>
     634:	91 b1       	in	r25, 0x01	; 1
     636:	98 7f       	andi	r25, 0xF8	; 248
     638:	98 30       	cpi	r25, 0x08	; 8
     63a:	11 f0       	breq	.+4      	; 0x640 <i2c_master_start+0x18>
     63c:	90 31       	cpi	r25, 0x10	; 16
     63e:	91 f4       	brne	.+36     	; 0x664 <i2c_master_start+0x3c>
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	88 0f       	add	r24, r24
     644:	99 1f       	adc	r25, r25
     646:	86 2b       	or	r24, r22
     648:	83 b9       	out	0x03, r24	; 3
     64a:	84 e8       	ldi	r24, 0x84	; 132
     64c:	86 bf       	out	0x36, r24	; 54
     64e:	06 b6       	in	r0, 0x36	; 54
     650:	07 fe       	sbrs	r0, 7
     652:	fd cf       	rjmp	.-6      	; 0x64e <i2c_master_start+0x26>
     654:	81 b1       	in	r24, 0x01	; 1
     656:	88 7f       	andi	r24, 0xF8	; 248
     658:	88 31       	cpi	r24, 0x18	; 24
     65a:	31 f0       	breq	.+12     	; 0x668 <i2c_master_start+0x40>
     65c:	80 34       	cpi	r24, 0x40	; 64
     65e:	31 f4       	brne	.+12     	; 0x66c <i2c_master_start+0x44>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	08 95       	ret
     664:	8a e0       	ldi	r24, 0x0A	; 10
     666:	08 95       	ret
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	08 95       	ret
     66c:	84 e1       	ldi	r24, 0x14	; 20
     66e:	08 95       	ret

00000670 <i2c_master_write>:
     670:	83 b9       	out	0x03, r24	; 3
     672:	84 e8       	ldi	r24, 0x84	; 132
     674:	86 bf       	out	0x36, r24	; 54
     676:	06 b6       	in	r0, 0x36	; 54
     678:	07 fe       	sbrs	r0, 7
     67a:	fd cf       	rjmp	.-6      	; 0x676 <i2c_master_write+0x6>
     67c:	81 b1       	in	r24, 0x01	; 1
     67e:	88 7f       	andi	r24, 0xF8	; 248
     680:	88 32       	cpi	r24, 0x28	; 40
     682:	11 f0       	breq	.+4      	; 0x688 <i2c_master_write+0x18>
     684:	85 e1       	ldi	r24, 0x15	; 21
     686:	08 95       	ret
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	08 95       	ret

0000068c <i2c_master_stop>:
     68c:	84 e9       	ldi	r24, 0x94	; 148
     68e:	86 bf       	out	0x36, r24	; 54
     690:	08 95       	ret

00000692 <i2c_master_sendByte>:

uint8_t i2c_master_sendByte(uint8_t address, uint8_t data)
{
     692:	cf 93       	push	r28
     694:	c6 2f       	mov	r28, r22
	uint8_t status = i2c_master_start(address, I2C_WRITE);
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	0e 94 14 03 	call	0x628	; 0x628 <i2c_master_start>
	if (status) return status;
     69c:	81 11       	cpse	r24, r1
     69e:	08 c0       	rjmp	.+16     	; 0x6b0 <i2c_master_sendByte+0x1e>

	status = i2c_master_write(data);
     6a0:	8c 2f       	mov	r24, r28
     6a2:	0e 94 38 03 	call	0x670	; 0x670 <i2c_master_write>
	if (status) return status;
     6a6:	81 11       	cpse	r24, r1
     6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <i2c_master_sendByte+0x1e>

	i2c_master_stop();
     6aa:	0e 94 46 03 	call	0x68c	; 0x68c <i2c_master_stop>
	
	return I2C_STATUS_SUCCESS;
     6ae:	80 e0       	ldi	r24, 0x00	; 0
};
     6b0:	cf 91       	pop	r28
     6b2:	08 95       	ret

000006b4 <lq_transmitI2C>:

	for (i = 0; i < 8; i++) 
	{
		lq_writeDeviceByte(device, charmap[i], LCD_REGISTER_SELECT_BIT);
	}
}
     6b4:	fc 01       	movw	r30, r24
     6b6:	23 81       	ldd	r18, Z+3	; 0x03
     6b8:	62 2b       	or	r22, r18
     6ba:	80 81       	ld	r24, Z
     6bc:	0e 94 49 03 	call	0x692	; 0x692 <i2c_master_sendByte>
     6c0:	08 95       	ret

000006c2 <lq_writeDevicePulse>:
     6c2:	0f 93       	push	r16
     6c4:	1f 93       	push	r17
     6c6:	cf 93       	push	r28
     6c8:	8c 01       	movw	r16, r24
     6ca:	c6 2f       	mov	r28, r22
     6cc:	64 60       	ori	r22, 0x04	; 4
     6ce:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <lq_transmitI2C>
     6d2:	8a e0       	ldi	r24, 0x0A	; 10
     6d4:	8a 95       	dec	r24
     6d6:	f1 f7       	brne	.-4      	; 0x6d4 <lq_writeDevicePulse+0x12>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <lq_writeDevicePulse+0x18>
     6da:	6c 2f       	mov	r22, r28
     6dc:	6b 7f       	andi	r22, 0xFB	; 251
     6de:	c8 01       	movw	r24, r16
     6e0:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <lq_transmitI2C>
     6e4:	87 ec       	ldi	r24, 0xC7	; 199
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	01 97       	sbiw	r24, 0x01	; 1
     6ea:	f1 f7       	brne	.-4      	; 0x6e8 <lq_writeDevicePulse+0x26>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <lq_writeDevicePulse+0x2c>
     6ee:	00 00       	nop
     6f0:	cf 91       	pop	r28
     6f2:	1f 91       	pop	r17
     6f4:	0f 91       	pop	r16
     6f6:	08 95       	ret

000006f8 <lq_writeDevice4Bits>:
     6f8:	1f 93       	push	r17
     6fa:	cf 93       	push	r28
     6fc:	df 93       	push	r29
     6fe:	ec 01       	movw	r28, r24
     700:	16 2f       	mov	r17, r22
     702:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <lq_transmitI2C>
     706:	61 2f       	mov	r22, r17
     708:	ce 01       	movw	r24, r28
     70a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <lq_writeDevicePulse>
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	1f 91       	pop	r17
     714:	08 95       	ret

00000716 <lq_writeDeviceByte>:
     716:	ff 92       	push	r15
     718:	0f 93       	push	r16
     71a:	1f 93       	push	r17
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	8c 01       	movw	r16, r24
     722:	f4 2e       	mov	r15, r20
     724:	86 2f       	mov	r24, r22
     726:	80 7f       	andi	r24, 0xF0	; 240
     728:	90 e1       	ldi	r25, 0x10	; 16
     72a:	69 9f       	mul	r22, r25
     72c:	e0 01       	movw	r28, r0
     72e:	11 24       	eor	r1, r1
     730:	68 2f       	mov	r22, r24
     732:	64 2b       	or	r22, r20
     734:	c8 01       	movw	r24, r16
     736:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <lq_writeDevice4Bits>
     73a:	6c 2f       	mov	r22, r28
     73c:	6f 29       	or	r22, r15
     73e:	c8 01       	movw	r24, r16
     740:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <lq_writeDevice4Bits>
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	ff 90       	pop	r15
     74e:	08 95       	ret

00000750 <lq_print>:
     750:	0f 93       	push	r16
     752:	1f 93       	push	r17
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	8c 01       	movw	r16, r24
     75a:	eb 01       	movw	r28, r22
     75c:	68 81       	ld	r22, Y
     75e:	06 c0       	rjmp	.+12     	; 0x76c <lq_print+0x1c>
     760:	41 e0       	ldi	r20, 0x01	; 1
     762:	c8 01       	movw	r24, r16
     764:	0e 94 8b 03 	call	0x716	; 0x716 <lq_writeDeviceByte>
     768:	21 96       	adiw	r28, 0x01	; 1
     76a:	68 81       	ld	r22, Y
     76c:	61 11       	cpse	r22, r1
     76e:	f8 cf       	rjmp	.-16     	; 0x760 <lq_print+0x10>
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	0f 91       	pop	r16
     778:	08 95       	ret

0000077a <lq_sendCommand>:
     77a:	40 e0       	ldi	r20, 0x00	; 0
     77c:	0e 94 8b 03 	call	0x716	; 0x716 <lq_writeDeviceByte>
     780:	08 95       	ret

00000782 <lq_setCursor>:
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	00 d0       	rcall	.+0      	; 0x788 <lq_setCursor+0x6>
     788:	00 d0       	rcall	.+0      	; 0x78a <lq_setCursor+0x8>
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	19 82       	std	Y+1, r1	; 0x01
     790:	20 e4       	ldi	r18, 0x40	; 64
     792:	2a 83       	std	Y+2, r18	; 0x02
     794:	24 e1       	ldi	r18, 0x14	; 20
     796:	2b 83       	std	Y+3, r18	; 0x03
     798:	24 e5       	ldi	r18, 0x54	; 84
     79a:	2c 83       	std	Y+4, r18	; 0x04
     79c:	e1 e0       	ldi	r30, 0x01	; 1
     79e:	f0 e0       	ldi	r31, 0x00	; 0
     7a0:	ec 0f       	add	r30, r28
     7a2:	fd 1f       	adc	r31, r29
     7a4:	e6 0f       	add	r30, r22
     7a6:	f1 1d       	adc	r31, r1
     7a8:	60 81       	ld	r22, Z
     7aa:	64 0f       	add	r22, r20
     7ac:	60 68       	ori	r22, 0x80	; 128
     7ae:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
     7b2:	0f 90       	pop	r0
     7b4:	0f 90       	pop	r0
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	08 95       	ret

000007c0 <lq_clear>:
     7c0:	cf 93       	push	r28
     7c2:	df 93       	push	r29
     7c4:	ec 01       	movw	r28, r24
     7c6:	61 e0       	ldi	r22, 0x01	; 1
     7c8:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
     7cc:	8f e3       	ldi	r24, 0x3F	; 63
     7ce:	9f e1       	ldi	r25, 0x1F	; 31
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	f1 f7       	brne	.-4      	; 0x7d0 <lq_clear+0x10>
     7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <lq_clear+0x16>
     7d6:	00 00       	nop
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	ce 01       	movw	r24, r28
     7de:	0e 94 c1 03 	call	0x782	; 0x782 <lq_setCursor>
     7e2:	df 91       	pop	r29
     7e4:	cf 91       	pop	r28
     7e6:	08 95       	ret

000007e8 <lq_returnHome>:
     7e8:	62 e0       	ldi	r22, 0x02	; 2
     7ea:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
     7ee:	8f e3       	ldi	r24, 0x3F	; 63
     7f0:	9f e1       	ldi	r25, 0x1F	; 31
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	f1 f7       	brne	.-4      	; 0x7f2 <lq_returnHome+0xa>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <lq_returnHome+0x10>
     7f8:	00 00       	nop
     7fa:	08 95       	ret

000007fc <lq_turnOnDisplay>:
     7fc:	fc 01       	movw	r30, r24
     7fe:	65 81       	ldd	r22, Z+5	; 0x05
     800:	26 2f       	mov	r18, r22
     802:	24 60       	ori	r18, 0x04	; 4
     804:	25 83       	std	Z+5, r18	; 0x05
     806:	6c 60       	ori	r22, 0x0C	; 12
     808:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
     80c:	08 95       	ret

0000080e <lq_init>:

#include <avr/io.h>
#include <util/delay.h>

LiquidCrystalDevice_t lq_init(uint8_t address, uint8_t columns, uint8_t rows, uint8_t dotSize)
{
     80e:	cf 93       	push	r28
     810:	df 93       	push	r29
     812:	cd b7       	in	r28, 0x3d	; 61
     814:	de b7       	in	r29, 0x3e	; 62
     816:	2e 97       	sbiw	r28, 0x0e	; 14
     818:	0f b6       	in	r0, 0x3f	; 63
     81a:	f8 94       	cli
     81c:	de bf       	out	0x3e, r29	; 62
     81e:	0f be       	out	0x3f, r0	; 63
     820:	cd bf       	out	0x3d, r28	; 61
	LiquidCrystalDevice_t device;

	device.Address = address;
     822:	88 87       	std	Y+8, r24	; 0x08
	device.Columns = columns;
     824:	69 87       	std	Y+9, r22	; 0x09
	device.Rows = rows;
     826:	4a 87       	std	Y+10, r20	; 0x0a
	device.Backlight = LCD_NOBACKLIGHT;
     828:	1b 86       	std	Y+11, r1	; 0x0b
	device.DisplayFunction = LCD_4BITMODE | LCD_1LINE | dotSize;
     82a:	2c 87       	std	Y+12, r18	; 0x0c
	device.DisplayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
     82c:	84 e0       	ldi	r24, 0x04	; 4
     82e:	8d 87       	std	Y+13, r24	; 0x0d

	// Initialize to default text direction (for roman languages)
	device.DisplayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     830:	82 e0       	ldi	r24, 0x02	; 2
     832:	8e 87       	std	Y+14, r24	; 0x0e

	if (rows > 1) {
     834:	42 30       	cpi	r20, 0x02	; 2
     836:	18 f0       	brcs	.+6      	; 0x83e <lq_init+0x30>
		device.DisplayFunction |= LCD_2LINE;
     838:	82 2f       	mov	r24, r18
     83a:	88 60       	ori	r24, 0x08	; 8
     83c:	8c 87       	std	Y+12, r24	; 0x0c
	}

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotSize != 0) && (rows == 1)) {
     83e:	22 23       	and	r18, r18
     840:	29 f0       	breq	.+10     	; 0x84c <lq_init+0x3e>
     842:	41 30       	cpi	r20, 0x01	; 1
     844:	19 f4       	brne	.+6      	; 0x84c <lq_init+0x3e>
		device.DisplayFunction |= LCD_5x10DOTS;
     846:	8c 85       	ldd	r24, Y+12	; 0x0c
     848:	84 60       	ori	r24, 0x04	; 4
     84a:	8c 87       	std	Y+12, r24	; 0x0c
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     84c:	2f ef       	ldi	r18, 0xFF	; 255
     84e:	81 ee       	ldi	r24, 0xE1	; 225
     850:	94 e0       	ldi	r25, 0x04	; 4
     852:	21 50       	subi	r18, 0x01	; 1
     854:	80 40       	sbci	r24, 0x00	; 0
     856:	90 40       	sbci	r25, 0x00	; 0
     858:	e1 f7       	brne	.-8      	; 0x852 <lq_init+0x44>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <lq_init+0x4e>
     85c:	00 00       	nop
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	_delay_ms(100);
	
	// Now we pull both RS and R/W low to begin commands
	lq_transmitI2C(&device, LCD_NOBACKLIGHT);	// reset expanderand turn backlight off (Bit 8 =1)
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	ce 01       	movw	r24, r28
     862:	08 96       	adiw	r24, 0x08	; 8
     864:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <lq_transmitI2C>
     868:	2f ef       	ldi	r18, 0xFF	; 255
     86a:	81 ee       	ldi	r24, 0xE1	; 225
     86c:	94 e0       	ldi	r25, 0x04	; 4
     86e:	21 50       	subi	r18, 0x01	; 1
     870:	80 40       	sbci	r24, 0x00	; 0
     872:	90 40       	sbci	r25, 0x00	; 0
     874:	e1 f7       	brne	.-8      	; 0x86e <__stack+0xf>
     876:	00 c0       	rjmp	.+0      	; 0x878 <__stack+0x19>
     878:	00 00       	nop
	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	// we start in 8bit mode, try to set 4 bit mode
	lq_transmitI2C(&device, 0x03 << 4);
     87a:	60 e3       	ldi	r22, 0x30	; 48
     87c:	ce 01       	movw	r24, r28
     87e:	08 96       	adiw	r24, 0x08	; 8
     880:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <lq_transmitI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     884:	8f e4       	ldi	r24, 0x4F	; 79
     886:	96 e4       	ldi	r25, 0x46	; 70
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	f1 f7       	brne	.-4      	; 0x888 <__stack+0x29>
     88c:	00 c0       	rjmp	.+0      	; 0x88e <__stack+0x2f>
     88e:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// second try
	lq_writeDevice4Bits(&device, 0x03 << 4);
     890:	60 e3       	ldi	r22, 0x30	; 48
     892:	ce 01       	movw	r24, r28
     894:	08 96       	adiw	r24, 0x08	; 8
     896:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <lq_writeDevice4Bits>
     89a:	8f e4       	ldi	r24, 0x4F	; 79
     89c:	96 e4       	ldi	r25, 0x46	; 70
     89e:	01 97       	sbiw	r24, 0x01	; 1
     8a0:	f1 f7       	brne	.-4      	; 0x89e <__stack+0x3f>
     8a2:	00 c0       	rjmp	.+0      	; 0x8a4 <__stack+0x45>
     8a4:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// third go!
	lq_writeDevice4Bits(&device, 0x03 << 4);
     8a6:	60 e3       	ldi	r22, 0x30	; 48
     8a8:	ce 01       	movw	r24, r28
     8aa:	08 96       	adiw	r24, 0x08	; 8
     8ac:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <lq_writeDevice4Bits>
     8b0:	87 e5       	ldi	r24, 0x57	; 87
     8b2:	92 e0       	ldi	r25, 0x02	; 2
     8b4:	01 97       	sbiw	r24, 0x01	; 1
     8b6:	f1 f7       	brne	.-4      	; 0x8b4 <__stack+0x55>
     8b8:	00 c0       	rjmp	.+0      	; 0x8ba <__stack+0x5b>
     8ba:	00 00       	nop
	_delay_us(150); // wait min 150 mics
	
	// finally, set to 4-bit interface
	lq_writeDevice4Bits(&device, 0x02 << 4);
     8bc:	60 e2       	ldi	r22, 0x20	; 32
     8be:	ce 01       	movw	r24, r28
     8c0:	08 96       	adiw	r24, 0x08	; 8
     8c2:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <lq_writeDevice4Bits>

	// set # lines, font size, etc.
	lq_sendCommand(&device, LCD_FUNCTIONSET | device.DisplayFunction);
     8c6:	6c 85       	ldd	r22, Y+12	; 0x0c
     8c8:	60 62       	ori	r22, 0x20	; 32
     8ca:	ce 01       	movw	r24, r28
     8cc:	08 96       	adiw	r24, 0x08	; 8
     8ce:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
	
	// turn the display on with no cursor or blinking default
	lq_turnOnDisplay(&device);
     8d2:	ce 01       	movw	r24, r28
     8d4:	08 96       	adiw	r24, 0x08	; 8
     8d6:	0e 94 fe 03 	call	0x7fc	; 0x7fc <lq_turnOnDisplay>
	
	// clear it off
	lq_clear(&device);
     8da:	ce 01       	movw	r24, r28
     8dc:	08 96       	adiw	r24, 0x08	; 8
     8de:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <lq_clear>
	
	// set the entry mode
	lq_sendCommand(&device, LCD_ENTRYMODESET | device.DisplayMode);
     8e2:	6e 85       	ldd	r22, Y+14	; 0x0e
     8e4:	64 60       	ori	r22, 0x04	; 4
     8e6:	ce 01       	movw	r24, r28
     8e8:	08 96       	adiw	r24, 0x08	; 8
     8ea:	0e 94 bd 03 	call	0x77a	; 0x77a <lq_sendCommand>
	
	lq_returnHome(&device);
     8ee:	ce 01       	movw	r24, r28
     8f0:	08 96       	adiw	r24, 0x08	; 8
     8f2:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <lq_returnHome>

	return device;
     8f6:	87 e0       	ldi	r24, 0x07	; 7
     8f8:	fe 01       	movw	r30, r28
     8fa:	38 96       	adiw	r30, 0x08	; 8
     8fc:	de 01       	movw	r26, r28
     8fe:	11 96       	adiw	r26, 0x01	; 1
     900:	01 90       	ld	r0, Z+
     902:	0d 92       	st	X+, r0
     904:	8a 95       	dec	r24
     906:	e1 f7       	brne	.-8      	; 0x900 <__stack+0xa1>
     908:	29 81       	ldd	r18, Y+1	; 0x01
     90a:	3a 81       	ldd	r19, Y+2	; 0x02
     90c:	4b 81       	ldd	r20, Y+3	; 0x03
     90e:	5c 81       	ldd	r21, Y+4	; 0x04
     910:	6d 81       	ldd	r22, Y+5	; 0x05
     912:	7e 81       	ldd	r23, Y+6	; 0x06
};
     914:	8f 81       	ldd	r24, Y+7	; 0x07
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	2e 96       	adiw	r28, 0x0e	; 14
     91a:	0f b6       	in	r0, 0x3f	; 63
     91c:	f8 94       	cli
     91e:	de bf       	out	0x3e, r29	; 62
     920:	0f be       	out	0x3f, r0	; 63
     922:	cd bf       	out	0x3d, r28	; 61
     924:	df 91       	pop	r29
     926:	cf 91       	pop	r28
     928:	08 95       	ret

0000092a <__vector_1>:
	char distanceStr[20];
	snprintf(distanceStr, sizeof(distanceStr), "%.2f", distance);
	
	// Send the distance string over UART
	serial_send_string(distanceStr);
}
     92a:	1f 92       	push	r1
     92c:	0f 92       	push	r0
     92e:	0f b6       	in	r0, 0x3f	; 63
     930:	0f 92       	push	r0
     932:	11 24       	eor	r1, r1
     934:	2f 93       	push	r18
     936:	3f 93       	push	r19
     938:	4f 93       	push	r20
     93a:	5f 93       	push	r21
     93c:	6f 93       	push	r22
     93e:	7f 93       	push	r23
     940:	8f 93       	push	r24
     942:	9f 93       	push	r25
     944:	af 93       	push	r26
     946:	bf 93       	push	r27
     948:	ef 93       	push	r30
     94a:	ff 93       	push	r31
     94c:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <isInAutomaticMode>
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	89 27       	eor	r24, r25
     954:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <isInAutomaticMode>
     958:	81 11       	cpse	r24, r1
     95a:	0a c0       	rjmp	.+20     	; 0x970 <__vector_1+0x46>
     95c:	86 e7       	ldi	r24, 0x76	; 118
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <isTrashOpen>
     96a:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <measurementFlag>
     96e:	06 c0       	rjmp	.+12     	; 0x97c <__vector_1+0x52>
     970:	8d e8       	ldi	r24, 0x8D	; 141
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     978:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <isTrashOpen>
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <isMotorWorking>
     982:	ff 91       	pop	r31
     984:	ef 91       	pop	r30
     986:	bf 91       	pop	r27
     988:	af 91       	pop	r26
     98a:	9f 91       	pop	r25
     98c:	8f 91       	pop	r24
     98e:	7f 91       	pop	r23
     990:	6f 91       	pop	r22
     992:	5f 91       	pop	r21
     994:	4f 91       	pop	r20
     996:	3f 91       	pop	r19
     998:	2f 91       	pop	r18
     99a:	0f 90       	pop	r0
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	0f 90       	pop	r0
     9a0:	1f 90       	pop	r1
     9a2:	18 95       	reti

000009a4 <openTrash>:
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	c0 e0       	ldi	r28, 0x00	; 0
     9aa:	d0 e0       	ldi	r29, 0x00	; 0
     9ac:	25 c0       	rjmp	.+74     	; 0x9f8 <openTrash+0x54>
     9ae:	88 e0       	ldi	r24, 0x08	; 8
     9b0:	8b bb       	out	0x1b, r24	; 27
     9b2:	8f e4       	ldi	r24, 0x4F	; 79
     9b4:	93 ec       	ldi	r25, 0xC3	; 195
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	f1 f7       	brne	.-4      	; 0x9b6 <openTrash+0x12>
     9ba:	00 c0       	rjmp	.+0      	; 0x9bc <openTrash+0x18>
     9bc:	00 00       	nop
     9be:	84 e0       	ldi	r24, 0x04	; 4
     9c0:	8b bb       	out	0x1b, r24	; 27
     9c2:	8f e4       	ldi	r24, 0x4F	; 79
     9c4:	93 ec       	ldi	r25, 0xC3	; 195
     9c6:	01 97       	sbiw	r24, 0x01	; 1
     9c8:	f1 f7       	brne	.-4      	; 0x9c6 <openTrash+0x22>
     9ca:	00 c0       	rjmp	.+0      	; 0x9cc <openTrash+0x28>
     9cc:	00 00       	nop
     9ce:	80 e1       	ldi	r24, 0x10	; 16
     9d0:	8b bb       	out	0x1b, r24	; 27
     9d2:	8f e4       	ldi	r24, 0x4F	; 79
     9d4:	93 ec       	ldi	r25, 0xC3	; 195
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	f1 f7       	brne	.-4      	; 0x9d6 <openTrash+0x32>
     9da:	00 c0       	rjmp	.+0      	; 0x9dc <openTrash+0x38>
     9dc:	00 00       	nop
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	8b bb       	out	0x1b, r24	; 27
     9e2:	8f e4       	ldi	r24, 0x4F	; 79
     9e4:	93 ec       	ldi	r25, 0xC3	; 195
     9e6:	01 97       	sbiw	r24, 0x01	; 1
     9e8:	f1 f7       	brne	.-4      	; 0x9e6 <openTrash+0x42>
     9ea:	00 c0       	rjmp	.+0      	; 0x9ec <openTrash+0x48>
     9ec:	00 00       	nop
     9ee:	87 ea       	ldi	r24, 0xA7	; 167
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     9f6:	21 96       	adiw	r28, 0x01	; 1
     9f8:	c5 30       	cpi	r28, 0x05	; 5
     9fa:	d1 05       	cpc	r29, r1
     9fc:	c4 f2       	brlt	.-80     	; 0x9ae <openTrash+0xa>
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <isTrashCompleteOpen>
     a04:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <isTrashCompleteClose>
     a08:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <isMotorWorking>
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	08 95       	ret

00000a12 <closeTrash>:
     a12:	cf 93       	push	r28
     a14:	df 93       	push	r29
     a16:	c0 e0       	ldi	r28, 0x00	; 0
     a18:	d0 e0       	ldi	r29, 0x00	; 0
     a1a:	25 c0       	rjmp	.+74     	; 0xa66 <closeTrash+0x54>
     a1c:	82 e0       	ldi	r24, 0x02	; 2
     a1e:	8b bb       	out	0x1b, r24	; 27
     a20:	8f e4       	ldi	r24, 0x4F	; 79
     a22:	93 ec       	ldi	r25, 0xC3	; 195
     a24:	01 97       	sbiw	r24, 0x01	; 1
     a26:	f1 f7       	brne	.-4      	; 0xa24 <closeTrash+0x12>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <closeTrash+0x18>
     a2a:	00 00       	nop
     a2c:	80 e1       	ldi	r24, 0x10	; 16
     a2e:	8b bb       	out	0x1b, r24	; 27
     a30:	8f e4       	ldi	r24, 0x4F	; 79
     a32:	93 ec       	ldi	r25, 0xC3	; 195
     a34:	01 97       	sbiw	r24, 0x01	; 1
     a36:	f1 f7       	brne	.-4      	; 0xa34 <closeTrash+0x22>
     a38:	00 c0       	rjmp	.+0      	; 0xa3a <closeTrash+0x28>
     a3a:	00 00       	nop
     a3c:	84 e0       	ldi	r24, 0x04	; 4
     a3e:	8b bb       	out	0x1b, r24	; 27
     a40:	8f e4       	ldi	r24, 0x4F	; 79
     a42:	93 ec       	ldi	r25, 0xC3	; 195
     a44:	01 97       	sbiw	r24, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <closeTrash+0x32>
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <closeTrash+0x38>
     a4a:	00 00       	nop
     a4c:	88 e0       	ldi	r24, 0x08	; 8
     a4e:	8b bb       	out	0x1b, r24	; 27
     a50:	8f e4       	ldi	r24, 0x4F	; 79
     a52:	93 ec       	ldi	r25, 0xC3	; 195
     a54:	01 97       	sbiw	r24, 0x01	; 1
     a56:	f1 f7       	brne	.-4      	; 0xa54 <closeTrash+0x42>
     a58:	00 c0       	rjmp	.+0      	; 0xa5a <closeTrash+0x48>
     a5a:	00 00       	nop
     a5c:	84 eb       	ldi	r24, 0xB4	; 180
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     a64:	21 96       	adiw	r28, 0x01	; 1
     a66:	c5 30       	cpi	r28, 0x05	; 5
     a68:	d1 05       	cpc	r29, r1
     a6a:	c4 f2       	brlt	.-80     	; 0xa1c <closeTrash+0xa>
     a6c:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <isTrashCompleteOpen>
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <isTrashCompleteClose>
     a76:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <isMotorWorking>
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <initClock>:
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
     a88:	28 97       	sbiw	r28, 0x08	; 8
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	f8 94       	cli
     a8e:	de bf       	out	0x3e, r29	; 62
     a90:	0f be       	out	0x3f, r0	; 63
     a92:	cd bf       	out	0x3d, r28	; 61
     a94:	89 ee       	ldi	r24, 0xE9	; 233
     a96:	97 e0       	ldi	r25, 0x07	; 7
     a98:	27 e3       	ldi	r18, 0x37	; 55
     a9a:	3b e3       	ldi	r19, 0x3B	; 59
     a9c:	43 e1       	ldi	r20, 0x13	; 19
     a9e:	52 e0       	ldi	r21, 0x02	; 2
     aa0:	6d e1       	ldi	r22, 0x1D	; 29
     aa2:	76 e0       	ldi	r23, 0x06	; 6
     aa4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
     aa8:	28 96       	adiw	r28, 0x08	; 8
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	f8 94       	cli
     aae:	de bf       	out	0x3e, r29	; 62
     ab0:	0f be       	out	0x3f, r0	; 63
     ab2:	cd bf       	out	0x3d, r28	; 61
     ab4:	df 91       	pop	r29
     ab6:	cf 91       	pop	r28
     ab8:	08 95       	ret

00000aba <initBuzzer>:
     aba:	81 b3       	in	r24, 0x11	; 17
     abc:	80 68       	ori	r24, 0x80	; 128
     abe:	81 bb       	out	0x11, r24	; 17
     ac0:	82 b3       	in	r24, 0x12	; 18
     ac2:	88 60       	ori	r24, 0x08	; 8
     ac4:	82 bb       	out	0x12, r24	; 18
     ac6:	08 95       	ret

00000ac8 <turnOnBuzzer>:
     ac8:	82 b3       	in	r24, 0x12	; 18
     aca:	80 68       	ori	r24, 0x80	; 128
     acc:	82 bb       	out	0x12, r24	; 18
     ace:	08 95       	ret

00000ad0 <__vector_2>:
     ad0:	1f 92       	push	r1
     ad2:	0f 92       	push	r0
     ad4:	0f b6       	in	r0, 0x3f	; 63
     ad6:	0f 92       	push	r0
     ad8:	11 24       	eor	r1, r1
     ada:	2f 93       	push	r18
     adc:	3f 93       	push	r19
     ade:	4f 93       	push	r20
     ae0:	5f 93       	push	r21
     ae2:	6f 93       	push	r22
     ae4:	7f 93       	push	r23
     ae6:	8f 93       	push	r24
     ae8:	9f 93       	push	r25
     aea:	af 93       	push	r26
     aec:	bf 93       	push	r27
     aee:	ef 93       	push	r30
     af0:	ff 93       	push	r31
     af2:	0e 94 64 05 	call	0xac8	; 0xac8 <turnOnBuzzer>
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <buzzerOn>
     afc:	81 ec       	ldi	r24, 0xC1	; 193
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <RTC_AlarmCheck>
     b0a:	ff 91       	pop	r31
     b0c:	ef 91       	pop	r30
     b0e:	bf 91       	pop	r27
     b10:	af 91       	pop	r26
     b12:	9f 91       	pop	r25
     b14:	8f 91       	pop	r24
     b16:	7f 91       	pop	r23
     b18:	6f 91       	pop	r22
     b1a:	5f 91       	pop	r21
     b1c:	4f 91       	pop	r20
     b1e:	3f 91       	pop	r19
     b20:	2f 91       	pop	r18
     b22:	0f 90       	pop	r0
     b24:	0f be       	out	0x3f, r0	; 63
     b26:	0f 90       	pop	r0
     b28:	1f 90       	pop	r1
     b2a:	18 95       	reti

00000b2c <turnOffBuzzer>:
     b2c:	82 b3       	in	r24, 0x12	; 18
     b2e:	8f 77       	andi	r24, 0x7F	; 127
     b30:	82 bb       	out	0x12, r24	; 18
     b32:	08 95       	ret

00000b34 <setupAlarm>:
     b34:	0f 93       	push	r16
     b36:	8b b7       	in	r24, 0x3b	; 59
     b38:	80 68       	ori	r24, 0x80	; 128
     b3a:	8b bf       	out	0x3b, r24	; 59
     b3c:	85 b7       	in	r24, 0x35	; 53
     b3e:	88 60       	ori	r24, 0x08	; 8
     b40:	85 bf       	out	0x35, r24	; 53
     b42:	61 e0       	ldi	r22, 0x01	; 1
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <RTC_AlarmInterrupt>
     b4a:	00 91 6a 01 	lds	r16, 0x016A	; 0x80016a <alarmSeconds>
     b4e:	20 91 6b 01 	lds	r18, 0x016B	; 0x80016b <alarmMinutes>
     b52:	40 91 75 00 	lds	r20, 0x0075	; 0x800075 <alarmHours>
     b56:	60 91 77 01 	lds	r22, 0x0177	; 0x800177 <t+0x4>
     b5a:	88 e0       	ldi	r24, 0x08	; 8
     b5c:	0e 94 a2 02 	call	0x544	; 0x544 <RTC_AlarmSet>
     b60:	0f 91       	pop	r16
     b62:	08 95       	ret

00000b64 <sensorInit>:
     b64:	87 b3       	in	r24, 0x17	; 23
     b66:	82 60       	ori	r24, 0x02	; 2
     b68:	87 bb       	out	0x17, r24	; 23
     b6a:	08 95       	ret

00000b6c <ADC_Init>:
     b6c:	80 ec       	ldi	r24, 0xC0	; 192
     b6e:	87 b9       	out	0x07, r24	; 7
     b70:	87 e8       	ldi	r24, 0x87	; 135
     b72:	86 b9       	out	0x06, r24	; 6
     b74:	08 95       	ret

00000b76 <adcRead>:
     b76:	86 b1       	in	r24, 0x06	; 6
     b78:	80 65       	ori	r24, 0x50	; 80
     b7a:	86 b9       	out	0x06, r24	; 6
     b7c:	86 b1       	in	r24, 0x06	; 6
     b7e:	84 b1       	in	r24, 0x04	; 4
     b80:	95 b1       	in	r25, 0x05	; 5
     b82:	08 95       	ret

00000b84 <calculateTemp>:
     b84:	0f 93       	push	r16
     b86:	1f 93       	push	r17
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	2a 97       	sbiw	r28, 0x0a	; 10
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
     b9c:	0e 94 bb 05 	call	0xb76	; 0xb76 <adcRead>
     ba0:	0e 94 bb 05 	call	0xb76	; 0xb76 <adcRead>
     ba4:	bc 01       	movw	r22, r24
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	0e 94 a0 08 	call	0x1140	; 0x1140 <__floatunsisf>
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	40 e8       	ldi	r20, 0x80	; 128
     bb4:	5e e3       	ldi	r21, 0x3E	; 62
     bb6:	0e 94 2e 09 	call	0x125c	; 0x125c <__mulsf3>
     bba:	8e 01       	movw	r16, r28
     bbc:	0f 5f       	subi	r16, 0xFF	; 255
     bbe:	1f 4f       	sbci	r17, 0xFF	; 255
     bc0:	21 e0       	ldi	r18, 0x01	; 1
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	44 e0       	ldi	r20, 0x04	; 4
     bc6:	50 e0       	ldi	r21, 0x00	; 0
     bc8:	0e 94 bd 09 	call	0x137a	; 0x137a <dtostrf>
     bcc:	4d e0       	ldi	r20, 0x0D	; 13
     bce:	61 e0       	ldi	r22, 0x01	; 1
     bd0:	8b e7       	ldi	r24, 0x7B	; 123
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	0e 94 c1 03 	call	0x782	; 0x782 <lq_setCursor>
     bd8:	b8 01       	movw	r22, r16
     bda:	8b e7       	ldi	r24, 0x7B	; 123
     bdc:	91 e0       	ldi	r25, 0x01	; 1
     bde:	0e 94 a8 03 	call	0x750	; 0x750 <lq_print>
     be2:	2a 96       	adiw	r28, 0x0a	; 10
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	de bf       	out	0x3e, r29	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	cd bf       	out	0x3d, r28	; 61
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	08 95       	ret

00000bf8 <updateLcd>:
     bf8:	ef 92       	push	r14
     bfa:	ff 92       	push	r15
     bfc:	0f 93       	push	r16
     bfe:	1f 93       	push	r17
     c00:	cf 93       	push	r28
     c02:	df 93       	push	r29
     c04:	cd b7       	in	r28, 0x3d	; 61
     c06:	de b7       	in	r29, 0x3e	; 62
     c08:	64 97       	sbiw	r28, 0x14	; 20
     c0a:	0f b6       	in	r0, 0x3f	; 63
     c0c:	f8 94       	cli
     c0e:	de bf       	out	0x3e, r29	; 62
     c10:	0f be       	out	0x3f, r0	; 63
     c12:	cd bf       	out	0x3d, r28	; 61
     c14:	0e 94 4a 02 	call	0x494	; 0x494 <RTC_Get>
     c18:	e3 e7       	ldi	r30, 0x73	; 115
     c1a:	f1 e0       	ldi	r31, 0x01	; 1
     c1c:	20 83       	st	Z, r18
     c1e:	31 83       	std	Z+1, r19	; 0x01
     c20:	42 83       	std	Z+2, r20	; 0x02
     c22:	53 83       	std	Z+3, r21	; 0x03
     c24:	64 83       	std	Z+4, r22	; 0x04
     c26:	75 83       	std	Z+5, r23	; 0x05
     c28:	86 83       	std	Z+6, r24	; 0x06
     c2a:	97 83       	std	Z+7, r25	; 0x07
     c2c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <RTC_Status>
     c30:	81 30       	cpi	r24, 0x01	; 1
     c32:	09 f0       	breq	.+2      	; 0xc36 <updateLcd+0x3e>
     c34:	49 c0       	rjmp	.+146    	; 0xcc8 <updateLcd+0xd0>
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	60 e0       	ldi	r22, 0x00	; 0
     c3a:	8b e7       	ldi	r24, 0x7B	; 123
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	0e 94 c1 03 	call	0x782	; 0x782 <lq_setCursor>
     c42:	03 e7       	ldi	r16, 0x73	; 115
     c44:	11 e0       	ldi	r17, 0x01	; 1
     c46:	f8 01       	movw	r30, r16
     c48:	20 81       	ld	r18, Z
     c4a:	91 81       	ldd	r25, Z+1	; 0x01
     c4c:	82 81       	ldd	r24, Z+2	; 0x02
     c4e:	1f 92       	push	r1
     c50:	2f 93       	push	r18
     c52:	1f 92       	push	r1
     c54:	9f 93       	push	r25
     c56:	1f 92       	push	r1
     c58:	8f 93       	push	r24
     c5a:	8e ec       	ldi	r24, 0xCE	; 206
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	9f 93       	push	r25
     c60:	8f 93       	push	r24
     c62:	7e 01       	movw	r14, r28
     c64:	fb e0       	ldi	r31, 0x0B	; 11
     c66:	ef 0e       	add	r14, r31
     c68:	f1 1c       	adc	r15, r1
     c6a:	ff 92       	push	r15
     c6c:	ef 92       	push	r14
     c6e:	0e 94 f7 09 	call	0x13ee	; 0x13ee <sprintf>
     c72:	b7 01       	movw	r22, r14
     c74:	8b e7       	ldi	r24, 0x7B	; 123
     c76:	91 e0       	ldi	r25, 0x01	; 1
     c78:	0e 94 a8 03 	call	0x750	; 0x750 <lq_print>
     c7c:	40 e0       	ldi	r20, 0x00	; 0
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	8b e7       	ldi	r24, 0x7B	; 123
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	0e 94 c1 03 	call	0x782	; 0x782 <lq_setCursor>
     c88:	f8 01       	movw	r30, r16
     c8a:	94 81       	ldd	r25, Z+4	; 0x04
     c8c:	85 81       	ldd	r24, Z+5	; 0x05
     c8e:	1f 92       	push	r1
     c90:	9f 93       	push	r25
     c92:	1f 92       	push	r1
     c94:	8f 93       	push	r24
     c96:	87 81       	ldd	r24, Z+7	; 0x07
     c98:	8f 93       	push	r24
     c9a:	86 81       	ldd	r24, Z+6	; 0x06
     c9c:	8f 93       	push	r24
     c9e:	8d ed       	ldi	r24, 0xDD	; 221
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	9f 93       	push	r25
     ca4:	8f 93       	push	r24
     ca6:	8e 01       	movw	r16, r28
     ca8:	0f 5f       	subi	r16, 0xFF	; 255
     caa:	1f 4f       	sbci	r17, 0xFF	; 255
     cac:	1f 93       	push	r17
     cae:	0f 93       	push	r16
     cb0:	0e 94 f7 09 	call	0x13ee	; 0x13ee <sprintf>
     cb4:	b8 01       	movw	r22, r16
     cb6:	8b e7       	ldi	r24, 0x7B	; 123
     cb8:	91 e0       	ldi	r25, 0x01	; 1
     cba:	0e 94 a8 03 	call	0x750	; 0x750 <lq_print>
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	f8 94       	cli
     cc2:	de bf       	out	0x3e, r29	; 62
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	cd bf       	out	0x3d, r28	; 61
     cc8:	64 96       	adiw	r28, 0x14	; 20
     cca:	0f b6       	in	r0, 0x3f	; 63
     ccc:	f8 94       	cli
     cce:	de bf       	out	0x3e, r29	; 62
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	cd bf       	out	0x3d, r28	; 61
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	1f 91       	pop	r17
     cda:	0f 91       	pop	r16
     cdc:	ff 90       	pop	r15
     cde:	ef 90       	pop	r14
     ce0:	08 95       	ret

00000ce2 <__vector_11>:
     ce2:	1f 92       	push	r1
     ce4:	0f 92       	push	r0
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	0f 92       	push	r0
     cea:	11 24       	eor	r1, r1
     cec:	2f 93       	push	r18
     cee:	3f 93       	push	r19
     cf0:	4f 93       	push	r20
     cf2:	5f 93       	push	r21
     cf4:	6f 93       	push	r22
     cf6:	7f 93       	push	r23
     cf8:	8f 93       	push	r24
     cfa:	9f 93       	push	r25
     cfc:	af 93       	push	r26
     cfe:	bf 93       	push	r27
     d00:	ef 93       	push	r30
     d02:	ff 93       	push	r31
     d04:	86 e0       	ldi	r24, 0x06	; 6
     d06:	82 bf       	out	0x32, r24	; 50
     d08:	88 b7       	in	r24, 0x38	; 56
     d0a:	81 60       	ori	r24, 0x01	; 1
     d0c:	88 bf       	out	0x38, r24	; 56
     d0e:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <distanceTimeCounter>
     d12:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <distanceTimeCounter+0x1>
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <distanceTimeCounter+0x1>
     d1c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <distanceTimeCounter>
     d20:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <updateLcd>
     d24:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <buzzerOn>
     d28:	88 23       	and	r24, r24
     d2a:	51 f0       	breq	.+20     	; 0xd40 <__vector_11+0x5e>
     d2c:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     d30:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     d34:	2f 5f       	subi	r18, 0xFF	; 255
     d36:	3f 4f       	sbci	r19, 0xFF	; 255
     d38:	30 93 59 01 	sts	0x0159, r19	; 0x800159 <__data_end+0x1>
     d3c:	20 93 58 01 	sts	0x0158, r18	; 0x800158 <__data_end>
     d40:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     d44:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     d48:	2e 33       	cpi	r18, 0x3E	; 62
     d4a:	31 05       	cpc	r19, r1
     d4c:	81 f4       	brne	.+32     	; 0xd6e <__vector_11+0x8c>
     d4e:	88 23       	and	r24, r24
     d50:	71 f0       	breq	.+28     	; 0xd6e <__vector_11+0x8c>
     d52:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <__data_end+0x1>
     d56:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <__data_end>
     d5a:	86 e0       	ldi	r24, 0x06	; 6
     d5c:	82 bf       	out	0x32, r24	; 50
     d5e:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <buzzerOn>
     d62:	0e 94 96 05 	call	0xb2c	; 0xb2c <turnOffBuzzer>
     d66:	8c ee       	ldi	r24, 0xEC	; 236
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
     d6e:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <isInAutomaticMode>
     d72:	88 23       	and	r24, r24
     d74:	09 f1       	breq	.+66     	; 0xdb8 <__vector_11+0xd6>
     d76:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <isTrashCompleteOpen>
     d7a:	88 23       	and	r24, r24
     d7c:	e9 f0       	breq	.+58     	; 0xdb8 <__vector_11+0xd6>
     d7e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <trashOpentimeCounter>
     d82:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <trashOpentimeCounter+0x1>
     d86:	01 96       	adiw	r24, 0x01	; 1
     d88:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <trashOpentimeCounter+0x1>
     d8c:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <trashOpentimeCounter>
     d90:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <trashOpentimeCounter>
     d94:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <trashOpentimeCounter+0x1>
     d98:	86 33       	cpi	r24, 0x36	; 54
     d9a:	91 40       	sbci	r25, 0x01	; 1
     d9c:	69 f4       	brne	.+26     	; 0xdb8 <__vector_11+0xd6>
     d9e:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <trashOpentimeCounter+0x1>
     da2:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <trashOpentimeCounter>
     da6:	86 e0       	ldi	r24, 0x06	; 6
     da8:	82 bf       	out	0x32, r24	; 50
     daa:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <isObjectDetected>
     dae:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <isTrashOpen>
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <isMotorWorking>
     db8:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <distanceTimeCounter>
     dbc:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <distanceTimeCounter+0x1>
     dc0:	40 97       	sbiw	r24, 0x10	; 16
     dc2:	71 f4       	brne	.+28     	; 0xde0 <__vector_11+0xfe>
     dc4:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <isInAutomaticMode>
     dc8:	88 23       	and	r24, r24
     dca:	19 f0       	breq	.+6      	; 0xdd2 <__vector_11+0xf0>
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <measurementFlag>
     dd2:	81 e0       	ldi	r24, 0x01	; 1
     dd4:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <isUpdateTemp>
     dd8:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <distanceTimeCounter+0x1>
     ddc:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <distanceTimeCounter>
     de0:	ff 91       	pop	r31
     de2:	ef 91       	pop	r30
     de4:	bf 91       	pop	r27
     de6:	af 91       	pop	r26
     de8:	9f 91       	pop	r25
     dea:	8f 91       	pop	r24
     dec:	7f 91       	pop	r23
     dee:	6f 91       	pop	r22
     df0:	5f 91       	pop	r21
     df2:	4f 91       	pop	r20
     df4:	3f 91       	pop	r19
     df6:	2f 91       	pop	r18
     df8:	0f 90       	pop	r0
     dfa:	0f be       	out	0x3f, r0	; 63
     dfc:	0f 90       	pop	r0
     dfe:	1f 90       	pop	r1
     e00:	18 95       	reti

00000e02 <buttonInit>:
void buttonInit(){
	PORTD |= (1 << PD2);// Pull up button
     e02:	82 b3       	in	r24, 0x12	; 18
     e04:	84 60       	ori	r24, 0x04	; 4
     e06:	82 bb       	out	0x12, r24	; 18
	GICR |= (1 << INT0);// Enable Button interrupt 0
     e08:	8b b7       	in	r24, 0x3b	; 59
     e0a:	80 64       	ori	r24, 0x40	; 64
     e0c:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1 << ISC01);	// Set falling edge interrupt
     e0e:	85 b7       	in	r24, 0x35	; 53
     e10:	82 60       	ori	r24, 0x02	; 2
     e12:	85 bf       	out	0x35, r24	; 53
     e14:	08 95       	ret

00000e16 <__vector_9>:
}


ISR(TIMER1_OVF_vect)
{
     e16:	1f 92       	push	r1
     e18:	0f 92       	push	r0
     e1a:	0f b6       	in	r0, 0x3f	; 63
     e1c:	0f 92       	push	r0
     e1e:	11 24       	eor	r1, r1
     e20:	8f 93       	push	r24
     e22:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
     e24:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <TimerOverflow>
     e28:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <TimerOverflow+0x1>
     e2c:	01 96       	adiw	r24, 0x01	; 1
     e2e:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <TimerOverflow+0x1>
     e32:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <TimerOverflow>
}
     e36:	9f 91       	pop	r25
     e38:	8f 91       	pop	r24
     e3a:	0f 90       	pop	r0
     e3c:	0f be       	out	0x3f, r0	; 63
     e3e:	0f 90       	pop	r0
     e40:	1f 90       	pop	r1
     e42:	18 95       	reti

00000e44 <init>:

void init(){
	ADC_Init();
     e44:	0e 94 b6 05 	call	0xb6c	; 0xb6c <ADC_Init>
	initClock();
     e48:	0e 94 40 05 	call	0xa80	; 0xa80 <initClock>
	sensorInit();
     e4c:	0e 94 b2 05 	call	0xb64	; 0xb64 <sensorInit>
	DDRA |= (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);// motor init
     e50:	8a b3       	in	r24, 0x1a	; 26
     e52:	8e 61       	ori	r24, 0x1E	; 30
     e54:	8a bb       	out	0x1a, r24	; 26
	i2c_master_init(I2C_SCL_FREQUENCY_400);
     e56:	60 e8       	ldi	r22, 0x80	; 128
     e58:	7a e1       	ldi	r23, 0x1A	; 26
     e5a:	86 e0       	ldi	r24, 0x06	; 6
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 94 00 03 	call	0x600	; 0x600 <i2c_master_init>
	lcd1 = lq_init(0x27, 16, 2, LCD_5x8DOTS);
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	42 e0       	ldi	r20, 0x02	; 2
     e66:	60 e1       	ldi	r22, 0x10	; 16
     e68:	87 e2       	ldi	r24, 0x27	; 39
     e6a:	0e 94 07 04 	call	0x80e	; 0x80e <lq_init>
     e6e:	20 93 7b 01 	sts	0x017B, r18	; 0x80017b <lcd1>
     e72:	30 93 7c 01 	sts	0x017C, r19	; 0x80017c <lcd1+0x1>
     e76:	40 93 7d 01 	sts	0x017D, r20	; 0x80017d <lcd1+0x2>
     e7a:	50 93 7e 01 	sts	0x017E, r21	; 0x80017e <lcd1+0x3>
     e7e:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <lcd1+0x4>
     e82:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <lcd1+0x5>
     e86:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <lcd1+0x6>
	cli(); // Disable interrupts during timer setup
     e8a:	f8 94       	cli
	initBuzzer();
     e8c:	0e 94 5d 05 	call	0xaba	; 0xaba <initBuzzer>
	setupAlarm();
     e90:	0e 94 9a 05 	call	0xb34	; 0xb34 <setupAlarm>
	buttonInit();
     e94:	0e 94 01 07 	call	0xe02	; 0xe02 <buttonInit>
	TIMSK |= (1 << TOIE0);
     e98:	89 b7       	in	r24, 0x39	; 57
     e9a:	81 60       	ori	r24, 0x01	; 1
     e9c:	89 bf       	out	0x39, r24	; 57
	TCNT0 = 5; // Timer start
     e9e:	85 e0       	ldi	r24, 0x05	; 5
     ea0:	82 bf       	out	0x32, r24	; 50
	TCCR0 = (1 << CS02) | (1 << CS00); // 101: Prescaler = 1024
     ea2:	83 bf       	out	0x33, r24	; 51
	
	TIMSK |= (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
     ea4:	89 b7       	in	r24, 0x39	; 57
     ea6:	84 60       	ori	r24, 0x04	; 4
     ea8:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;		/* Set all bit to zero Normal operation */
     eaa:	1f bc       	out	0x2f, r1	; 47
	//Timer Clock Frequency = System Clock Frequency / Prescaler Division Factor = 8,000,000 / 1024 ? 7812.5 Hz
	//Timer Duration = Number of Timer Counts / Timer Clock Frequency = 252 / 7812.5 ? 0.032256 seconds (32.256 ms)
	serial_init();
     eac:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <serial_init>
	sei(); // Enable interrupts after timer setup
     eb0:	78 94       	sei
     eb2:	08 95       	ret

00000eb4 <setTimeFromReceivedString>:
}

void setTimeFromReceivedString(char* str) {
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	cd b7       	in	r28, 0x3d	; 61
     ebe:	de b7       	in	r29, 0x3e	; 62
     ec0:	af 97       	sbiw	r28, 0x2f	; 47
     ec2:	0f b6       	in	r0, 0x3f	; 63
     ec4:	f8 94       	cli
     ec6:	de bf       	out	0x3e, r29	; 62
     ec8:	0f be       	out	0x3f, r0	; 63
     eca:	cd bf       	out	0x3d, r28	; 61
     ecc:	18 2f       	mov	r17, r24
     ece:	09 2f       	mov	r16, r25
	serial_send_string(str);
     ed0:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
	char formatString[] = "set time %d:%d:%d %d/%d/%d";
     ed4:	2b e1       	ldi	r18, 0x1B	; 27
     ed6:	ee ef       	ldi	r30, 0xFE	; 254
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	ce 01       	movw	r24, r28
     edc:	01 96       	adiw	r24, 0x01	; 1
     ede:	dc 01       	movw	r26, r24
     ee0:	01 90       	ld	r0, Z+
     ee2:	0d 92       	st	X+, r0
     ee4:	2a 95       	dec	r18
     ee6:	e1 f7       	brne	.-8      	; 0xee0 <setTimeFromReceivedString+0x2c>
	int hour, min, second, mont, date, year;
	DateTime_t t1 ;
	sscanf(str, formatString, &	hour,& min,& second,& mont,& date, & year);
     ee8:	9e 01       	movw	r18, r28
     eea:	2a 5d       	subi	r18, 0xDA	; 218
     eec:	3f 4f       	sbci	r19, 0xFF	; 255
     eee:	3f 93       	push	r19
     ef0:	2f 93       	push	r18
     ef2:	22 50       	subi	r18, 0x02	; 2
     ef4:	31 09       	sbc	r19, r1
     ef6:	3f 93       	push	r19
     ef8:	2f 93       	push	r18
     efa:	22 50       	subi	r18, 0x02	; 2
     efc:	31 09       	sbc	r19, r1
     efe:	3f 93       	push	r19
     f00:	2f 93       	push	r18
     f02:	22 50       	subi	r18, 0x02	; 2
     f04:	31 09       	sbc	r19, r1
     f06:	3f 93       	push	r19
     f08:	2f 93       	push	r18
     f0a:	22 50       	subi	r18, 0x02	; 2
     f0c:	31 09       	sbc	r19, r1
     f0e:	3f 93       	push	r19
     f10:	2f 93       	push	r18
     f12:	22 50       	subi	r18, 0x02	; 2
     f14:	31 09       	sbc	r19, r1
     f16:	3f 93       	push	r19
     f18:	2f 93       	push	r18
     f1a:	9f 93       	push	r25
     f1c:	8f 93       	push	r24
     f1e:	0f 93       	push	r16
     f20:	1f 93       	push	r17
     f22:	0e 94 19 0a 	call	0x1432	; 0x1432 <sscanf>
	t1.Second = second;
     f26:	28 a1       	ldd	r18, Y+32	; 0x20
	t1.Minute = min;
     f28:	3e 8d       	ldd	r19, Y+30	; 0x1e
	t1.Hour = hour;
     f2a:	4c 8d       	ldd	r20, Y+28	; 0x1c
	t1.Date = date;
     f2c:	6c a1       	ldd	r22, Y+36	; 0x24
	t1.Month = mont;
     f2e:	7a a1       	ldd	r23, Y+34	; 0x22
	t1.Year = 2000+year;
     f30:	8e a1       	ldd	r24, Y+38	; 0x26
     f32:	9f a1       	ldd	r25, Y+39	; 0x27
     f34:	80 53       	subi	r24, 0x30	; 48
     f36:	98 4f       	sbci	r25, 0xF8	; 248
     f38:	9f a7       	std	Y+47, r25	; 0x2f
     f3a:	8e a7       	std	Y+46, r24	; 0x2e
	RTC_Set(t1);
     f3c:	5b a5       	ldd	r21, Y+43	; 0x2b
     f3e:	9f a5       	ldd	r25, Y+47	; 0x2f
     f40:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
}
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	f8 94       	cli
     f48:	de bf       	out	0x3e, r29	; 62
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	cd bf       	out	0x3d, r28	; 61
     f4e:	af 96       	adiw	r28, 0x2f	; 47
     f50:	0f b6       	in	r0, 0x3f	; 63
     f52:	f8 94       	cli
     f54:	de bf       	out	0x3e, r29	; 62
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	cd bf       	out	0x3d, r28	; 61
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	1f 91       	pop	r17
     f60:	0f 91       	pop	r16
     f62:	08 95       	ret

00000f64 <processCommand>:
	
}
//============================
//comand mamager

int processCommand(char* str) {
     f64:	cf 93       	push	r28
     f66:	df 93       	push	r29
     f68:	ec 01       	movw	r28, r24
	if (strstr(str, setTimeCommand) != NULL) {
     f6a:	6c e6       	ldi	r22, 0x6C	; 108
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	0e 94 dd 09 	call	0x13ba	; 0x13ba <strstr>
     f72:	89 2b       	or	r24, r25
     f74:	19 f0       	breq	.+6      	; 0xf7c <processCommand+0x18>
		setTimeFromReceivedString(str);
     f76:	ce 01       	movw	r24, r28
     f78:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <setTimeFromReceivedString>
	}
	if (strstr(str, openTrashCommand) != NULL) {
     f7c:	61 e6       	ldi	r22, 0x61	; 97
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	ce 01       	movw	r24, r28
     f82:	0e 94 dd 09 	call	0x13ba	; 0x13ba <strstr>
     f86:	89 2b       	or	r24, r25
     f88:	49 f0       	breq	.+18     	; 0xf9c <processCommand+0x38>
		serial_send_string("open command");
     f8a:	89 e1       	ldi	r24, 0x19	; 25
     f8c:	91 e0       	ldi	r25, 0x01	; 1
     f8e:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
		isMotorWorking=true;
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <isMotorWorking>
		isTrashOpen=true;
     f98:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <isTrashOpen>

	}
	if (strstr(str, closeTrashCommand) != NULL) {
     f9c:	66 e6       	ldi	r22, 0x66	; 102
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	ce 01       	movw	r24, r28
     fa2:	0e 94 dd 09 	call	0x13ba	; 0x13ba <strstr>
     fa6:	89 2b       	or	r24, r25
     fa8:	49 f0       	breq	.+18     	; 0xfbc <processCommand+0x58>
		serial_send_string("close command");
     faa:	86 e2       	ldi	r24, 0x26	; 38
     fac:	91 e0       	ldi	r25, 0x01	; 1
     fae:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
		isMotorWorking=true;
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <isMotorWorking>
		isTrashOpen=false;
     fb8:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <isTrashOpen>
	}
	return 0;
}
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	08 95       	ret

00000fc6 <__vector_13>:
void turnOffBuzzer();
void turnOnBuzzer();
//============================
//intrupts
#if SERIAL_INTERRUPT == 1
ISR(USART_RXC_vect) {
     fc6:	1f 92       	push	r1
     fc8:	0f 92       	push	r0
     fca:	0f b6       	in	r0, 0x3f	; 63
     fcc:	0f 92       	push	r0
     fce:	11 24       	eor	r1, r1
     fd0:	2f 93       	push	r18
     fd2:	3f 93       	push	r19
     fd4:	4f 93       	push	r20
     fd6:	5f 93       	push	r21
     fd8:	6f 93       	push	r22
     fda:	7f 93       	push	r23
     fdc:	8f 93       	push	r24
     fde:	9f 93       	push	r25
     fe0:	af 93       	push	r26
     fe2:	bf 93       	push	r27
     fe4:	ef 93       	push	r30
     fe6:	ff 93       	push	r31
	char c = UDR;
     fe8:	8c b1       	in	r24, 0x0c	; 12
	UDR = c;	// Save the received character
     fea:	8c b9       	out	0x0c, r24	; 12
	receivedString[counter] = c;
     fec:	e0 91 5f 01 	lds	r30, 0x015F	; 0x80015f <counter>
     ff0:	ae 2f       	mov	r26, r30
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
     ff4:	a6 57       	subi	r26, 0x76	; 118
     ff6:	be 4f       	sbci	r27, 0xFE	; 254
     ff8:	8c 93       	st	X, r24
	counter++;
     ffa:	ef 5f       	subi	r30, 0xFF	; 255
     ffc:	e0 93 5f 01 	sts	0x015F, r30	; 0x80015f <counter>
	if (c == '\r') { // If user has pressed ENTER (in Proteus)
    1000:	8d 30       	cpi	r24, 0x0D	; 13
    1002:	a9 f4       	brne	.+42     	; 0x102e <__vector_13+0x68>
		receivedString[counter] = '\0'; // Null-terminate the string
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	e6 57       	subi	r30, 0x76	; 118
    1008:	fe 4f       	sbci	r31, 0xFE	; 254
    100a:	10 82       	st	Z, r1
		serial_send_string(receivedString);
    100c:	8a e8       	ldi	r24, 0x8A	; 138
    100e:	91 e0       	ldi	r25, 0x01	; 1
    1010:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
		processCommand(receivedString);
    1014:	8a e8       	ldi	r24, 0x8A	; 138
    1016:	91 e0       	ldi	r25, 0x01	; 1
    1018:	0e 94 b2 07 	call	0xf64	; 0xf64 <processCommand>
		// Reset the counter and clear the received string for the next input
		counter = 0;
    101c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <counter>
		memset(receivedString, 0, sizeof(receivedString));
    1020:	88 ec       	ldi	r24, 0xC8	; 200
    1022:	ea e8       	ldi	r30, 0x8A	; 138
    1024:	f1 e0       	ldi	r31, 0x01	; 1
    1026:	df 01       	movw	r26, r30
    1028:	1d 92       	st	X+, r1
    102a:	8a 95       	dec	r24
    102c:	e9 f7       	brne	.-6      	; 0x1028 <__vector_13+0x62>
	}
}
    102e:	ff 91       	pop	r31
    1030:	ef 91       	pop	r30
    1032:	bf 91       	pop	r27
    1034:	af 91       	pop	r26
    1036:	9f 91       	pop	r25
    1038:	8f 91       	pop	r24
    103a:	7f 91       	pop	r23
    103c:	6f 91       	pop	r22
    103e:	5f 91       	pop	r21
    1040:	4f 91       	pop	r20
    1042:	3f 91       	pop	r19
    1044:	2f 91       	pop	r18
    1046:	0f 90       	pop	r0
    1048:	0f be       	out	0x3f, r0	; 63
    104a:	0f 90       	pop	r0
    104c:	1f 90       	pop	r1
    104e:	18 95       	reti

00001050 <main>:
	RTC_Set(t1);
}

int main(void) {

	init();
    1050:	0e 94 22 07 	call	0xe44	; 0xe44 <init>
	TCCR1A = 0;		/* Set all bit to zero Normal operation */
    1054:	1f bc       	out	0x2f, r1	; 47

	serial_send_string(" Enter command: "); // Look at how \r works
    1056:	84 e3       	ldi	r24, 0x34	; 52
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
	while (1) {
		//motor process
		if (isMotorWorking) {
    105e:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <isMotorWorking>
    1062:	88 23       	and	r24, r24
    1064:	f1 f0       	breq	.+60     	; 0x10a2 <main+0x52>
			serial_send_string(" motor working...\r");
    1066:	85 e4       	ldi	r24, 0x45	; 69
    1068:	91 e0       	ldi	r25, 0x01	; 1
    106a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <serial_send_string>
			if (isTrashOpen && !isTrashCompleteOpen) {
    106e:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <isTrashOpen>
    1072:	88 23       	and	r24, r24
    1074:	39 f0       	breq	.+14     	; 0x1084 <main+0x34>
    1076:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <isTrashCompleteOpen>
    107a:	91 11       	cpse	r25, r1
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <main+0x34>
				openTrash();
    107e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <openTrash>
    1082:	0f c0       	rjmp	.+30     	; 0x10a2 <main+0x52>
			} else if (!isTrashOpen && isInAutomaticMode &&!isTrashCompleteClose) {
    1084:	81 11       	cpse	r24, r1
    1086:	0b c0       	rjmp	.+22     	; 0x109e <main+0x4e>
    1088:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <isInAutomaticMode>
    108c:	88 23       	and	r24, r24
    108e:	39 f0       	breq	.+14     	; 0x109e <main+0x4e>
    1090:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <isTrashCompleteClose>
    1094:	81 11       	cpse	r24, r1
    1096:	03 c0       	rjmp	.+6      	; 0x109e <main+0x4e>
				closeTrash();
    1098:	0e 94 09 05 	call	0xa12	; 0xa12 <closeTrash>
    109c:	02 c0       	rjmp	.+4      	; 0x10a2 <main+0x52>
			} else{
				isMotorWorking=false;
    109e:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <isMotorWorking>
// 			 				serial_send_string(" object not found\r");
// 							isObjectDetected = false;
// 			 			}
 		}

		if(isUpdateTemp){
    10a2:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <isUpdateTemp>
    10a6:	88 23       	and	r24, r24
    10a8:	d1 f2       	breq	.-76     	; 0x105e <main+0xe>
			calculateTemp();
    10aa:	0e 94 c2 05 	call	0xb84	; 0xb84 <calculateTemp>
			isUpdateTemp=false;
    10ae:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <isUpdateTemp>
    10b2:	d5 cf       	rjmp	.-86     	; 0x105e <main+0xe>

000010b4 <serial_init>:

#include "Serial_lib.h"

void serial_init()
{
	UCSRB = (1 << RXEN) | (1 << TXEN);
    10b4:	88 e1       	ldi	r24, 0x18	; 24
    10b6:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);
    10b8:	80 b5       	in	r24, 0x20	; 32
    10ba:	86 68       	ori	r24, 0x86	; 134
    10bc:	80 bd       	out	0x20, r24	; 32
	UBRRL = (int)((F_CPU / (SERIAL_BAUD_RATE * 16)) - 1);
    10be:	83 e3       	ldi	r24, 0x33	; 51
    10c0:	89 b9       	out	0x09, r24	; 9
	
#if SERIAL_INTERRUPT == 1
	UCSRB |= (1<<RXCIE);
    10c2:	8a b1       	in	r24, 0x0a	; 10
    10c4:	80 68       	ori	r24, 0x80	; 128
    10c6:	8a b9       	out	0x0a, r24	; 10
    10c8:	08 95       	ret

000010ca <serial_send_char>:
#endif
}

void serial_send_char(char c)
{
	UCSRA = 1 << TXC; // clear TXC bit
    10ca:	90 e4       	ldi	r25, 0x40	; 64
    10cc:	9b b9       	out	0x0b, r25	; 11
	UDR = c;
    10ce:	8c b9       	out	0x0c, r24	; 12
	while ((UCSRA & (1 << TXC)) == 0);
    10d0:	5e 9b       	sbis	0x0b, 6	; 11
    10d2:	fe cf       	rjmp	.-4      	; 0x10d0 <serial_send_char+0x6>
}
    10d4:	08 95       	ret

000010d6 <serial_send_string>:

void serial_send_string(char *s)
{
    10d6:	cf 93       	push	r28
    10d8:	df 93       	push	r29
    10da:	ec 01       	movw	r28, r24
	while (*s != '\0')
    10dc:	03 c0       	rjmp	.+6      	; 0x10e4 <serial_send_string+0xe>
	{
		serial_send_char(*s);
    10de:	0e 94 65 08 	call	0x10ca	; 0x10ca <serial_send_char>
		s++;
    10e2:	21 96       	adiw	r28, 0x01	; 1
	while ((UCSRA & (1 << TXC)) == 0);
}

void serial_send_string(char *s)
{
	while (*s != '\0')
    10e4:	88 81       	ld	r24, Y
    10e6:	81 11       	cpse	r24, r1
    10e8:	fa cf       	rjmp	.-12     	; 0x10de <serial_send_string+0x8>
	{
		serial_send_char(*s);
		s++;
	}
}
    10ea:	df 91       	pop	r29
    10ec:	cf 91       	pop	r28
    10ee:	08 95       	ret

000010f0 <TWI_Status>:
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
    10f0:	81 b1       	in	r24, 0x01	; 1
}
    10f2:	88 7f       	andi	r24, 0xF8	; 248
    10f4:	08 95       	ret

000010f6 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    10f6:	84 ea       	ldi	r24, 0xA4	; 164
    10f8:	86 bf       	out	0x36, r24	; 54

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
    10fa:	06 b6       	in	r0, 0x36	; 54
    10fc:	07 fe       	sbrs	r0, 7
    10fe:	fd cf       	rjmp	.-6      	; 0x10fa <TWI_BeginTransmission+0x4>

	//Return status register
	return (TWI_Status());
    1100:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
}
    1104:	08 95       	ret

00001106 <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
    1106:	85 ed       	ldi	r24, 0xD5	; 213
    1108:	86 bf       	out	0x36, r24	; 54

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
    110a:	06 b6       	in	r0, 0x36	; 54
    110c:	04 fc       	sbrc	r0, 4
    110e:	fd cf       	rjmp	.-6      	; 0x110a <TWI_EndTransmission+0x4>
}
    1110:	08 95       	ret

00001112 <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
    1112:	83 b9       	out	0x03, r24	; 3

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
    1114:	84 e8       	ldi	r24, 0x84	; 132
    1116:	86 bf       	out	0x36, r24	; 54

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
    1118:	06 b6       	in	r0, 0x36	; 54
    111a:	07 fe       	sbrs	r0, 7
    111c:	fd cf       	rjmp	.-6      	; 0x1118 <TWI_Transmit+0x6>

	//Return status register
	return (TWI_Status());
    111e:	0e 94 78 08 	call	0x10f0	; 0x10f0 <TWI_Status>
}
    1122:	08 95       	ret

00001124 <TWI_ReceiveACK>:

//Wait until ACK received. 
uint8_t TWI_ReceiveACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
    1124:	84 ec       	ldi	r24, 0xC4	; 196
    1126:	86 bf       	out	0x36, r24	; 54
	
	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1128:	06 b6       	in	r0, 0x36	; 54
    112a:	07 fe       	sbrs	r0, 7
    112c:	fd cf       	rjmp	.-6      	; 0x1128 <TWI_ReceiveACK+0x4>

	//Return received data
	return TWDR;
    112e:	83 b1       	in	r24, 0x03	; 3
}
    1130:	08 95       	ret

00001132 <TWI_ReceiveNACK>:

//Wait until NACK received. 
uint8_t TWI_ReceiveNACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    1132:	84 e8       	ldi	r24, 0x84	; 132
    1134:	86 bf       	out	0x36, r24	; 54

	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1136:	06 b6       	in	r0, 0x36	; 54
    1138:	07 fe       	sbrs	r0, 7
    113a:	fd cf       	rjmp	.-6      	; 0x1136 <TWI_ReceiveNACK+0x4>

	//Return received data
	return TWDR;
    113c:	83 b1       	in	r24, 0x03	; 3
}
    113e:	08 95       	ret

00001140 <__floatunsisf>:
    1140:	e8 94       	clt
    1142:	09 c0       	rjmp	.+18     	; 0x1156 <__floatsisf+0x12>

00001144 <__floatsisf>:
    1144:	97 fb       	bst	r25, 7
    1146:	3e f4       	brtc	.+14     	; 0x1156 <__floatsisf+0x12>
    1148:	90 95       	com	r25
    114a:	80 95       	com	r24
    114c:	70 95       	com	r23
    114e:	61 95       	neg	r22
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	8f 4f       	sbci	r24, 0xFF	; 255
    1154:	9f 4f       	sbci	r25, 0xFF	; 255
    1156:	99 23       	and	r25, r25
    1158:	a9 f0       	breq	.+42     	; 0x1184 <__floatsisf+0x40>
    115a:	f9 2f       	mov	r31, r25
    115c:	96 e9       	ldi	r25, 0x96	; 150
    115e:	bb 27       	eor	r27, r27
    1160:	93 95       	inc	r25
    1162:	f6 95       	lsr	r31
    1164:	87 95       	ror	r24
    1166:	77 95       	ror	r23
    1168:	67 95       	ror	r22
    116a:	b7 95       	ror	r27
    116c:	f1 11       	cpse	r31, r1
    116e:	f8 cf       	rjmp	.-16     	; 0x1160 <__floatsisf+0x1c>
    1170:	fa f4       	brpl	.+62     	; 0x11b0 <__floatsisf+0x6c>
    1172:	bb 0f       	add	r27, r27
    1174:	11 f4       	brne	.+4      	; 0x117a <__floatsisf+0x36>
    1176:	60 ff       	sbrs	r22, 0
    1178:	1b c0       	rjmp	.+54     	; 0x11b0 <__floatsisf+0x6c>
    117a:	6f 5f       	subi	r22, 0xFF	; 255
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	8f 4f       	sbci	r24, 0xFF	; 255
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	16 c0       	rjmp	.+44     	; 0x11b0 <__floatsisf+0x6c>
    1184:	88 23       	and	r24, r24
    1186:	11 f0       	breq	.+4      	; 0x118c <__floatsisf+0x48>
    1188:	96 e9       	ldi	r25, 0x96	; 150
    118a:	11 c0       	rjmp	.+34     	; 0x11ae <__floatsisf+0x6a>
    118c:	77 23       	and	r23, r23
    118e:	21 f0       	breq	.+8      	; 0x1198 <__floatsisf+0x54>
    1190:	9e e8       	ldi	r25, 0x8E	; 142
    1192:	87 2f       	mov	r24, r23
    1194:	76 2f       	mov	r23, r22
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <__floatsisf+0x5e>
    1198:	66 23       	and	r22, r22
    119a:	71 f0       	breq	.+28     	; 0x11b8 <__floatsisf+0x74>
    119c:	96 e8       	ldi	r25, 0x86	; 134
    119e:	86 2f       	mov	r24, r22
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	2a f0       	brmi	.+10     	; 0x11b0 <__floatsisf+0x6c>
    11a6:	9a 95       	dec	r25
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	88 1f       	adc	r24, r24
    11ae:	da f7       	brpl	.-10     	; 0x11a6 <__floatsisf+0x62>
    11b0:	88 0f       	add	r24, r24
    11b2:	96 95       	lsr	r25
    11b4:	87 95       	ror	r24
    11b6:	97 f9       	bld	r25, 7
    11b8:	08 95       	ret

000011ba <__fp_inf>:
    11ba:	97 f9       	bld	r25, 7
    11bc:	9f 67       	ori	r25, 0x7F	; 127
    11be:	80 e8       	ldi	r24, 0x80	; 128
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	08 95       	ret

000011c6 <__fp_nan>:
    11c6:	9f ef       	ldi	r25, 0xFF	; 255
    11c8:	80 ec       	ldi	r24, 0xC0	; 192
    11ca:	08 95       	ret

000011cc <__fp_pscA>:
    11cc:	00 24       	eor	r0, r0
    11ce:	0a 94       	dec	r0
    11d0:	16 16       	cp	r1, r22
    11d2:	17 06       	cpc	r1, r23
    11d4:	18 06       	cpc	r1, r24
    11d6:	09 06       	cpc	r0, r25
    11d8:	08 95       	ret

000011da <__fp_pscB>:
    11da:	00 24       	eor	r0, r0
    11dc:	0a 94       	dec	r0
    11de:	12 16       	cp	r1, r18
    11e0:	13 06       	cpc	r1, r19
    11e2:	14 06       	cpc	r1, r20
    11e4:	05 06       	cpc	r0, r21
    11e6:	08 95       	ret

000011e8 <__fp_round>:
    11e8:	09 2e       	mov	r0, r25
    11ea:	03 94       	inc	r0
    11ec:	00 0c       	add	r0, r0
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <__fp_round+0xc>
    11f0:	88 23       	and	r24, r24
    11f2:	52 f0       	brmi	.+20     	; 0x1208 <__fp_round+0x20>
    11f4:	bb 0f       	add	r27, r27
    11f6:	40 f4       	brcc	.+16     	; 0x1208 <__fp_round+0x20>
    11f8:	bf 2b       	or	r27, r31
    11fa:	11 f4       	brne	.+4      	; 0x1200 <__fp_round+0x18>
    11fc:	60 ff       	sbrs	r22, 0
    11fe:	04 c0       	rjmp	.+8      	; 0x1208 <__fp_round+0x20>
    1200:	6f 5f       	subi	r22, 0xFF	; 255
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	8f 4f       	sbci	r24, 0xFF	; 255
    1206:	9f 4f       	sbci	r25, 0xFF	; 255
    1208:	08 95       	ret

0000120a <__fp_split3>:
    120a:	57 fd       	sbrc	r21, 7
    120c:	90 58       	subi	r25, 0x80	; 128
    120e:	44 0f       	add	r20, r20
    1210:	55 1f       	adc	r21, r21
    1212:	59 f0       	breq	.+22     	; 0x122a <__fp_splitA+0x10>
    1214:	5f 3f       	cpi	r21, 0xFF	; 255
    1216:	71 f0       	breq	.+28     	; 0x1234 <__fp_splitA+0x1a>
    1218:	47 95       	ror	r20

0000121a <__fp_splitA>:
    121a:	88 0f       	add	r24, r24
    121c:	97 fb       	bst	r25, 7
    121e:	99 1f       	adc	r25, r25
    1220:	61 f0       	breq	.+24     	; 0x123a <__fp_splitA+0x20>
    1222:	9f 3f       	cpi	r25, 0xFF	; 255
    1224:	79 f0       	breq	.+30     	; 0x1244 <__fp_splitA+0x2a>
    1226:	87 95       	ror	r24
    1228:	08 95       	ret
    122a:	12 16       	cp	r1, r18
    122c:	13 06       	cpc	r1, r19
    122e:	14 06       	cpc	r1, r20
    1230:	55 1f       	adc	r21, r21
    1232:	f2 cf       	rjmp	.-28     	; 0x1218 <__fp_split3+0xe>
    1234:	46 95       	lsr	r20
    1236:	f1 df       	rcall	.-30     	; 0x121a <__fp_splitA>
    1238:	08 c0       	rjmp	.+16     	; 0x124a <__fp_splitA+0x30>
    123a:	16 16       	cp	r1, r22
    123c:	17 06       	cpc	r1, r23
    123e:	18 06       	cpc	r1, r24
    1240:	99 1f       	adc	r25, r25
    1242:	f1 cf       	rjmp	.-30     	; 0x1226 <__fp_splitA+0xc>
    1244:	86 95       	lsr	r24
    1246:	71 05       	cpc	r23, r1
    1248:	61 05       	cpc	r22, r1
    124a:	08 94       	sec
    124c:	08 95       	ret

0000124e <__fp_zero>:
    124e:	e8 94       	clt

00001250 <__fp_szero>:
    1250:	bb 27       	eor	r27, r27
    1252:	66 27       	eor	r22, r22
    1254:	77 27       	eor	r23, r23
    1256:	cb 01       	movw	r24, r22
    1258:	97 f9       	bld	r25, 7
    125a:	08 95       	ret

0000125c <__mulsf3>:
    125c:	0e 94 41 09 	call	0x1282	; 0x1282 <__mulsf3x>
    1260:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__fp_round>
    1264:	0e 94 e6 08 	call	0x11cc	; 0x11cc <__fp_pscA>
    1268:	38 f0       	brcs	.+14     	; 0x1278 <__mulsf3+0x1c>
    126a:	0e 94 ed 08 	call	0x11da	; 0x11da <__fp_pscB>
    126e:	20 f0       	brcs	.+8      	; 0x1278 <__mulsf3+0x1c>
    1270:	95 23       	and	r25, r21
    1272:	11 f0       	breq	.+4      	; 0x1278 <__mulsf3+0x1c>
    1274:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>
    1278:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__fp_nan>
    127c:	11 24       	eor	r1, r1
    127e:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>

00001282 <__mulsf3x>:
    1282:	0e 94 05 09 	call	0x120a	; 0x120a <__fp_split3>
    1286:	70 f3       	brcs	.-36     	; 0x1264 <__mulsf3+0x8>

00001288 <__mulsf3_pse>:
    1288:	95 9f       	mul	r25, r21
    128a:	c1 f3       	breq	.-16     	; 0x127c <__mulsf3+0x20>
    128c:	95 0f       	add	r25, r21
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	55 1f       	adc	r21, r21
    1292:	62 9f       	mul	r22, r18
    1294:	f0 01       	movw	r30, r0
    1296:	72 9f       	mul	r23, r18
    1298:	bb 27       	eor	r27, r27
    129a:	f0 0d       	add	r31, r0
    129c:	b1 1d       	adc	r27, r1
    129e:	63 9f       	mul	r22, r19
    12a0:	aa 27       	eor	r26, r26
    12a2:	f0 0d       	add	r31, r0
    12a4:	b1 1d       	adc	r27, r1
    12a6:	aa 1f       	adc	r26, r26
    12a8:	64 9f       	mul	r22, r20
    12aa:	66 27       	eor	r22, r22
    12ac:	b0 0d       	add	r27, r0
    12ae:	a1 1d       	adc	r26, r1
    12b0:	66 1f       	adc	r22, r22
    12b2:	82 9f       	mul	r24, r18
    12b4:	22 27       	eor	r18, r18
    12b6:	b0 0d       	add	r27, r0
    12b8:	a1 1d       	adc	r26, r1
    12ba:	62 1f       	adc	r22, r18
    12bc:	73 9f       	mul	r23, r19
    12be:	b0 0d       	add	r27, r0
    12c0:	a1 1d       	adc	r26, r1
    12c2:	62 1f       	adc	r22, r18
    12c4:	83 9f       	mul	r24, r19
    12c6:	a0 0d       	add	r26, r0
    12c8:	61 1d       	adc	r22, r1
    12ca:	22 1f       	adc	r18, r18
    12cc:	74 9f       	mul	r23, r20
    12ce:	33 27       	eor	r19, r19
    12d0:	a0 0d       	add	r26, r0
    12d2:	61 1d       	adc	r22, r1
    12d4:	23 1f       	adc	r18, r19
    12d6:	84 9f       	mul	r24, r20
    12d8:	60 0d       	add	r22, r0
    12da:	21 1d       	adc	r18, r1
    12dc:	82 2f       	mov	r24, r18
    12de:	76 2f       	mov	r23, r22
    12e0:	6a 2f       	mov	r22, r26
    12e2:	11 24       	eor	r1, r1
    12e4:	9f 57       	subi	r25, 0x7F	; 127
    12e6:	50 40       	sbci	r21, 0x00	; 0
    12e8:	9a f0       	brmi	.+38     	; 0x1310 <__mulsf3_pse+0x88>
    12ea:	f1 f0       	breq	.+60     	; 0x1328 <__mulsf3_pse+0xa0>
    12ec:	88 23       	and	r24, r24
    12ee:	4a f0       	brmi	.+18     	; 0x1302 <__mulsf3_pse+0x7a>
    12f0:	ee 0f       	add	r30, r30
    12f2:	ff 1f       	adc	r31, r31
    12f4:	bb 1f       	adc	r27, r27
    12f6:	66 1f       	adc	r22, r22
    12f8:	77 1f       	adc	r23, r23
    12fa:	88 1f       	adc	r24, r24
    12fc:	91 50       	subi	r25, 0x01	; 1
    12fe:	50 40       	sbci	r21, 0x00	; 0
    1300:	a9 f7       	brne	.-22     	; 0x12ec <__mulsf3_pse+0x64>
    1302:	9e 3f       	cpi	r25, 0xFE	; 254
    1304:	51 05       	cpc	r21, r1
    1306:	80 f0       	brcs	.+32     	; 0x1328 <__mulsf3_pse+0xa0>
    1308:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>
    130c:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>
    1310:	5f 3f       	cpi	r21, 0xFF	; 255
    1312:	e4 f3       	brlt	.-8      	; 0x130c <__mulsf3_pse+0x84>
    1314:	98 3e       	cpi	r25, 0xE8	; 232
    1316:	d4 f3       	brlt	.-12     	; 0x130c <__mulsf3_pse+0x84>
    1318:	86 95       	lsr	r24
    131a:	77 95       	ror	r23
    131c:	67 95       	ror	r22
    131e:	b7 95       	ror	r27
    1320:	f7 95       	ror	r31
    1322:	e7 95       	ror	r30
    1324:	9f 5f       	subi	r25, 0xFF	; 255
    1326:	c1 f7       	brne	.-16     	; 0x1318 <__mulsf3_pse+0x90>
    1328:	fe 2b       	or	r31, r30
    132a:	88 0f       	add	r24, r24
    132c:	91 1d       	adc	r25, r1
    132e:	96 95       	lsr	r25
    1330:	87 95       	ror	r24
    1332:	97 f9       	bld	r25, 7
    1334:	08 95       	ret

00001336 <__udivmodsi4>:
    1336:	a1 e2       	ldi	r26, 0x21	; 33
    1338:	1a 2e       	mov	r1, r26
    133a:	aa 1b       	sub	r26, r26
    133c:	bb 1b       	sub	r27, r27
    133e:	fd 01       	movw	r30, r26
    1340:	0d c0       	rjmp	.+26     	; 0x135c <__udivmodsi4_ep>

00001342 <__udivmodsi4_loop>:
    1342:	aa 1f       	adc	r26, r26
    1344:	bb 1f       	adc	r27, r27
    1346:	ee 1f       	adc	r30, r30
    1348:	ff 1f       	adc	r31, r31
    134a:	a2 17       	cp	r26, r18
    134c:	b3 07       	cpc	r27, r19
    134e:	e4 07       	cpc	r30, r20
    1350:	f5 07       	cpc	r31, r21
    1352:	20 f0       	brcs	.+8      	; 0x135c <__udivmodsi4_ep>
    1354:	a2 1b       	sub	r26, r18
    1356:	b3 0b       	sbc	r27, r19
    1358:	e4 0b       	sbc	r30, r20
    135a:	f5 0b       	sbc	r31, r21

0000135c <__udivmodsi4_ep>:
    135c:	66 1f       	adc	r22, r22
    135e:	77 1f       	adc	r23, r23
    1360:	88 1f       	adc	r24, r24
    1362:	99 1f       	adc	r25, r25
    1364:	1a 94       	dec	r1
    1366:	69 f7       	brne	.-38     	; 0x1342 <__udivmodsi4_loop>
    1368:	60 95       	com	r22
    136a:	70 95       	com	r23
    136c:	80 95       	com	r24
    136e:	90 95       	com	r25
    1370:	9b 01       	movw	r18, r22
    1372:	ac 01       	movw	r20, r24
    1374:	bd 01       	movw	r22, r26
    1376:	cf 01       	movw	r24, r30
    1378:	08 95       	ret

0000137a <dtostrf>:
    137a:	ef 92       	push	r14
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	e8 01       	movw	r28, r16
    1386:	47 fd       	sbrc	r20, 7
    1388:	02 c0       	rjmp	.+4      	; 0x138e <dtostrf+0x14>
    138a:	34 e0       	ldi	r19, 0x04	; 4
    138c:	01 c0       	rjmp	.+2      	; 0x1390 <dtostrf+0x16>
    138e:	34 e1       	ldi	r19, 0x14	; 20
    1390:	04 2e       	mov	r0, r20
    1392:	00 0c       	add	r0, r0
    1394:	55 0b       	sbc	r21, r21
    1396:	57 ff       	sbrs	r21, 7
    1398:	03 c0       	rjmp	.+6      	; 0x13a0 <dtostrf+0x26>
    139a:	51 95       	neg	r21
    139c:	41 95       	neg	r20
    139e:	51 09       	sbc	r21, r1
    13a0:	e3 2e       	mov	r14, r19
    13a2:	02 2f       	mov	r16, r18
    13a4:	24 2f       	mov	r18, r20
    13a6:	ae 01       	movw	r20, r28
    13a8:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <dtoa_prf>
    13ac:	ce 01       	movw	r24, r28
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	1f 91       	pop	r17
    13b4:	0f 91       	pop	r16
    13b6:	ef 90       	pop	r14
    13b8:	08 95       	ret

000013ba <strstr>:
    13ba:	fb 01       	movw	r30, r22
    13bc:	51 91       	ld	r21, Z+
    13be:	55 23       	and	r21, r21
    13c0:	a9 f0       	breq	.+42     	; 0x13ec <strstr+0x32>
    13c2:	bf 01       	movw	r22, r30
    13c4:	dc 01       	movw	r26, r24
    13c6:	4d 91       	ld	r20, X+
    13c8:	45 17       	cp	r20, r21
    13ca:	41 11       	cpse	r20, r1
    13cc:	e1 f7       	brne	.-8      	; 0x13c6 <strstr+0xc>
    13ce:	59 f4       	brne	.+22     	; 0x13e6 <strstr+0x2c>
    13d0:	cd 01       	movw	r24, r26
    13d2:	01 90       	ld	r0, Z+
    13d4:	00 20       	and	r0, r0
    13d6:	49 f0       	breq	.+18     	; 0x13ea <strstr+0x30>
    13d8:	4d 91       	ld	r20, X+
    13da:	40 15       	cp	r20, r0
    13dc:	41 11       	cpse	r20, r1
    13de:	c9 f3       	breq	.-14     	; 0x13d2 <strstr+0x18>
    13e0:	fb 01       	movw	r30, r22
    13e2:	41 11       	cpse	r20, r1
    13e4:	ef cf       	rjmp	.-34     	; 0x13c4 <strstr+0xa>
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	08 95       	ret

000013ee <sprintf>:
    13ee:	ae e0       	ldi	r26, 0x0E	; 14
    13f0:	b0 e0       	ldi	r27, 0x00	; 0
    13f2:	ed ef       	ldi	r30, 0xFD	; 253
    13f4:	f9 e0       	ldi	r31, 0x09	; 9
    13f6:	0c 94 1e 12 	jmp	0x243c	; 0x243c <__prologue_saves__+0x1c>
    13fa:	0d 89       	ldd	r16, Y+21	; 0x15
    13fc:	1e 89       	ldd	r17, Y+22	; 0x16
    13fe:	86 e0       	ldi	r24, 0x06	; 6
    1400:	8c 83       	std	Y+4, r24	; 0x04
    1402:	1a 83       	std	Y+2, r17	; 0x02
    1404:	09 83       	std	Y+1, r16	; 0x01
    1406:	8f ef       	ldi	r24, 0xFF	; 255
    1408:	9f e7       	ldi	r25, 0x7F	; 127
    140a:	9e 83       	std	Y+6, r25	; 0x06
    140c:	8d 83       	std	Y+5, r24	; 0x05
    140e:	ae 01       	movw	r20, r28
    1410:	47 5e       	subi	r20, 0xE7	; 231
    1412:	5f 4f       	sbci	r21, 0xFF	; 255
    1414:	6f 89       	ldd	r22, Y+23	; 0x17
    1416:	78 8d       	ldd	r23, Y+24	; 0x18
    1418:	ce 01       	movw	r24, r28
    141a:	01 96       	adiw	r24, 0x01	; 1
    141c:	0e 94 32 0a 	call	0x1464	; 0x1464 <vfprintf>
    1420:	ef 81       	ldd	r30, Y+7	; 0x07
    1422:	f8 85       	ldd	r31, Y+8	; 0x08
    1424:	e0 0f       	add	r30, r16
    1426:	f1 1f       	adc	r31, r17
    1428:	10 82       	st	Z, r1
    142a:	2e 96       	adiw	r28, 0x0e	; 14
    142c:	e4 e0       	ldi	r30, 0x04	; 4
    142e:	0c 94 3a 12 	jmp	0x2474	; 0x2474 <__epilogue_restores__+0x1c>

00001432 <sscanf>:
    1432:	ae e0       	ldi	r26, 0x0E	; 14
    1434:	b0 e0       	ldi	r27, 0x00	; 0
    1436:	ef e1       	ldi	r30, 0x1F	; 31
    1438:	fa e0       	ldi	r31, 0x0A	; 10
    143a:	0c 94 20 12 	jmp	0x2440	; 0x2440 <__prologue_saves__+0x20>
    143e:	85 e0       	ldi	r24, 0x05	; 5
    1440:	8c 83       	std	Y+4, r24	; 0x04
    1442:	8b 89       	ldd	r24, Y+19	; 0x13
    1444:	9c 89       	ldd	r25, Y+20	; 0x14
    1446:	9a 83       	std	Y+2, r25	; 0x02
    1448:	89 83       	std	Y+1, r24	; 0x01
    144a:	ae 01       	movw	r20, r28
    144c:	49 5e       	subi	r20, 0xE9	; 233
    144e:	5f 4f       	sbci	r21, 0xFF	; 255
    1450:	6d 89       	ldd	r22, Y+21	; 0x15
    1452:	7e 89       	ldd	r23, Y+22	; 0x16
    1454:	ce 01       	movw	r24, r28
    1456:	01 96       	adiw	r24, 0x01	; 1
    1458:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <vfscanf>
    145c:	2e 96       	adiw	r28, 0x0e	; 14
    145e:	e2 e0       	ldi	r30, 0x02	; 2
    1460:	0c 94 3c 12 	jmp	0x2478	; 0x2478 <__epilogue_restores__+0x20>

00001464 <vfprintf>:
    1464:	ab e0       	ldi	r26, 0x0B	; 11
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	e8 e3       	ldi	r30, 0x38	; 56
    146a:	fa e0       	ldi	r31, 0x0A	; 10
    146c:	0c 94 10 12 	jmp	0x2420	; 0x2420 <__prologue_saves__>
    1470:	6c 01       	movw	r12, r24
    1472:	7b 01       	movw	r14, r22
    1474:	8a 01       	movw	r16, r20
    1476:	fc 01       	movw	r30, r24
    1478:	17 82       	std	Z+7, r1	; 0x07
    147a:	16 82       	std	Z+6, r1	; 0x06
    147c:	83 81       	ldd	r24, Z+3	; 0x03
    147e:	81 ff       	sbrs	r24, 1
    1480:	cc c1       	rjmp	.+920    	; 0x181a <vfprintf+0x3b6>
    1482:	ce 01       	movw	r24, r28
    1484:	01 96       	adiw	r24, 0x01	; 1
    1486:	3c 01       	movw	r6, r24
    1488:	f6 01       	movw	r30, r12
    148a:	93 81       	ldd	r25, Z+3	; 0x03
    148c:	f7 01       	movw	r30, r14
    148e:	93 fd       	sbrc	r25, 3
    1490:	85 91       	lpm	r24, Z+
    1492:	93 ff       	sbrs	r25, 3
    1494:	81 91       	ld	r24, Z+
    1496:	7f 01       	movw	r14, r30
    1498:	88 23       	and	r24, r24
    149a:	09 f4       	brne	.+2      	; 0x149e <vfprintf+0x3a>
    149c:	ba c1       	rjmp	.+884    	; 0x1812 <vfprintf+0x3ae>
    149e:	85 32       	cpi	r24, 0x25	; 37
    14a0:	39 f4       	brne	.+14     	; 0x14b0 <vfprintf+0x4c>
    14a2:	93 fd       	sbrc	r25, 3
    14a4:	85 91       	lpm	r24, Z+
    14a6:	93 ff       	sbrs	r25, 3
    14a8:	81 91       	ld	r24, Z+
    14aa:	7f 01       	movw	r14, r30
    14ac:	85 32       	cpi	r24, 0x25	; 37
    14ae:	29 f4       	brne	.+10     	; 0x14ba <vfprintf+0x56>
    14b0:	b6 01       	movw	r22, r12
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    14b8:	e7 cf       	rjmp	.-50     	; 0x1488 <vfprintf+0x24>
    14ba:	91 2c       	mov	r9, r1
    14bc:	21 2c       	mov	r2, r1
    14be:	31 2c       	mov	r3, r1
    14c0:	ff e1       	ldi	r31, 0x1F	; 31
    14c2:	f3 15       	cp	r31, r3
    14c4:	d8 f0       	brcs	.+54     	; 0x14fc <vfprintf+0x98>
    14c6:	8b 32       	cpi	r24, 0x2B	; 43
    14c8:	79 f0       	breq	.+30     	; 0x14e8 <vfprintf+0x84>
    14ca:	38 f4       	brcc	.+14     	; 0x14da <vfprintf+0x76>
    14cc:	80 32       	cpi	r24, 0x20	; 32
    14ce:	79 f0       	breq	.+30     	; 0x14ee <vfprintf+0x8a>
    14d0:	83 32       	cpi	r24, 0x23	; 35
    14d2:	a1 f4       	brne	.+40     	; 0x14fc <vfprintf+0x98>
    14d4:	23 2d       	mov	r18, r3
    14d6:	20 61       	ori	r18, 0x10	; 16
    14d8:	1d c0       	rjmp	.+58     	; 0x1514 <vfprintf+0xb0>
    14da:	8d 32       	cpi	r24, 0x2D	; 45
    14dc:	61 f0       	breq	.+24     	; 0x14f6 <vfprintf+0x92>
    14de:	80 33       	cpi	r24, 0x30	; 48
    14e0:	69 f4       	brne	.+26     	; 0x14fc <vfprintf+0x98>
    14e2:	23 2d       	mov	r18, r3
    14e4:	21 60       	ori	r18, 0x01	; 1
    14e6:	16 c0       	rjmp	.+44     	; 0x1514 <vfprintf+0xb0>
    14e8:	83 2d       	mov	r24, r3
    14ea:	82 60       	ori	r24, 0x02	; 2
    14ec:	38 2e       	mov	r3, r24
    14ee:	e3 2d       	mov	r30, r3
    14f0:	e4 60       	ori	r30, 0x04	; 4
    14f2:	3e 2e       	mov	r3, r30
    14f4:	2a c0       	rjmp	.+84     	; 0x154a <vfprintf+0xe6>
    14f6:	f3 2d       	mov	r31, r3
    14f8:	f8 60       	ori	r31, 0x08	; 8
    14fa:	1d c0       	rjmp	.+58     	; 0x1536 <vfprintf+0xd2>
    14fc:	37 fc       	sbrc	r3, 7
    14fe:	2d c0       	rjmp	.+90     	; 0x155a <vfprintf+0xf6>
    1500:	20 ed       	ldi	r18, 0xD0	; 208
    1502:	28 0f       	add	r18, r24
    1504:	2a 30       	cpi	r18, 0x0A	; 10
    1506:	40 f0       	brcs	.+16     	; 0x1518 <vfprintf+0xb4>
    1508:	8e 32       	cpi	r24, 0x2E	; 46
    150a:	b9 f4       	brne	.+46     	; 0x153a <vfprintf+0xd6>
    150c:	36 fc       	sbrc	r3, 6
    150e:	81 c1       	rjmp	.+770    	; 0x1812 <vfprintf+0x3ae>
    1510:	23 2d       	mov	r18, r3
    1512:	20 64       	ori	r18, 0x40	; 64
    1514:	32 2e       	mov	r3, r18
    1516:	19 c0       	rjmp	.+50     	; 0x154a <vfprintf+0xe6>
    1518:	36 fe       	sbrs	r3, 6
    151a:	06 c0       	rjmp	.+12     	; 0x1528 <vfprintf+0xc4>
    151c:	8a e0       	ldi	r24, 0x0A	; 10
    151e:	98 9e       	mul	r9, r24
    1520:	20 0d       	add	r18, r0
    1522:	11 24       	eor	r1, r1
    1524:	92 2e       	mov	r9, r18
    1526:	11 c0       	rjmp	.+34     	; 0x154a <vfprintf+0xe6>
    1528:	ea e0       	ldi	r30, 0x0A	; 10
    152a:	2e 9e       	mul	r2, r30
    152c:	20 0d       	add	r18, r0
    152e:	11 24       	eor	r1, r1
    1530:	22 2e       	mov	r2, r18
    1532:	f3 2d       	mov	r31, r3
    1534:	f0 62       	ori	r31, 0x20	; 32
    1536:	3f 2e       	mov	r3, r31
    1538:	08 c0       	rjmp	.+16     	; 0x154a <vfprintf+0xe6>
    153a:	8c 36       	cpi	r24, 0x6C	; 108
    153c:	21 f4       	brne	.+8      	; 0x1546 <vfprintf+0xe2>
    153e:	83 2d       	mov	r24, r3
    1540:	80 68       	ori	r24, 0x80	; 128
    1542:	38 2e       	mov	r3, r24
    1544:	02 c0       	rjmp	.+4      	; 0x154a <vfprintf+0xe6>
    1546:	88 36       	cpi	r24, 0x68	; 104
    1548:	41 f4       	brne	.+16     	; 0x155a <vfprintf+0xf6>
    154a:	f7 01       	movw	r30, r14
    154c:	93 fd       	sbrc	r25, 3
    154e:	85 91       	lpm	r24, Z+
    1550:	93 ff       	sbrs	r25, 3
    1552:	81 91       	ld	r24, Z+
    1554:	7f 01       	movw	r14, r30
    1556:	81 11       	cpse	r24, r1
    1558:	b3 cf       	rjmp	.-154    	; 0x14c0 <vfprintf+0x5c>
    155a:	98 2f       	mov	r25, r24
    155c:	9f 7d       	andi	r25, 0xDF	; 223
    155e:	95 54       	subi	r25, 0x45	; 69
    1560:	93 30       	cpi	r25, 0x03	; 3
    1562:	28 f4       	brcc	.+10     	; 0x156e <vfprintf+0x10a>
    1564:	0c 5f       	subi	r16, 0xFC	; 252
    1566:	1f 4f       	sbci	r17, 0xFF	; 255
    1568:	9f e3       	ldi	r25, 0x3F	; 63
    156a:	99 83       	std	Y+1, r25	; 0x01
    156c:	0d c0       	rjmp	.+26     	; 0x1588 <vfprintf+0x124>
    156e:	83 36       	cpi	r24, 0x63	; 99
    1570:	31 f0       	breq	.+12     	; 0x157e <vfprintf+0x11a>
    1572:	83 37       	cpi	r24, 0x73	; 115
    1574:	71 f0       	breq	.+28     	; 0x1592 <vfprintf+0x12e>
    1576:	83 35       	cpi	r24, 0x53	; 83
    1578:	09 f0       	breq	.+2      	; 0x157c <vfprintf+0x118>
    157a:	59 c0       	rjmp	.+178    	; 0x162e <vfprintf+0x1ca>
    157c:	21 c0       	rjmp	.+66     	; 0x15c0 <vfprintf+0x15c>
    157e:	f8 01       	movw	r30, r16
    1580:	80 81       	ld	r24, Z
    1582:	89 83       	std	Y+1, r24	; 0x01
    1584:	0e 5f       	subi	r16, 0xFE	; 254
    1586:	1f 4f       	sbci	r17, 0xFF	; 255
    1588:	88 24       	eor	r8, r8
    158a:	83 94       	inc	r8
    158c:	91 2c       	mov	r9, r1
    158e:	53 01       	movw	r10, r6
    1590:	13 c0       	rjmp	.+38     	; 0x15b8 <vfprintf+0x154>
    1592:	28 01       	movw	r4, r16
    1594:	f2 e0       	ldi	r31, 0x02	; 2
    1596:	4f 0e       	add	r4, r31
    1598:	51 1c       	adc	r5, r1
    159a:	f8 01       	movw	r30, r16
    159c:	a0 80       	ld	r10, Z
    159e:	b1 80       	ldd	r11, Z+1	; 0x01
    15a0:	36 fe       	sbrs	r3, 6
    15a2:	03 c0       	rjmp	.+6      	; 0x15aa <vfprintf+0x146>
    15a4:	69 2d       	mov	r22, r9
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <vfprintf+0x14a>
    15aa:	6f ef       	ldi	r22, 0xFF	; 255
    15ac:	7f ef       	ldi	r23, 0xFF	; 255
    15ae:	c5 01       	movw	r24, r10
    15b0:	0e 94 11 11 	call	0x2222	; 0x2222 <strnlen>
    15b4:	4c 01       	movw	r8, r24
    15b6:	82 01       	movw	r16, r4
    15b8:	f3 2d       	mov	r31, r3
    15ba:	ff 77       	andi	r31, 0x7F	; 127
    15bc:	3f 2e       	mov	r3, r31
    15be:	16 c0       	rjmp	.+44     	; 0x15ec <vfprintf+0x188>
    15c0:	28 01       	movw	r4, r16
    15c2:	22 e0       	ldi	r18, 0x02	; 2
    15c4:	42 0e       	add	r4, r18
    15c6:	51 1c       	adc	r5, r1
    15c8:	f8 01       	movw	r30, r16
    15ca:	a0 80       	ld	r10, Z
    15cc:	b1 80       	ldd	r11, Z+1	; 0x01
    15ce:	36 fe       	sbrs	r3, 6
    15d0:	03 c0       	rjmp	.+6      	; 0x15d8 <vfprintf+0x174>
    15d2:	69 2d       	mov	r22, r9
    15d4:	70 e0       	ldi	r23, 0x00	; 0
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <vfprintf+0x178>
    15d8:	6f ef       	ldi	r22, 0xFF	; 255
    15da:	7f ef       	ldi	r23, 0xFF	; 255
    15dc:	c5 01       	movw	r24, r10
    15de:	0e 94 06 11 	call	0x220c	; 0x220c <strnlen_P>
    15e2:	4c 01       	movw	r8, r24
    15e4:	f3 2d       	mov	r31, r3
    15e6:	f0 68       	ori	r31, 0x80	; 128
    15e8:	3f 2e       	mov	r3, r31
    15ea:	82 01       	movw	r16, r4
    15ec:	33 fc       	sbrc	r3, 3
    15ee:	1b c0       	rjmp	.+54     	; 0x1626 <vfprintf+0x1c2>
    15f0:	82 2d       	mov	r24, r2
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	88 16       	cp	r8, r24
    15f6:	99 06       	cpc	r9, r25
    15f8:	b0 f4       	brcc	.+44     	; 0x1626 <vfprintf+0x1c2>
    15fa:	b6 01       	movw	r22, r12
    15fc:	80 e2       	ldi	r24, 0x20	; 32
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    1604:	2a 94       	dec	r2
    1606:	f4 cf       	rjmp	.-24     	; 0x15f0 <vfprintf+0x18c>
    1608:	f5 01       	movw	r30, r10
    160a:	37 fc       	sbrc	r3, 7
    160c:	85 91       	lpm	r24, Z+
    160e:	37 fe       	sbrs	r3, 7
    1610:	81 91       	ld	r24, Z+
    1612:	5f 01       	movw	r10, r30
    1614:	b6 01       	movw	r22, r12
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    161c:	21 10       	cpse	r2, r1
    161e:	2a 94       	dec	r2
    1620:	21 e0       	ldi	r18, 0x01	; 1
    1622:	82 1a       	sub	r8, r18
    1624:	91 08       	sbc	r9, r1
    1626:	81 14       	cp	r8, r1
    1628:	91 04       	cpc	r9, r1
    162a:	71 f7       	brne	.-36     	; 0x1608 <vfprintf+0x1a4>
    162c:	e8 c0       	rjmp	.+464    	; 0x17fe <vfprintf+0x39a>
    162e:	84 36       	cpi	r24, 0x64	; 100
    1630:	11 f0       	breq	.+4      	; 0x1636 <vfprintf+0x1d2>
    1632:	89 36       	cpi	r24, 0x69	; 105
    1634:	41 f5       	brne	.+80     	; 0x1686 <vfprintf+0x222>
    1636:	f8 01       	movw	r30, r16
    1638:	37 fe       	sbrs	r3, 7
    163a:	07 c0       	rjmp	.+14     	; 0x164a <vfprintf+0x1e6>
    163c:	60 81       	ld	r22, Z
    163e:	71 81       	ldd	r23, Z+1	; 0x01
    1640:	82 81       	ldd	r24, Z+2	; 0x02
    1642:	93 81       	ldd	r25, Z+3	; 0x03
    1644:	0c 5f       	subi	r16, 0xFC	; 252
    1646:	1f 4f       	sbci	r17, 0xFF	; 255
    1648:	08 c0       	rjmp	.+16     	; 0x165a <vfprintf+0x1f6>
    164a:	60 81       	ld	r22, Z
    164c:	71 81       	ldd	r23, Z+1	; 0x01
    164e:	07 2e       	mov	r0, r23
    1650:	00 0c       	add	r0, r0
    1652:	88 0b       	sbc	r24, r24
    1654:	99 0b       	sbc	r25, r25
    1656:	0e 5f       	subi	r16, 0xFE	; 254
    1658:	1f 4f       	sbci	r17, 0xFF	; 255
    165a:	f3 2d       	mov	r31, r3
    165c:	ff 76       	andi	r31, 0x6F	; 111
    165e:	3f 2e       	mov	r3, r31
    1660:	97 ff       	sbrs	r25, 7
    1662:	09 c0       	rjmp	.+18     	; 0x1676 <vfprintf+0x212>
    1664:	90 95       	com	r25
    1666:	80 95       	com	r24
    1668:	70 95       	com	r23
    166a:	61 95       	neg	r22
    166c:	7f 4f       	sbci	r23, 0xFF	; 255
    166e:	8f 4f       	sbci	r24, 0xFF	; 255
    1670:	9f 4f       	sbci	r25, 0xFF	; 255
    1672:	f0 68       	ori	r31, 0x80	; 128
    1674:	3f 2e       	mov	r3, r31
    1676:	2a e0       	ldi	r18, 0x0A	; 10
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	a3 01       	movw	r20, r6
    167c:	0e 94 af 11 	call	0x235e	; 0x235e <__ultoa_invert>
    1680:	88 2e       	mov	r8, r24
    1682:	86 18       	sub	r8, r6
    1684:	45 c0       	rjmp	.+138    	; 0x1710 <vfprintf+0x2ac>
    1686:	85 37       	cpi	r24, 0x75	; 117
    1688:	31 f4       	brne	.+12     	; 0x1696 <vfprintf+0x232>
    168a:	23 2d       	mov	r18, r3
    168c:	2f 7e       	andi	r18, 0xEF	; 239
    168e:	b2 2e       	mov	r11, r18
    1690:	2a e0       	ldi	r18, 0x0A	; 10
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	25 c0       	rjmp	.+74     	; 0x16e0 <vfprintf+0x27c>
    1696:	93 2d       	mov	r25, r3
    1698:	99 7f       	andi	r25, 0xF9	; 249
    169a:	b9 2e       	mov	r11, r25
    169c:	8f 36       	cpi	r24, 0x6F	; 111
    169e:	c1 f0       	breq	.+48     	; 0x16d0 <vfprintf+0x26c>
    16a0:	18 f4       	brcc	.+6      	; 0x16a8 <vfprintf+0x244>
    16a2:	88 35       	cpi	r24, 0x58	; 88
    16a4:	79 f0       	breq	.+30     	; 0x16c4 <vfprintf+0x260>
    16a6:	b5 c0       	rjmp	.+362    	; 0x1812 <vfprintf+0x3ae>
    16a8:	80 37       	cpi	r24, 0x70	; 112
    16aa:	19 f0       	breq	.+6      	; 0x16b2 <vfprintf+0x24e>
    16ac:	88 37       	cpi	r24, 0x78	; 120
    16ae:	21 f0       	breq	.+8      	; 0x16b8 <vfprintf+0x254>
    16b0:	b0 c0       	rjmp	.+352    	; 0x1812 <vfprintf+0x3ae>
    16b2:	e9 2f       	mov	r30, r25
    16b4:	e0 61       	ori	r30, 0x10	; 16
    16b6:	be 2e       	mov	r11, r30
    16b8:	b4 fe       	sbrs	r11, 4
    16ba:	0d c0       	rjmp	.+26     	; 0x16d6 <vfprintf+0x272>
    16bc:	fb 2d       	mov	r31, r11
    16be:	f4 60       	ori	r31, 0x04	; 4
    16c0:	bf 2e       	mov	r11, r31
    16c2:	09 c0       	rjmp	.+18     	; 0x16d6 <vfprintf+0x272>
    16c4:	34 fe       	sbrs	r3, 4
    16c6:	0a c0       	rjmp	.+20     	; 0x16dc <vfprintf+0x278>
    16c8:	29 2f       	mov	r18, r25
    16ca:	26 60       	ori	r18, 0x06	; 6
    16cc:	b2 2e       	mov	r11, r18
    16ce:	06 c0       	rjmp	.+12     	; 0x16dc <vfprintf+0x278>
    16d0:	28 e0       	ldi	r18, 0x08	; 8
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	05 c0       	rjmp	.+10     	; 0x16e0 <vfprintf+0x27c>
    16d6:	20 e1       	ldi	r18, 0x10	; 16
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	02 c0       	rjmp	.+4      	; 0x16e0 <vfprintf+0x27c>
    16dc:	20 e1       	ldi	r18, 0x10	; 16
    16de:	32 e0       	ldi	r19, 0x02	; 2
    16e0:	f8 01       	movw	r30, r16
    16e2:	b7 fe       	sbrs	r11, 7
    16e4:	07 c0       	rjmp	.+14     	; 0x16f4 <vfprintf+0x290>
    16e6:	60 81       	ld	r22, Z
    16e8:	71 81       	ldd	r23, Z+1	; 0x01
    16ea:	82 81       	ldd	r24, Z+2	; 0x02
    16ec:	93 81       	ldd	r25, Z+3	; 0x03
    16ee:	0c 5f       	subi	r16, 0xFC	; 252
    16f0:	1f 4f       	sbci	r17, 0xFF	; 255
    16f2:	06 c0       	rjmp	.+12     	; 0x1700 <vfprintf+0x29c>
    16f4:	60 81       	ld	r22, Z
    16f6:	71 81       	ldd	r23, Z+1	; 0x01
    16f8:	80 e0       	ldi	r24, 0x00	; 0
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	0e 5f       	subi	r16, 0xFE	; 254
    16fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1700:	a3 01       	movw	r20, r6
    1702:	0e 94 af 11 	call	0x235e	; 0x235e <__ultoa_invert>
    1706:	88 2e       	mov	r8, r24
    1708:	86 18       	sub	r8, r6
    170a:	fb 2d       	mov	r31, r11
    170c:	ff 77       	andi	r31, 0x7F	; 127
    170e:	3f 2e       	mov	r3, r31
    1710:	36 fe       	sbrs	r3, 6
    1712:	0d c0       	rjmp	.+26     	; 0x172e <vfprintf+0x2ca>
    1714:	23 2d       	mov	r18, r3
    1716:	2e 7f       	andi	r18, 0xFE	; 254
    1718:	a2 2e       	mov	r10, r18
    171a:	89 14       	cp	r8, r9
    171c:	58 f4       	brcc	.+22     	; 0x1734 <vfprintf+0x2d0>
    171e:	34 fe       	sbrs	r3, 4
    1720:	0b c0       	rjmp	.+22     	; 0x1738 <vfprintf+0x2d4>
    1722:	32 fc       	sbrc	r3, 2
    1724:	09 c0       	rjmp	.+18     	; 0x1738 <vfprintf+0x2d4>
    1726:	83 2d       	mov	r24, r3
    1728:	8e 7e       	andi	r24, 0xEE	; 238
    172a:	a8 2e       	mov	r10, r24
    172c:	05 c0       	rjmp	.+10     	; 0x1738 <vfprintf+0x2d4>
    172e:	b8 2c       	mov	r11, r8
    1730:	a3 2c       	mov	r10, r3
    1732:	03 c0       	rjmp	.+6      	; 0x173a <vfprintf+0x2d6>
    1734:	b8 2c       	mov	r11, r8
    1736:	01 c0       	rjmp	.+2      	; 0x173a <vfprintf+0x2d6>
    1738:	b9 2c       	mov	r11, r9
    173a:	a4 fe       	sbrs	r10, 4
    173c:	0f c0       	rjmp	.+30     	; 0x175c <vfprintf+0x2f8>
    173e:	fe 01       	movw	r30, r28
    1740:	e8 0d       	add	r30, r8
    1742:	f1 1d       	adc	r31, r1
    1744:	80 81       	ld	r24, Z
    1746:	80 33       	cpi	r24, 0x30	; 48
    1748:	21 f4       	brne	.+8      	; 0x1752 <vfprintf+0x2ee>
    174a:	9a 2d       	mov	r25, r10
    174c:	99 7e       	andi	r25, 0xE9	; 233
    174e:	a9 2e       	mov	r10, r25
    1750:	09 c0       	rjmp	.+18     	; 0x1764 <vfprintf+0x300>
    1752:	a2 fe       	sbrs	r10, 2
    1754:	06 c0       	rjmp	.+12     	; 0x1762 <vfprintf+0x2fe>
    1756:	b3 94       	inc	r11
    1758:	b3 94       	inc	r11
    175a:	04 c0       	rjmp	.+8      	; 0x1764 <vfprintf+0x300>
    175c:	8a 2d       	mov	r24, r10
    175e:	86 78       	andi	r24, 0x86	; 134
    1760:	09 f0       	breq	.+2      	; 0x1764 <vfprintf+0x300>
    1762:	b3 94       	inc	r11
    1764:	a3 fc       	sbrc	r10, 3
    1766:	11 c0       	rjmp	.+34     	; 0x178a <vfprintf+0x326>
    1768:	a0 fe       	sbrs	r10, 0
    176a:	06 c0       	rjmp	.+12     	; 0x1778 <vfprintf+0x314>
    176c:	b2 14       	cp	r11, r2
    176e:	88 f4       	brcc	.+34     	; 0x1792 <vfprintf+0x32e>
    1770:	28 0c       	add	r2, r8
    1772:	92 2c       	mov	r9, r2
    1774:	9b 18       	sub	r9, r11
    1776:	0e c0       	rjmp	.+28     	; 0x1794 <vfprintf+0x330>
    1778:	b2 14       	cp	r11, r2
    177a:	60 f4       	brcc	.+24     	; 0x1794 <vfprintf+0x330>
    177c:	b6 01       	movw	r22, r12
    177e:	80 e2       	ldi	r24, 0x20	; 32
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    1786:	b3 94       	inc	r11
    1788:	f7 cf       	rjmp	.-18     	; 0x1778 <vfprintf+0x314>
    178a:	b2 14       	cp	r11, r2
    178c:	18 f4       	brcc	.+6      	; 0x1794 <vfprintf+0x330>
    178e:	2b 18       	sub	r2, r11
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <vfprintf+0x332>
    1792:	98 2c       	mov	r9, r8
    1794:	21 2c       	mov	r2, r1
    1796:	a4 fe       	sbrs	r10, 4
    1798:	10 c0       	rjmp	.+32     	; 0x17ba <vfprintf+0x356>
    179a:	b6 01       	movw	r22, r12
    179c:	80 e3       	ldi	r24, 0x30	; 48
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    17a4:	a2 fe       	sbrs	r10, 2
    17a6:	17 c0       	rjmp	.+46     	; 0x17d6 <vfprintf+0x372>
    17a8:	a1 fc       	sbrc	r10, 1
    17aa:	03 c0       	rjmp	.+6      	; 0x17b2 <vfprintf+0x34e>
    17ac:	88 e7       	ldi	r24, 0x78	; 120
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	02 c0       	rjmp	.+4      	; 0x17b6 <vfprintf+0x352>
    17b2:	88 e5       	ldi	r24, 0x58	; 88
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	b6 01       	movw	r22, r12
    17b8:	0c c0       	rjmp	.+24     	; 0x17d2 <vfprintf+0x36e>
    17ba:	8a 2d       	mov	r24, r10
    17bc:	86 78       	andi	r24, 0x86	; 134
    17be:	59 f0       	breq	.+22     	; 0x17d6 <vfprintf+0x372>
    17c0:	a1 fe       	sbrs	r10, 1
    17c2:	02 c0       	rjmp	.+4      	; 0x17c8 <vfprintf+0x364>
    17c4:	8b e2       	ldi	r24, 0x2B	; 43
    17c6:	01 c0       	rjmp	.+2      	; 0x17ca <vfprintf+0x366>
    17c8:	80 e2       	ldi	r24, 0x20	; 32
    17ca:	a7 fc       	sbrc	r10, 7
    17cc:	8d e2       	ldi	r24, 0x2D	; 45
    17ce:	b6 01       	movw	r22, r12
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    17d6:	89 14       	cp	r8, r9
    17d8:	38 f4       	brcc	.+14     	; 0x17e8 <vfprintf+0x384>
    17da:	b6 01       	movw	r22, r12
    17dc:	80 e3       	ldi	r24, 0x30	; 48
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    17e4:	9a 94       	dec	r9
    17e6:	f7 cf       	rjmp	.-18     	; 0x17d6 <vfprintf+0x372>
    17e8:	8a 94       	dec	r8
    17ea:	f3 01       	movw	r30, r6
    17ec:	e8 0d       	add	r30, r8
    17ee:	f1 1d       	adc	r31, r1
    17f0:	80 81       	ld	r24, Z
    17f2:	b6 01       	movw	r22, r12
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    17fa:	81 10       	cpse	r8, r1
    17fc:	f5 cf       	rjmp	.-22     	; 0x17e8 <vfprintf+0x384>
    17fe:	22 20       	and	r2, r2
    1800:	09 f4       	brne	.+2      	; 0x1804 <vfprintf+0x3a0>
    1802:	42 ce       	rjmp	.-892    	; 0x1488 <vfprintf+0x24>
    1804:	b6 01       	movw	r22, r12
    1806:	80 e2       	ldi	r24, 0x20	; 32
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <fputc>
    180e:	2a 94       	dec	r2
    1810:	f6 cf       	rjmp	.-20     	; 0x17fe <vfprintf+0x39a>
    1812:	f6 01       	movw	r30, r12
    1814:	86 81       	ldd	r24, Z+6	; 0x06
    1816:	97 81       	ldd	r25, Z+7	; 0x07
    1818:	02 c0       	rjmp	.+4      	; 0x181e <vfprintf+0x3ba>
    181a:	8f ef       	ldi	r24, 0xFF	; 255
    181c:	9f ef       	ldi	r25, 0xFF	; 255
    181e:	2b 96       	adiw	r28, 0x0b	; 11
    1820:	e2 e1       	ldi	r30, 0x12	; 18
    1822:	0c 94 2c 12 	jmp	0x2458	; 0x2458 <__epilogue_restores__>

00001826 <putval>:
    1826:	20 fd       	sbrc	r18, 0
    1828:	09 c0       	rjmp	.+18     	; 0x183c <putval+0x16>
    182a:	fc 01       	movw	r30, r24
    182c:	23 fd       	sbrc	r18, 3
    182e:	05 c0       	rjmp	.+10     	; 0x183a <putval+0x14>
    1830:	22 ff       	sbrs	r18, 2
    1832:	02 c0       	rjmp	.+4      	; 0x1838 <putval+0x12>
    1834:	73 83       	std	Z+3, r23	; 0x03
    1836:	62 83       	std	Z+2, r22	; 0x02
    1838:	51 83       	std	Z+1, r21	; 0x01
    183a:	40 83       	st	Z, r20
    183c:	08 95       	ret

0000183e <mulacc>:
    183e:	44 fd       	sbrc	r20, 4
    1840:	17 c0       	rjmp	.+46     	; 0x1870 <mulacc+0x32>
    1842:	46 fd       	sbrc	r20, 6
    1844:	17 c0       	rjmp	.+46     	; 0x1874 <mulacc+0x36>
    1846:	ab 01       	movw	r20, r22
    1848:	bc 01       	movw	r22, r24
    184a:	da 01       	movw	r26, r20
    184c:	fb 01       	movw	r30, r22
    184e:	aa 0f       	add	r26, r26
    1850:	bb 1f       	adc	r27, r27
    1852:	ee 1f       	adc	r30, r30
    1854:	ff 1f       	adc	r31, r31
    1856:	10 94       	com	r1
    1858:	d1 f7       	brne	.-12     	; 0x184e <mulacc+0x10>
    185a:	4a 0f       	add	r20, r26
    185c:	5b 1f       	adc	r21, r27
    185e:	6e 1f       	adc	r22, r30
    1860:	7f 1f       	adc	r23, r31
    1862:	cb 01       	movw	r24, r22
    1864:	ba 01       	movw	r22, r20
    1866:	66 0f       	add	r22, r22
    1868:	77 1f       	adc	r23, r23
    186a:	88 1f       	adc	r24, r24
    186c:	99 1f       	adc	r25, r25
    186e:	09 c0       	rjmp	.+18     	; 0x1882 <mulacc+0x44>
    1870:	33 e0       	ldi	r19, 0x03	; 3
    1872:	01 c0       	rjmp	.+2      	; 0x1876 <mulacc+0x38>
    1874:	34 e0       	ldi	r19, 0x04	; 4
    1876:	66 0f       	add	r22, r22
    1878:	77 1f       	adc	r23, r23
    187a:	88 1f       	adc	r24, r24
    187c:	99 1f       	adc	r25, r25
    187e:	31 50       	subi	r19, 0x01	; 1
    1880:	d1 f7       	brne	.-12     	; 0x1876 <mulacc+0x38>
    1882:	62 0f       	add	r22, r18
    1884:	71 1d       	adc	r23, r1
    1886:	81 1d       	adc	r24, r1
    1888:	91 1d       	adc	r25, r1
    188a:	08 95       	ret

0000188c <skip_spaces>:
    188c:	0f 93       	push	r16
    188e:	1f 93       	push	r17
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
    1894:	8c 01       	movw	r16, r24
    1896:	c8 01       	movw	r24, r16
    1898:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    189c:	ec 01       	movw	r28, r24
    189e:	97 fd       	sbrc	r25, 7
    18a0:	08 c0       	rjmp	.+16     	; 0x18b2 <skip_spaces+0x26>
    18a2:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <isspace>
    18a6:	89 2b       	or	r24, r25
    18a8:	b1 f7       	brne	.-20     	; 0x1896 <skip_spaces+0xa>
    18aa:	b8 01       	movw	r22, r16
    18ac:	ce 01       	movw	r24, r28
    18ae:	0e 94 96 11 	call	0x232c	; 0x232c <ungetc>
    18b2:	ce 01       	movw	r24, r28
    18b4:	df 91       	pop	r29
    18b6:	cf 91       	pop	r28
    18b8:	1f 91       	pop	r17
    18ba:	0f 91       	pop	r16
    18bc:	08 95       	ret

000018be <conv_int>:
    18be:	8f 92       	push	r8
    18c0:	9f 92       	push	r9
    18c2:	af 92       	push	r10
    18c4:	bf 92       	push	r11
    18c6:	ef 92       	push	r14
    18c8:	ff 92       	push	r15
    18ca:	0f 93       	push	r16
    18cc:	1f 93       	push	r17
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	8c 01       	movw	r16, r24
    18d4:	d6 2f       	mov	r29, r22
    18d6:	7a 01       	movw	r14, r20
    18d8:	b2 2e       	mov	r11, r18
    18da:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    18de:	9c 01       	movw	r18, r24
    18e0:	33 27       	eor	r19, r19
    18e2:	2b 32       	cpi	r18, 0x2B	; 43
    18e4:	31 05       	cpc	r19, r1
    18e6:	31 f0       	breq	.+12     	; 0x18f4 <conv_int+0x36>
    18e8:	2d 32       	cpi	r18, 0x2D	; 45
    18ea:	31 05       	cpc	r19, r1
    18ec:	61 f4       	brne	.+24     	; 0x1906 <conv_int+0x48>
    18ee:	8b 2d       	mov	r24, r11
    18f0:	80 68       	ori	r24, 0x80	; 128
    18f2:	b8 2e       	mov	r11, r24
    18f4:	d1 50       	subi	r29, 0x01	; 1
    18f6:	11 f4       	brne	.+4      	; 0x18fc <conv_int+0x3e>
    18f8:	80 e0       	ldi	r24, 0x00	; 0
    18fa:	68 c0       	rjmp	.+208    	; 0x19cc <conv_int+0x10e>
    18fc:	c8 01       	movw	r24, r16
    18fe:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1902:	97 fd       	sbrc	r25, 7
    1904:	f9 cf       	rjmp	.-14     	; 0x18f8 <conv_int+0x3a>
    1906:	cb 2d       	mov	r28, r11
    1908:	cd 7f       	andi	r28, 0xFD	; 253
    190a:	2b 2d       	mov	r18, r11
    190c:	20 73       	andi	r18, 0x30	; 48
    190e:	09 f5       	brne	.+66     	; 0x1952 <conv_int+0x94>
    1910:	80 33       	cpi	r24, 0x30	; 48
    1912:	f9 f4       	brne	.+62     	; 0x1952 <conv_int+0x94>
    1914:	aa 24       	eor	r10, r10
    1916:	aa 94       	dec	r10
    1918:	ad 0e       	add	r10, r29
    191a:	09 f4       	brne	.+2      	; 0x191e <conv_int+0x60>
    191c:	43 c0       	rjmp	.+134    	; 0x19a4 <conv_int+0xe6>
    191e:	c8 01       	movw	r24, r16
    1920:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1924:	97 fd       	sbrc	r25, 7
    1926:	3e c0       	rjmp	.+124    	; 0x19a4 <conv_int+0xe6>
    1928:	9c 01       	movw	r18, r24
    192a:	2f 7d       	andi	r18, 0xDF	; 223
    192c:	33 27       	eor	r19, r19
    192e:	28 35       	cpi	r18, 0x58	; 88
    1930:	31 05       	cpc	r19, r1
    1932:	49 f4       	brne	.+18     	; 0x1946 <conv_int+0x88>
    1934:	c2 64       	ori	r28, 0x42	; 66
    1936:	d2 50       	subi	r29, 0x02	; 2
    1938:	a9 f1       	breq	.+106    	; 0x19a4 <conv_int+0xe6>
    193a:	c8 01       	movw	r24, r16
    193c:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1940:	97 ff       	sbrs	r25, 7
    1942:	07 c0       	rjmp	.+14     	; 0x1952 <conv_int+0x94>
    1944:	2f c0       	rjmp	.+94     	; 0x19a4 <conv_int+0xe6>
    1946:	b6 fe       	sbrs	r11, 6
    1948:	02 c0       	rjmp	.+4      	; 0x194e <conv_int+0x90>
    194a:	c2 60       	ori	r28, 0x02	; 2
    194c:	01 c0       	rjmp	.+2      	; 0x1950 <conv_int+0x92>
    194e:	c2 61       	ori	r28, 0x12	; 18
    1950:	da 2d       	mov	r29, r10
    1952:	81 2c       	mov	r8, r1
    1954:	91 2c       	mov	r9, r1
    1956:	54 01       	movw	r10, r8
    1958:	20 ed       	ldi	r18, 0xD0	; 208
    195a:	28 0f       	add	r18, r24
    195c:	28 30       	cpi	r18, 0x08	; 8
    195e:	80 f0       	brcs	.+32     	; 0x1980 <conv_int+0xc2>
    1960:	c4 ff       	sbrs	r28, 4
    1962:	04 c0       	rjmp	.+8      	; 0x196c <conv_int+0xae>
    1964:	b8 01       	movw	r22, r16
    1966:	0e 94 96 11 	call	0x232c	; 0x232c <ungetc>
    196a:	19 c0       	rjmp	.+50     	; 0x199e <conv_int+0xe0>
    196c:	2a 30       	cpi	r18, 0x0A	; 10
    196e:	40 f0       	brcs	.+16     	; 0x1980 <conv_int+0xc2>
    1970:	c6 ff       	sbrs	r28, 6
    1972:	f8 cf       	rjmp	.-16     	; 0x1964 <conv_int+0xa6>
    1974:	2f 7d       	andi	r18, 0xDF	; 223
    1976:	3f ee       	ldi	r19, 0xEF	; 239
    1978:	32 0f       	add	r19, r18
    197a:	36 30       	cpi	r19, 0x06	; 6
    197c:	98 f7       	brcc	.-26     	; 0x1964 <conv_int+0xa6>
    197e:	27 50       	subi	r18, 0x07	; 7
    1980:	4c 2f       	mov	r20, r28
    1982:	c5 01       	movw	r24, r10
    1984:	b4 01       	movw	r22, r8
    1986:	0e 94 1f 0c 	call	0x183e	; 0x183e <mulacc>
    198a:	4b 01       	movw	r8, r22
    198c:	5c 01       	movw	r10, r24
    198e:	c2 60       	ori	r28, 0x02	; 2
    1990:	d1 50       	subi	r29, 0x01	; 1
    1992:	59 f0       	breq	.+22     	; 0x19aa <conv_int+0xec>
    1994:	c8 01       	movw	r24, r16
    1996:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    199a:	97 ff       	sbrs	r25, 7
    199c:	dd cf       	rjmp	.-70     	; 0x1958 <conv_int+0x9a>
    199e:	c1 fd       	sbrc	r28, 1
    19a0:	04 c0       	rjmp	.+8      	; 0x19aa <conv_int+0xec>
    19a2:	aa cf       	rjmp	.-172    	; 0x18f8 <conv_int+0x3a>
    19a4:	81 2c       	mov	r8, r1
    19a6:	91 2c       	mov	r9, r1
    19a8:	54 01       	movw	r10, r8
    19aa:	c7 ff       	sbrs	r28, 7
    19ac:	08 c0       	rjmp	.+16     	; 0x19be <conv_int+0x100>
    19ae:	b0 94       	com	r11
    19b0:	a0 94       	com	r10
    19b2:	90 94       	com	r9
    19b4:	80 94       	com	r8
    19b6:	81 1c       	adc	r8, r1
    19b8:	91 1c       	adc	r9, r1
    19ba:	a1 1c       	adc	r10, r1
    19bc:	b1 1c       	adc	r11, r1
    19be:	2c 2f       	mov	r18, r28
    19c0:	b5 01       	movw	r22, r10
    19c2:	a4 01       	movw	r20, r8
    19c4:	c7 01       	movw	r24, r14
    19c6:	0e 94 13 0c 	call	0x1826	; 0x1826 <putval>
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	df 91       	pop	r29
    19ce:	cf 91       	pop	r28
    19d0:	1f 91       	pop	r17
    19d2:	0f 91       	pop	r16
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	bf 90       	pop	r11
    19da:	af 90       	pop	r10
    19dc:	9f 90       	pop	r9
    19de:	8f 90       	pop	r8
    19e0:	08 95       	ret

000019e2 <conv_brk>:
    19e2:	a0 e2       	ldi	r26, 0x20	; 32
    19e4:	b0 e0       	ldi	r27, 0x00	; 0
    19e6:	e7 ef       	ldi	r30, 0xF7	; 247
    19e8:	fc e0       	ldi	r31, 0x0C	; 12
    19ea:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__prologue_saves__+0x6>
    19ee:	5c 01       	movw	r10, r24
    19f0:	96 2e       	mov	r9, r22
    19f2:	7a 01       	movw	r14, r20
    19f4:	f9 01       	movw	r30, r18
    19f6:	8e 01       	movw	r16, r28
    19f8:	0f 5f       	subi	r16, 0xFF	; 255
    19fa:	1f 4f       	sbci	r17, 0xFF	; 255
    19fc:	68 01       	movw	r12, r16
    19fe:	80 e2       	ldi	r24, 0x20	; 32
    1a00:	d8 01       	movw	r26, r16
    1a02:	1d 92       	st	X+, r1
    1a04:	8a 95       	dec	r24
    1a06:	e9 f7       	brne	.-6      	; 0x1a02 <conv_brk+0x20>
    1a08:	d5 01       	movw	r26, r10
    1a0a:	13 96       	adiw	r26, 0x03	; 3
    1a0c:	8c 90       	ld	r8, X
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	61 2c       	mov	r6, r1
    1a14:	71 2c       	mov	r7, r1
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	61 e0       	ldi	r22, 0x01	; 1
    1a1a:	70 e0       	ldi	r23, 0x00	; 0
    1a1c:	83 fc       	sbrc	r8, 3
    1a1e:	25 91       	lpm	r18, Z+
    1a20:	83 fe       	sbrs	r8, 3
    1a22:	21 91       	ld	r18, Z+
    1a24:	8f 01       	movw	r16, r30
    1a26:	52 2e       	mov	r5, r18
    1a28:	21 11       	cpse	r18, r1
    1a2a:	03 c0       	rjmp	.+6      	; 0x1a32 <conv_brk+0x50>
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	92 c0       	rjmp	.+292    	; 0x1b56 <conv_brk+0x174>
    1a32:	2e 35       	cpi	r18, 0x5E	; 94
    1a34:	11 f4       	brne	.+4      	; 0x1a3a <conv_brk+0x58>
    1a36:	00 97       	sbiw	r24, 0x00	; 0
    1a38:	51 f1       	breq	.+84     	; 0x1a8e <conv_brk+0xac>
    1a3a:	43 2f       	mov	r20, r19
    1a3c:	50 e0       	ldi	r21, 0x00	; 0
    1a3e:	48 17       	cp	r20, r24
    1a40:	59 07       	cpc	r21, r25
    1a42:	3c f4       	brge	.+14     	; 0x1a52 <conv_brk+0x70>
    1a44:	2d 35       	cpi	r18, 0x5D	; 93
    1a46:	59 f1       	breq	.+86     	; 0x1a9e <conv_brk+0xbc>
    1a48:	2d 32       	cpi	r18, 0x2D	; 45
    1a4a:	19 f4       	brne	.+6      	; 0x1a52 <conv_brk+0x70>
    1a4c:	77 20       	and	r7, r7
    1a4e:	09 f1       	breq	.+66     	; 0x1a92 <conv_brk+0xb0>
    1a50:	03 c0       	rjmp	.+6      	; 0x1a58 <conv_brk+0x76>
    1a52:	77 20       	and	r7, r7
    1a54:	09 f4       	brne	.+2      	; 0x1a58 <conv_brk+0x76>
    1a56:	6a c0       	rjmp	.+212    	; 0x1b2c <conv_brk+0x14a>
    1a58:	45 2d       	mov	r20, r5
    1a5a:	46 95       	lsr	r20
    1a5c:	46 95       	lsr	r20
    1a5e:	46 95       	lsr	r20
    1a60:	d6 01       	movw	r26, r12
    1a62:	a4 0f       	add	r26, r20
    1a64:	b1 1d       	adc	r27, r1
    1a66:	45 2d       	mov	r20, r5
    1a68:	47 70       	andi	r20, 0x07	; 7
    1a6a:	8b 01       	movw	r16, r22
    1a6c:	02 c0       	rjmp	.+4      	; 0x1a72 <conv_brk+0x90>
    1a6e:	00 0f       	add	r16, r16
    1a70:	11 1f       	adc	r17, r17
    1a72:	4a 95       	dec	r20
    1a74:	e2 f7       	brpl	.-8      	; 0x1a6e <conv_brk+0x8c>
    1a76:	a8 01       	movw	r20, r16
    1a78:	5c 91       	ld	r21, X
    1a7a:	45 2b       	or	r20, r21
    1a7c:	4c 93       	st	X, r20
    1a7e:	65 14       	cp	r6, r5
    1a80:	59 f0       	breq	.+22     	; 0x1a98 <conv_brk+0xb6>
    1a82:	56 14       	cp	r5, r6
    1a84:	10 f4       	brcc	.+4      	; 0x1a8a <conv_brk+0xa8>
    1a86:	53 94       	inc	r5
    1a88:	e7 cf       	rjmp	.-50     	; 0x1a58 <conv_brk+0x76>
    1a8a:	5a 94       	dec	r5
    1a8c:	e5 cf       	rjmp	.-54     	; 0x1a58 <conv_brk+0x76>
    1a8e:	31 e0       	ldi	r19, 0x01	; 1
    1a90:	04 c0       	rjmp	.+8      	; 0x1a9a <conv_brk+0xb8>
    1a92:	77 24       	eor	r7, r7
    1a94:	73 94       	inc	r7
    1a96:	01 c0       	rjmp	.+2      	; 0x1a9a <conv_brk+0xb8>
    1a98:	71 2c       	mov	r7, r1
    1a9a:	01 96       	adiw	r24, 0x01	; 1
    1a9c:	bf cf       	rjmp	.-130    	; 0x1a1c <conv_brk+0x3a>
    1a9e:	77 20       	and	r7, r7
    1aa0:	19 f0       	breq	.+6      	; 0x1aa8 <conv_brk+0xc6>
    1aa2:	8e 81       	ldd	r24, Y+6	; 0x06
    1aa4:	80 62       	ori	r24, 0x20	; 32
    1aa6:	8e 83       	std	Y+6, r24	; 0x06
    1aa8:	31 11       	cpse	r19, r1
    1aaa:	03 c0       	rjmp	.+6      	; 0x1ab2 <conv_brk+0xd0>
    1aac:	88 24       	eor	r8, r8
    1aae:	83 94       	inc	r8
    1ab0:	17 c0       	rjmp	.+46     	; 0x1ae0 <conv_brk+0xfe>
    1ab2:	f6 01       	movw	r30, r12
    1ab4:	9e 01       	movw	r18, r28
    1ab6:	2f 5d       	subi	r18, 0xDF	; 223
    1ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aba:	80 81       	ld	r24, Z
    1abc:	80 95       	com	r24
    1abe:	81 93       	st	Z+, r24
    1ac0:	2e 17       	cp	r18, r30
    1ac2:	3f 07       	cpc	r19, r31
    1ac4:	d1 f7       	brne	.-12     	; 0x1aba <conv_brk+0xd8>
    1ac6:	f2 cf       	rjmp	.-28     	; 0x1aac <conv_brk+0xca>
    1ac8:	e1 14       	cp	r14, r1
    1aca:	f1 04       	cpc	r15, r1
    1acc:	29 f0       	breq	.+10     	; 0x1ad8 <conv_brk+0xf6>
    1ace:	d7 01       	movw	r26, r14
    1ad0:	8c 93       	st	X, r24
    1ad2:	f7 01       	movw	r30, r14
    1ad4:	31 96       	adiw	r30, 0x01	; 1
    1ad6:	7f 01       	movw	r14, r30
    1ad8:	9a 94       	dec	r9
    1ada:	81 2c       	mov	r8, r1
    1adc:	99 20       	and	r9, r9
    1ade:	f9 f0       	breq	.+62     	; 0x1b1e <conv_brk+0x13c>
    1ae0:	c5 01       	movw	r24, r10
    1ae2:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1ae6:	97 fd       	sbrc	r25, 7
    1ae8:	18 c0       	rjmp	.+48     	; 0x1b1a <conv_brk+0x138>
    1aea:	fc 01       	movw	r30, r24
    1aec:	ff 27       	eor	r31, r31
    1aee:	23 e0       	ldi	r18, 0x03	; 3
    1af0:	f5 95       	asr	r31
    1af2:	e7 95       	ror	r30
    1af4:	2a 95       	dec	r18
    1af6:	e1 f7       	brne	.-8      	; 0x1af0 <conv_brk+0x10e>
    1af8:	ec 0d       	add	r30, r12
    1afa:	fd 1d       	adc	r31, r13
    1afc:	20 81       	ld	r18, Z
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	ac 01       	movw	r20, r24
    1b02:	47 70       	andi	r20, 0x07	; 7
    1b04:	55 27       	eor	r21, r21
    1b06:	02 c0       	rjmp	.+4      	; 0x1b0c <conv_brk+0x12a>
    1b08:	35 95       	asr	r19
    1b0a:	27 95       	ror	r18
    1b0c:	4a 95       	dec	r20
    1b0e:	e2 f7       	brpl	.-8      	; 0x1b08 <conv_brk+0x126>
    1b10:	20 fd       	sbrc	r18, 0
    1b12:	da cf       	rjmp	.-76     	; 0x1ac8 <conv_brk+0xe6>
    1b14:	b5 01       	movw	r22, r10
    1b16:	0e 94 96 11 	call	0x232c	; 0x232c <ungetc>
    1b1a:	81 10       	cpse	r8, r1
    1b1c:	87 cf       	rjmp	.-242    	; 0x1a2c <conv_brk+0x4a>
    1b1e:	e1 14       	cp	r14, r1
    1b20:	f1 04       	cpc	r15, r1
    1b22:	11 f0       	breq	.+4      	; 0x1b28 <conv_brk+0x146>
    1b24:	d7 01       	movw	r26, r14
    1b26:	1c 92       	st	X, r1
    1b28:	c8 01       	movw	r24, r16
    1b2a:	15 c0       	rjmp	.+42     	; 0x1b56 <conv_brk+0x174>
    1b2c:	42 2f       	mov	r20, r18
    1b2e:	46 95       	lsr	r20
    1b30:	46 95       	lsr	r20
    1b32:	46 95       	lsr	r20
    1b34:	d6 01       	movw	r26, r12
    1b36:	a4 0f       	add	r26, r20
    1b38:	b1 1d       	adc	r27, r1
    1b3a:	42 2f       	mov	r20, r18
    1b3c:	47 70       	andi	r20, 0x07	; 7
    1b3e:	8b 01       	movw	r16, r22
    1b40:	02 c0       	rjmp	.+4      	; 0x1b46 <conv_brk+0x164>
    1b42:	00 0f       	add	r16, r16
    1b44:	11 1f       	adc	r17, r17
    1b46:	4a 95       	dec	r20
    1b48:	e2 f7       	brpl	.-8      	; 0x1b42 <conv_brk+0x160>
    1b4a:	a8 01       	movw	r20, r16
    1b4c:	5c 91       	ld	r21, X
    1b4e:	45 2b       	or	r20, r21
    1b50:	4c 93       	st	X, r20
    1b52:	62 2e       	mov	r6, r18
    1b54:	a2 cf       	rjmp	.-188    	; 0x1a9a <conv_brk+0xb8>
    1b56:	a0 96       	adiw	r28, 0x20	; 32
    1b58:	ef e0       	ldi	r30, 0x0F	; 15
    1b5a:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__epilogue_restores__+0x6>

00001b5e <vfscanf>:
    1b5e:	a0 e0       	ldi	r26, 0x00	; 0
    1b60:	b0 e0       	ldi	r27, 0x00	; 0
    1b62:	e5 eb       	ldi	r30, 0xB5	; 181
    1b64:	fd e0       	ldi	r31, 0x0D	; 13
    1b66:	0c 94 13 12 	jmp	0x2426	; 0x2426 <__prologue_saves__+0x6>
    1b6a:	6c 01       	movw	r12, r24
    1b6c:	eb 01       	movw	r28, r22
    1b6e:	5a 01       	movw	r10, r20
    1b70:	fc 01       	movw	r30, r24
    1b72:	17 82       	std	Z+7, r1	; 0x07
    1b74:	16 82       	std	Z+6, r1	; 0x06
    1b76:	51 2c       	mov	r5, r1
    1b78:	f6 01       	movw	r30, r12
    1b7a:	e3 80       	ldd	r14, Z+3	; 0x03
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	e3 fc       	sbrc	r14, 3
    1b80:	85 91       	lpm	r24, Z+
    1b82:	e3 fe       	sbrs	r14, 3
    1b84:	81 91       	ld	r24, Z+
    1b86:	18 2f       	mov	r17, r24
    1b88:	ef 01       	movw	r28, r30
    1b8a:	88 23       	and	r24, r24
    1b8c:	09 f4       	brne	.+2      	; 0x1b90 <vfscanf+0x32>
    1b8e:	ee c0       	rjmp	.+476    	; 0x1d6c <vfscanf+0x20e>
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <isspace>
    1b96:	89 2b       	or	r24, r25
    1b98:	21 f0       	breq	.+8      	; 0x1ba2 <vfscanf+0x44>
    1b9a:	c6 01       	movw	r24, r12
    1b9c:	0e 94 46 0c 	call	0x188c	; 0x188c <skip_spaces>
    1ba0:	eb cf       	rjmp	.-42     	; 0x1b78 <vfscanf+0x1a>
    1ba2:	15 32       	cpi	r17, 0x25	; 37
    1ba4:	41 f4       	brne	.+16     	; 0x1bb6 <vfscanf+0x58>
    1ba6:	fe 01       	movw	r30, r28
    1ba8:	e3 fc       	sbrc	r14, 3
    1baa:	15 91       	lpm	r17, Z+
    1bac:	e3 fe       	sbrs	r14, 3
    1bae:	11 91       	ld	r17, Z+
    1bb0:	ef 01       	movw	r28, r30
    1bb2:	15 32       	cpi	r17, 0x25	; 37
    1bb4:	81 f4       	brne	.+32     	; 0x1bd6 <vfscanf+0x78>
    1bb6:	c6 01       	movw	r24, r12
    1bb8:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1bbc:	97 fd       	sbrc	r25, 7
    1bbe:	d4 c0       	rjmp	.+424    	; 0x1d68 <vfscanf+0x20a>
    1bc0:	41 2f       	mov	r20, r17
    1bc2:	50 e0       	ldi	r21, 0x00	; 0
    1bc4:	9c 01       	movw	r18, r24
    1bc6:	33 27       	eor	r19, r19
    1bc8:	24 17       	cp	r18, r20
    1bca:	35 07       	cpc	r19, r21
    1bcc:	a9 f2       	breq	.-86     	; 0x1b78 <vfscanf+0x1a>
    1bce:	b6 01       	movw	r22, r12
    1bd0:	0e 94 96 11 	call	0x232c	; 0x232c <ungetc>
    1bd4:	cb c0       	rjmp	.+406    	; 0x1d6c <vfscanf+0x20e>
    1bd6:	1a 32       	cpi	r17, 0x2A	; 42
    1bd8:	39 f4       	brne	.+14     	; 0x1be8 <vfscanf+0x8a>
    1bda:	e3 fc       	sbrc	r14, 3
    1bdc:	15 91       	lpm	r17, Z+
    1bde:	e3 fe       	sbrs	r14, 3
    1be0:	11 91       	ld	r17, Z+
    1be2:	ef 01       	movw	r28, r30
    1be4:	01 e0       	ldi	r16, 0x01	; 1
    1be6:	01 c0       	rjmp	.+2      	; 0x1bea <vfscanf+0x8c>
    1be8:	00 e0       	ldi	r16, 0x00	; 0
    1bea:	f1 2c       	mov	r15, r1
    1bec:	20 ed       	ldi	r18, 0xD0	; 208
    1bee:	21 0f       	add	r18, r17
    1bf0:	2a 30       	cpi	r18, 0x0A	; 10
    1bf2:	80 f4       	brcc	.+32     	; 0x1c14 <vfscanf+0xb6>
    1bf4:	02 60       	ori	r16, 0x02	; 2
    1bf6:	6f 2d       	mov	r22, r15
    1bf8:	70 e0       	ldi	r23, 0x00	; 0
    1bfa:	80 e0       	ldi	r24, 0x00	; 0
    1bfc:	90 e0       	ldi	r25, 0x00	; 0
    1bfe:	40 e2       	ldi	r20, 0x20	; 32
    1c00:	0e 94 1f 0c 	call	0x183e	; 0x183e <mulacc>
    1c04:	f6 2e       	mov	r15, r22
    1c06:	fe 01       	movw	r30, r28
    1c08:	e3 fc       	sbrc	r14, 3
    1c0a:	15 91       	lpm	r17, Z+
    1c0c:	e3 fe       	sbrs	r14, 3
    1c0e:	11 91       	ld	r17, Z+
    1c10:	ef 01       	movw	r28, r30
    1c12:	ec cf       	rjmp	.-40     	; 0x1bec <vfscanf+0x8e>
    1c14:	01 ff       	sbrs	r16, 1
    1c16:	03 c0       	rjmp	.+6      	; 0x1c1e <vfscanf+0xc0>
    1c18:	f1 10       	cpse	r15, r1
    1c1a:	03 c0       	rjmp	.+6      	; 0x1c22 <vfscanf+0xc4>
    1c1c:	a7 c0       	rjmp	.+334    	; 0x1d6c <vfscanf+0x20e>
    1c1e:	ff 24       	eor	r15, r15
    1c20:	fa 94       	dec	r15
    1c22:	18 36       	cpi	r17, 0x68	; 104
    1c24:	19 f0       	breq	.+6      	; 0x1c2c <vfscanf+0xce>
    1c26:	1c 36       	cpi	r17, 0x6C	; 108
    1c28:	51 f0       	breq	.+20     	; 0x1c3e <vfscanf+0xe0>
    1c2a:	10 c0       	rjmp	.+32     	; 0x1c4c <vfscanf+0xee>
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	e3 fc       	sbrc	r14, 3
    1c30:	15 91       	lpm	r17, Z+
    1c32:	e3 fe       	sbrs	r14, 3
    1c34:	11 91       	ld	r17, Z+
    1c36:	ef 01       	movw	r28, r30
    1c38:	18 36       	cpi	r17, 0x68	; 104
    1c3a:	41 f4       	brne	.+16     	; 0x1c4c <vfscanf+0xee>
    1c3c:	08 60       	ori	r16, 0x08	; 8
    1c3e:	04 60       	ori	r16, 0x04	; 4
    1c40:	fe 01       	movw	r30, r28
    1c42:	e3 fc       	sbrc	r14, 3
    1c44:	15 91       	lpm	r17, Z+
    1c46:	e3 fe       	sbrs	r14, 3
    1c48:	11 91       	ld	r17, Z+
    1c4a:	ef 01       	movw	r28, r30
    1c4c:	11 23       	and	r17, r17
    1c4e:	09 f4       	brne	.+2      	; 0x1c52 <vfscanf+0xf4>
    1c50:	8d c0       	rjmp	.+282    	; 0x1d6c <vfscanf+0x20e>
    1c52:	61 2f       	mov	r22, r17
    1c54:	70 e0       	ldi	r23, 0x00	; 0
    1c56:	84 e5       	ldi	r24, 0x54	; 84
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <strchr_P>
    1c5e:	89 2b       	or	r24, r25
    1c60:	09 f4       	brne	.+2      	; 0x1c64 <vfscanf+0x106>
    1c62:	84 c0       	rjmp	.+264    	; 0x1d6c <vfscanf+0x20e>
    1c64:	00 fd       	sbrc	r16, 0
    1c66:	07 c0       	rjmp	.+14     	; 0x1c76 <vfscanf+0x118>
    1c68:	f5 01       	movw	r30, r10
    1c6a:	80 80       	ld	r8, Z
    1c6c:	91 80       	ldd	r9, Z+1	; 0x01
    1c6e:	c5 01       	movw	r24, r10
    1c70:	02 96       	adiw	r24, 0x02	; 2
    1c72:	5c 01       	movw	r10, r24
    1c74:	02 c0       	rjmp	.+4      	; 0x1c7a <vfscanf+0x11c>
    1c76:	81 2c       	mov	r8, r1
    1c78:	91 2c       	mov	r9, r1
    1c7a:	1e 36       	cpi	r17, 0x6E	; 110
    1c7c:	51 f4       	brne	.+20     	; 0x1c92 <vfscanf+0x134>
    1c7e:	f6 01       	movw	r30, r12
    1c80:	46 81       	ldd	r20, Z+6	; 0x06
    1c82:	57 81       	ldd	r21, Z+7	; 0x07
    1c84:	60 e0       	ldi	r22, 0x00	; 0
    1c86:	70 e0       	ldi	r23, 0x00	; 0
    1c88:	20 2f       	mov	r18, r16
    1c8a:	c4 01       	movw	r24, r8
    1c8c:	0e 94 13 0c 	call	0x1826	; 0x1826 <putval>
    1c90:	73 cf       	rjmp	.-282    	; 0x1b78 <vfscanf+0x1a>
    1c92:	13 36       	cpi	r17, 0x63	; 99
    1c94:	a9 f4       	brne	.+42     	; 0x1cc0 <vfscanf+0x162>
    1c96:	01 fd       	sbrc	r16, 1
    1c98:	02 c0       	rjmp	.+4      	; 0x1c9e <vfscanf+0x140>
    1c9a:	ff 24       	eor	r15, r15
    1c9c:	f3 94       	inc	r15
    1c9e:	c6 01       	movw	r24, r12
    1ca0:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1ca4:	97 fd       	sbrc	r25, 7
    1ca6:	60 c0       	rjmp	.+192    	; 0x1d68 <vfscanf+0x20a>
    1ca8:	81 14       	cp	r8, r1
    1caa:	91 04       	cpc	r9, r1
    1cac:	29 f0       	breq	.+10     	; 0x1cb8 <vfscanf+0x15a>
    1cae:	f4 01       	movw	r30, r8
    1cb0:	80 83       	st	Z, r24
    1cb2:	c4 01       	movw	r24, r8
    1cb4:	01 96       	adiw	r24, 0x01	; 1
    1cb6:	4c 01       	movw	r8, r24
    1cb8:	fa 94       	dec	r15
    1cba:	f1 10       	cpse	r15, r1
    1cbc:	f0 cf       	rjmp	.-32     	; 0x1c9e <vfscanf+0x140>
    1cbe:	50 c0       	rjmp	.+160    	; 0x1d60 <vfscanf+0x202>
    1cc0:	1b 35       	cpi	r17, 0x5B	; 91
    1cc2:	59 f4       	brne	.+22     	; 0x1cda <vfscanf+0x17c>
    1cc4:	9e 01       	movw	r18, r28
    1cc6:	a4 01       	movw	r20, r8
    1cc8:	6f 2d       	mov	r22, r15
    1cca:	c6 01       	movw	r24, r12
    1ccc:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <conv_brk>
    1cd0:	ec 01       	movw	r28, r24
    1cd2:	89 2b       	or	r24, r25
    1cd4:	09 f0       	breq	.+2      	; 0x1cd8 <vfscanf+0x17a>
    1cd6:	44 c0       	rjmp	.+136    	; 0x1d60 <vfscanf+0x202>
    1cd8:	3e c0       	rjmp	.+124    	; 0x1d56 <vfscanf+0x1f8>
    1cda:	c6 01       	movw	r24, r12
    1cdc:	0e 94 46 0c 	call	0x188c	; 0x188c <skip_spaces>
    1ce0:	97 fd       	sbrc	r25, 7
    1ce2:	42 c0       	rjmp	.+132    	; 0x1d68 <vfscanf+0x20a>
    1ce4:	1f 36       	cpi	r17, 0x6F	; 111
    1ce6:	61 f1       	breq	.+88     	; 0x1d40 <vfscanf+0x1e2>
    1ce8:	28 f4       	brcc	.+10     	; 0x1cf4 <vfscanf+0x196>
    1cea:	14 36       	cpi	r17, 0x64	; 100
    1cec:	39 f1       	breq	.+78     	; 0x1d3c <vfscanf+0x1de>
    1cee:	19 36       	cpi	r17, 0x69	; 105
    1cf0:	51 f1       	breq	.+84     	; 0x1d46 <vfscanf+0x1e8>
    1cf2:	28 c0       	rjmp	.+80     	; 0x1d44 <vfscanf+0x1e6>
    1cf4:	13 37       	cpi	r17, 0x73	; 115
    1cf6:	71 f0       	breq	.+28     	; 0x1d14 <vfscanf+0x1b6>
    1cf8:	15 37       	cpi	r17, 0x75	; 117
    1cfa:	01 f1       	breq	.+64     	; 0x1d3c <vfscanf+0x1de>
    1cfc:	23 c0       	rjmp	.+70     	; 0x1d44 <vfscanf+0x1e6>
    1cfe:	81 14       	cp	r8, r1
    1d00:	91 04       	cpc	r9, r1
    1d02:	29 f0       	breq	.+10     	; 0x1d0e <vfscanf+0x1b0>
    1d04:	f4 01       	movw	r30, r8
    1d06:	60 82       	st	Z, r6
    1d08:	c4 01       	movw	r24, r8
    1d0a:	01 96       	adiw	r24, 0x01	; 1
    1d0c:	4c 01       	movw	r8, r24
    1d0e:	fa 94       	dec	r15
    1d10:	ff 20       	and	r15, r15
    1d12:	71 f0       	breq	.+28     	; 0x1d30 <vfscanf+0x1d2>
    1d14:	c6 01       	movw	r24, r12
    1d16:	0e 94 1c 11 	call	0x2238	; 0x2238 <fgetc>
    1d1a:	3c 01       	movw	r6, r24
    1d1c:	97 fd       	sbrc	r25, 7
    1d1e:	08 c0       	rjmp	.+16     	; 0x1d30 <vfscanf+0x1d2>
    1d20:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <isspace>
    1d24:	89 2b       	or	r24, r25
    1d26:	59 f3       	breq	.-42     	; 0x1cfe <vfscanf+0x1a0>
    1d28:	b6 01       	movw	r22, r12
    1d2a:	c3 01       	movw	r24, r6
    1d2c:	0e 94 96 11 	call	0x232c	; 0x232c <ungetc>
    1d30:	81 14       	cp	r8, r1
    1d32:	91 04       	cpc	r9, r1
    1d34:	a9 f0       	breq	.+42     	; 0x1d60 <vfscanf+0x202>
    1d36:	f4 01       	movw	r30, r8
    1d38:	10 82       	st	Z, r1
    1d3a:	12 c0       	rjmp	.+36     	; 0x1d60 <vfscanf+0x202>
    1d3c:	00 62       	ori	r16, 0x20	; 32
    1d3e:	03 c0       	rjmp	.+6      	; 0x1d46 <vfscanf+0x1e8>
    1d40:	00 61       	ori	r16, 0x10	; 16
    1d42:	01 c0       	rjmp	.+2      	; 0x1d46 <vfscanf+0x1e8>
    1d44:	00 64       	ori	r16, 0x40	; 64
    1d46:	20 2f       	mov	r18, r16
    1d48:	a4 01       	movw	r20, r8
    1d4a:	6f 2d       	mov	r22, r15
    1d4c:	c6 01       	movw	r24, r12
    1d4e:	0e 94 5f 0c 	call	0x18be	; 0x18be <conv_int>
    1d52:	81 11       	cpse	r24, r1
    1d54:	05 c0       	rjmp	.+10     	; 0x1d60 <vfscanf+0x202>
    1d56:	f6 01       	movw	r30, r12
    1d58:	83 81       	ldd	r24, Z+3	; 0x03
    1d5a:	80 73       	andi	r24, 0x30	; 48
    1d5c:	29 f4       	brne	.+10     	; 0x1d68 <vfscanf+0x20a>
    1d5e:	06 c0       	rjmp	.+12     	; 0x1d6c <vfscanf+0x20e>
    1d60:	00 fd       	sbrc	r16, 0
    1d62:	0a cf       	rjmp	.-492    	; 0x1b78 <vfscanf+0x1a>
    1d64:	53 94       	inc	r5
    1d66:	08 cf       	rjmp	.-496    	; 0x1b78 <vfscanf+0x1a>
    1d68:	55 20       	and	r5, r5
    1d6a:	19 f0       	breq	.+6      	; 0x1d72 <vfscanf+0x214>
    1d6c:	85 2d       	mov	r24, r5
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	02 c0       	rjmp	.+4      	; 0x1d76 <vfscanf+0x218>
    1d72:	8f ef       	ldi	r24, 0xFF	; 255
    1d74:	9f ef       	ldi	r25, 0xFF	; 255
    1d76:	cd b7       	in	r28, 0x3d	; 61
    1d78:	de b7       	in	r29, 0x3e	; 62
    1d7a:	ef e0       	ldi	r30, 0x0F	; 15
    1d7c:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__epilogue_restores__+0x6>

00001d80 <dtoa_prf>:
    1d80:	a9 e0       	ldi	r26, 0x09	; 9
    1d82:	b0 e0       	ldi	r27, 0x00	; 0
    1d84:	e6 ec       	ldi	r30, 0xC6	; 198
    1d86:	fe e0       	ldi	r31, 0x0E	; 14
    1d88:	0c 94 16 12 	jmp	0x242c	; 0x242c <__prologue_saves__+0xc>
    1d8c:	6a 01       	movw	r12, r20
    1d8e:	12 2f       	mov	r17, r18
    1d90:	b0 2e       	mov	r11, r16
    1d92:	2b e3       	ldi	r18, 0x3B	; 59
    1d94:	20 17       	cp	r18, r16
    1d96:	20 f0       	brcs	.+8      	; 0x1da0 <dtoa_prf+0x20>
    1d98:	ff 24       	eor	r15, r15
    1d9a:	f3 94       	inc	r15
    1d9c:	f0 0e       	add	r15, r16
    1d9e:	02 c0       	rjmp	.+4      	; 0x1da4 <dtoa_prf+0x24>
    1da0:	2c e3       	ldi	r18, 0x3C	; 60
    1da2:	f2 2e       	mov	r15, r18
    1da4:	0f 2d       	mov	r16, r15
    1da6:	27 e0       	ldi	r18, 0x07	; 7
    1da8:	ae 01       	movw	r20, r28
    1daa:	4f 5f       	subi	r20, 0xFF	; 255
    1dac:	5f 4f       	sbci	r21, 0xFF	; 255
    1dae:	0e 94 1a 10 	call	0x2034	; 0x2034 <__ftoa_engine>
    1db2:	bc 01       	movw	r22, r24
    1db4:	49 81       	ldd	r20, Y+1	; 0x01
    1db6:	84 2f       	mov	r24, r20
    1db8:	89 70       	andi	r24, 0x09	; 9
    1dba:	81 30       	cpi	r24, 0x01	; 1
    1dbc:	31 f0       	breq	.+12     	; 0x1dca <dtoa_prf+0x4a>
    1dbe:	e1 fc       	sbrc	r14, 1
    1dc0:	06 c0       	rjmp	.+12     	; 0x1dce <dtoa_prf+0x4e>
    1dc2:	e0 fe       	sbrs	r14, 0
    1dc4:	06 c0       	rjmp	.+12     	; 0x1dd2 <dtoa_prf+0x52>
    1dc6:	90 e2       	ldi	r25, 0x20	; 32
    1dc8:	05 c0       	rjmp	.+10     	; 0x1dd4 <dtoa_prf+0x54>
    1dca:	9d e2       	ldi	r25, 0x2D	; 45
    1dcc:	03 c0       	rjmp	.+6      	; 0x1dd4 <dtoa_prf+0x54>
    1dce:	9b e2       	ldi	r25, 0x2B	; 43
    1dd0:	01 c0       	rjmp	.+2      	; 0x1dd4 <dtoa_prf+0x54>
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	5e 2d       	mov	r21, r14
    1dd6:	50 71       	andi	r21, 0x10	; 16
    1dd8:	43 ff       	sbrs	r20, 3
    1dda:	3c c0       	rjmp	.+120    	; 0x1e54 <dtoa_prf+0xd4>
    1ddc:	91 11       	cpse	r25, r1
    1dde:	02 c0       	rjmp	.+4      	; 0x1de4 <dtoa_prf+0x64>
    1de0:	83 e0       	ldi	r24, 0x03	; 3
    1de2:	01 c0       	rjmp	.+2      	; 0x1de6 <dtoa_prf+0x66>
    1de4:	84 e0       	ldi	r24, 0x04	; 4
    1de6:	81 17       	cp	r24, r17
    1de8:	18 f4       	brcc	.+6      	; 0x1df0 <dtoa_prf+0x70>
    1dea:	21 2f       	mov	r18, r17
    1dec:	28 1b       	sub	r18, r24
    1dee:	01 c0       	rjmp	.+2      	; 0x1df2 <dtoa_prf+0x72>
    1df0:	20 e0       	ldi	r18, 0x00	; 0
    1df2:	51 11       	cpse	r21, r1
    1df4:	0b c0       	rjmp	.+22     	; 0x1e0c <dtoa_prf+0x8c>
    1df6:	f6 01       	movw	r30, r12
    1df8:	82 2f       	mov	r24, r18
    1dfa:	30 e2       	ldi	r19, 0x20	; 32
    1dfc:	88 23       	and	r24, r24
    1dfe:	19 f0       	breq	.+6      	; 0x1e06 <dtoa_prf+0x86>
    1e00:	31 93       	st	Z+, r19
    1e02:	81 50       	subi	r24, 0x01	; 1
    1e04:	fb cf       	rjmp	.-10     	; 0x1dfc <dtoa_prf+0x7c>
    1e06:	c2 0e       	add	r12, r18
    1e08:	d1 1c       	adc	r13, r1
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	99 23       	and	r25, r25
    1e0e:	29 f0       	breq	.+10     	; 0x1e1a <dtoa_prf+0x9a>
    1e10:	d6 01       	movw	r26, r12
    1e12:	9c 93       	st	X, r25
    1e14:	f6 01       	movw	r30, r12
    1e16:	31 96       	adiw	r30, 0x01	; 1
    1e18:	6f 01       	movw	r12, r30
    1e1a:	c6 01       	movw	r24, r12
    1e1c:	03 96       	adiw	r24, 0x03	; 3
    1e1e:	e2 fe       	sbrs	r14, 2
    1e20:	0a c0       	rjmp	.+20     	; 0x1e36 <dtoa_prf+0xb6>
    1e22:	3e e4       	ldi	r19, 0x4E	; 78
    1e24:	d6 01       	movw	r26, r12
    1e26:	3c 93       	st	X, r19
    1e28:	41 e4       	ldi	r20, 0x41	; 65
    1e2a:	11 96       	adiw	r26, 0x01	; 1
    1e2c:	4c 93       	st	X, r20
    1e2e:	11 97       	sbiw	r26, 0x01	; 1
    1e30:	12 96       	adiw	r26, 0x02	; 2
    1e32:	3c 93       	st	X, r19
    1e34:	06 c0       	rjmp	.+12     	; 0x1e42 <dtoa_prf+0xc2>
    1e36:	3e e6       	ldi	r19, 0x6E	; 110
    1e38:	f6 01       	movw	r30, r12
    1e3a:	30 83       	st	Z, r19
    1e3c:	41 e6       	ldi	r20, 0x61	; 97
    1e3e:	41 83       	std	Z+1, r20	; 0x01
    1e40:	32 83       	std	Z+2, r19	; 0x02
    1e42:	fc 01       	movw	r30, r24
    1e44:	32 2f       	mov	r19, r18
    1e46:	40 e2       	ldi	r20, 0x20	; 32
    1e48:	33 23       	and	r19, r19
    1e4a:	09 f4       	brne	.+2      	; 0x1e4e <dtoa_prf+0xce>
    1e4c:	42 c0       	rjmp	.+132    	; 0x1ed2 <dtoa_prf+0x152>
    1e4e:	41 93       	st	Z+, r20
    1e50:	31 50       	subi	r19, 0x01	; 1
    1e52:	fa cf       	rjmp	.-12     	; 0x1e48 <dtoa_prf+0xc8>
    1e54:	42 ff       	sbrs	r20, 2
    1e56:	44 c0       	rjmp	.+136    	; 0x1ee0 <dtoa_prf+0x160>
    1e58:	91 11       	cpse	r25, r1
    1e5a:	02 c0       	rjmp	.+4      	; 0x1e60 <dtoa_prf+0xe0>
    1e5c:	83 e0       	ldi	r24, 0x03	; 3
    1e5e:	01 c0       	rjmp	.+2      	; 0x1e62 <dtoa_prf+0xe2>
    1e60:	84 e0       	ldi	r24, 0x04	; 4
    1e62:	81 17       	cp	r24, r17
    1e64:	18 f4       	brcc	.+6      	; 0x1e6c <dtoa_prf+0xec>
    1e66:	21 2f       	mov	r18, r17
    1e68:	28 1b       	sub	r18, r24
    1e6a:	01 c0       	rjmp	.+2      	; 0x1e6e <dtoa_prf+0xee>
    1e6c:	20 e0       	ldi	r18, 0x00	; 0
    1e6e:	51 11       	cpse	r21, r1
    1e70:	0b c0       	rjmp	.+22     	; 0x1e88 <dtoa_prf+0x108>
    1e72:	f6 01       	movw	r30, r12
    1e74:	82 2f       	mov	r24, r18
    1e76:	30 e2       	ldi	r19, 0x20	; 32
    1e78:	88 23       	and	r24, r24
    1e7a:	19 f0       	breq	.+6      	; 0x1e82 <dtoa_prf+0x102>
    1e7c:	31 93       	st	Z+, r19
    1e7e:	81 50       	subi	r24, 0x01	; 1
    1e80:	fb cf       	rjmp	.-10     	; 0x1e78 <dtoa_prf+0xf8>
    1e82:	c2 0e       	add	r12, r18
    1e84:	d1 1c       	adc	r13, r1
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	99 23       	and	r25, r25
    1e8a:	29 f0       	breq	.+10     	; 0x1e96 <dtoa_prf+0x116>
    1e8c:	d6 01       	movw	r26, r12
    1e8e:	9c 93       	st	X, r25
    1e90:	f6 01       	movw	r30, r12
    1e92:	31 96       	adiw	r30, 0x01	; 1
    1e94:	6f 01       	movw	r12, r30
    1e96:	c6 01       	movw	r24, r12
    1e98:	03 96       	adiw	r24, 0x03	; 3
    1e9a:	e2 fe       	sbrs	r14, 2
    1e9c:	0b c0       	rjmp	.+22     	; 0x1eb4 <dtoa_prf+0x134>
    1e9e:	39 e4       	ldi	r19, 0x49	; 73
    1ea0:	d6 01       	movw	r26, r12
    1ea2:	3c 93       	st	X, r19
    1ea4:	3e e4       	ldi	r19, 0x4E	; 78
    1ea6:	11 96       	adiw	r26, 0x01	; 1
    1ea8:	3c 93       	st	X, r19
    1eaa:	11 97       	sbiw	r26, 0x01	; 1
    1eac:	36 e4       	ldi	r19, 0x46	; 70
    1eae:	12 96       	adiw	r26, 0x02	; 2
    1eb0:	3c 93       	st	X, r19
    1eb2:	07 c0       	rjmp	.+14     	; 0x1ec2 <dtoa_prf+0x142>
    1eb4:	39 e6       	ldi	r19, 0x69	; 105
    1eb6:	f6 01       	movw	r30, r12
    1eb8:	30 83       	st	Z, r19
    1eba:	3e e6       	ldi	r19, 0x6E	; 110
    1ebc:	31 83       	std	Z+1, r19	; 0x01
    1ebe:	36 e6       	ldi	r19, 0x66	; 102
    1ec0:	32 83       	std	Z+2, r19	; 0x02
    1ec2:	fc 01       	movw	r30, r24
    1ec4:	32 2f       	mov	r19, r18
    1ec6:	40 e2       	ldi	r20, 0x20	; 32
    1ec8:	33 23       	and	r19, r19
    1eca:	19 f0       	breq	.+6      	; 0x1ed2 <dtoa_prf+0x152>
    1ecc:	41 93       	st	Z+, r20
    1ece:	31 50       	subi	r19, 0x01	; 1
    1ed0:	fb cf       	rjmp	.-10     	; 0x1ec8 <dtoa_prf+0x148>
    1ed2:	fc 01       	movw	r30, r24
    1ed4:	e2 0f       	add	r30, r18
    1ed6:	f1 1d       	adc	r31, r1
    1ed8:	10 82       	st	Z, r1
    1eda:	8e ef       	ldi	r24, 0xFE	; 254
    1edc:	9f ef       	ldi	r25, 0xFF	; 255
    1ede:	a6 c0       	rjmp	.+332    	; 0x202c <dtoa_prf+0x2ac>
    1ee0:	21 e0       	ldi	r18, 0x01	; 1
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	91 11       	cpse	r25, r1
    1ee6:	02 c0       	rjmp	.+4      	; 0x1eec <dtoa_prf+0x16c>
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	16 16       	cp	r1, r22
    1eee:	17 06       	cpc	r1, r23
    1ef0:	1c f4       	brge	.+6      	; 0x1ef8 <dtoa_prf+0x178>
    1ef2:	fb 01       	movw	r30, r22
    1ef4:	31 96       	adiw	r30, 0x01	; 1
    1ef6:	02 c0       	rjmp	.+4      	; 0x1efc <dtoa_prf+0x17c>
    1ef8:	e1 e0       	ldi	r30, 0x01	; 1
    1efa:	f0 e0       	ldi	r31, 0x00	; 0
    1efc:	2e 0f       	add	r18, r30
    1efe:	3f 1f       	adc	r19, r31
    1f00:	bb 20       	and	r11, r11
    1f02:	21 f0       	breq	.+8      	; 0x1f0c <dtoa_prf+0x18c>
    1f04:	eb 2d       	mov	r30, r11
    1f06:	f0 e0       	ldi	r31, 0x00	; 0
    1f08:	31 96       	adiw	r30, 0x01	; 1
    1f0a:	02 c0       	rjmp	.+4      	; 0x1f10 <dtoa_prf+0x190>
    1f0c:	e0 e0       	ldi	r30, 0x00	; 0
    1f0e:	f0 e0       	ldi	r31, 0x00	; 0
    1f10:	2e 0f       	add	r18, r30
    1f12:	3f 1f       	adc	r19, r31
    1f14:	e1 2f       	mov	r30, r17
    1f16:	f0 e0       	ldi	r31, 0x00	; 0
    1f18:	2e 17       	cp	r18, r30
    1f1a:	3f 07       	cpc	r19, r31
    1f1c:	1c f4       	brge	.+6      	; 0x1f24 <dtoa_prf+0x1a4>
    1f1e:	12 1b       	sub	r17, r18
    1f20:	21 2f       	mov	r18, r17
    1f22:	01 c0       	rjmp	.+2      	; 0x1f26 <dtoa_prf+0x1a6>
    1f24:	20 e0       	ldi	r18, 0x00	; 0
    1f26:	8e 2d       	mov	r24, r14
    1f28:	88 71       	andi	r24, 0x18	; 24
    1f2a:	59 f4       	brne	.+22     	; 0x1f42 <dtoa_prf+0x1c2>
    1f2c:	f6 01       	movw	r30, r12
    1f2e:	82 2f       	mov	r24, r18
    1f30:	30 e2       	ldi	r19, 0x20	; 32
    1f32:	88 23       	and	r24, r24
    1f34:	19 f0       	breq	.+6      	; 0x1f3c <dtoa_prf+0x1bc>
    1f36:	31 93       	st	Z+, r19
    1f38:	81 50       	subi	r24, 0x01	; 1
    1f3a:	fb cf       	rjmp	.-10     	; 0x1f32 <dtoa_prf+0x1b2>
    1f3c:	c2 0e       	add	r12, r18
    1f3e:	d1 1c       	adc	r13, r1
    1f40:	20 e0       	ldi	r18, 0x00	; 0
    1f42:	99 23       	and	r25, r25
    1f44:	29 f0       	breq	.+10     	; 0x1f50 <dtoa_prf+0x1d0>
    1f46:	d6 01       	movw	r26, r12
    1f48:	9c 93       	st	X, r25
    1f4a:	f6 01       	movw	r30, r12
    1f4c:	31 96       	adiw	r30, 0x01	; 1
    1f4e:	6f 01       	movw	r12, r30
    1f50:	51 11       	cpse	r21, r1
    1f52:	0b c0       	rjmp	.+22     	; 0x1f6a <dtoa_prf+0x1ea>
    1f54:	f6 01       	movw	r30, r12
    1f56:	82 2f       	mov	r24, r18
    1f58:	90 e3       	ldi	r25, 0x30	; 48
    1f5a:	88 23       	and	r24, r24
    1f5c:	19 f0       	breq	.+6      	; 0x1f64 <dtoa_prf+0x1e4>
    1f5e:	91 93       	st	Z+, r25
    1f60:	81 50       	subi	r24, 0x01	; 1
    1f62:	fb cf       	rjmp	.-10     	; 0x1f5a <dtoa_prf+0x1da>
    1f64:	c2 0e       	add	r12, r18
    1f66:	d1 1c       	adc	r13, r1
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	0f 2d       	mov	r16, r15
    1f6c:	06 0f       	add	r16, r22
    1f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f70:	34 2f       	mov	r19, r20
    1f72:	30 71       	andi	r19, 0x10	; 16
    1f74:	44 ff       	sbrs	r20, 4
    1f76:	03 c0       	rjmp	.+6      	; 0x1f7e <dtoa_prf+0x1fe>
    1f78:	91 33       	cpi	r25, 0x31	; 49
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <dtoa_prf+0x1fe>
    1f7c:	01 50       	subi	r16, 0x01	; 1
    1f7e:	10 16       	cp	r1, r16
    1f80:	24 f4       	brge	.+8      	; 0x1f8a <dtoa_prf+0x20a>
    1f82:	09 30       	cpi	r16, 0x09	; 9
    1f84:	18 f0       	brcs	.+6      	; 0x1f8c <dtoa_prf+0x20c>
    1f86:	08 e0       	ldi	r16, 0x08	; 8
    1f88:	01 c0       	rjmp	.+2      	; 0x1f8c <dtoa_prf+0x20c>
    1f8a:	01 e0       	ldi	r16, 0x01	; 1
    1f8c:	ab 01       	movw	r20, r22
    1f8e:	77 ff       	sbrs	r23, 7
    1f90:	02 c0       	rjmp	.+4      	; 0x1f96 <dtoa_prf+0x216>
    1f92:	40 e0       	ldi	r20, 0x00	; 0
    1f94:	50 e0       	ldi	r21, 0x00	; 0
    1f96:	fb 01       	movw	r30, r22
    1f98:	e4 1b       	sub	r30, r20
    1f9a:	f5 0b       	sbc	r31, r21
    1f9c:	a1 e0       	ldi	r26, 0x01	; 1
    1f9e:	b0 e0       	ldi	r27, 0x00	; 0
    1fa0:	ac 0f       	add	r26, r28
    1fa2:	bd 1f       	adc	r27, r29
    1fa4:	ea 0f       	add	r30, r26
    1fa6:	fb 1f       	adc	r31, r27
    1fa8:	8e e2       	ldi	r24, 0x2E	; 46
    1faa:	a8 2e       	mov	r10, r24
    1fac:	4b 01       	movw	r8, r22
    1fae:	80 1a       	sub	r8, r16
    1fb0:	91 08       	sbc	r9, r1
    1fb2:	0b 2d       	mov	r16, r11
    1fb4:	10 e0       	ldi	r17, 0x00	; 0
    1fb6:	11 95       	neg	r17
    1fb8:	01 95       	neg	r16
    1fba:	11 09       	sbc	r17, r1
    1fbc:	4f 3f       	cpi	r20, 0xFF	; 255
    1fbe:	bf ef       	ldi	r27, 0xFF	; 255
    1fc0:	5b 07       	cpc	r21, r27
    1fc2:	21 f4       	brne	.+8      	; 0x1fcc <dtoa_prf+0x24c>
    1fc4:	d6 01       	movw	r26, r12
    1fc6:	ac 92       	st	X, r10
    1fc8:	11 96       	adiw	r26, 0x01	; 1
    1fca:	6d 01       	movw	r12, r26
    1fcc:	64 17       	cp	r22, r20
    1fce:	75 07       	cpc	r23, r21
    1fd0:	2c f0       	brlt	.+10     	; 0x1fdc <dtoa_prf+0x25c>
    1fd2:	84 16       	cp	r8, r20
    1fd4:	95 06       	cpc	r9, r21
    1fd6:	14 f4       	brge	.+4      	; 0x1fdc <dtoa_prf+0x25c>
    1fd8:	81 81       	ldd	r24, Z+1	; 0x01
    1fda:	01 c0       	rjmp	.+2      	; 0x1fde <dtoa_prf+0x25e>
    1fdc:	80 e3       	ldi	r24, 0x30	; 48
    1fde:	41 50       	subi	r20, 0x01	; 1
    1fe0:	51 09       	sbc	r21, r1
    1fe2:	31 96       	adiw	r30, 0x01	; 1
    1fe4:	d6 01       	movw	r26, r12
    1fe6:	11 96       	adiw	r26, 0x01	; 1
    1fe8:	7d 01       	movw	r14, r26
    1fea:	40 17       	cp	r20, r16
    1fec:	51 07       	cpc	r21, r17
    1fee:	24 f0       	brlt	.+8      	; 0x1ff8 <dtoa_prf+0x278>
    1ff0:	d6 01       	movw	r26, r12
    1ff2:	8c 93       	st	X, r24
    1ff4:	67 01       	movw	r12, r14
    1ff6:	e2 cf       	rjmp	.-60     	; 0x1fbc <dtoa_prf+0x23c>
    1ff8:	64 17       	cp	r22, r20
    1ffa:	75 07       	cpc	r23, r21
    1ffc:	39 f4       	brne	.+14     	; 0x200c <dtoa_prf+0x28c>
    1ffe:	96 33       	cpi	r25, 0x36	; 54
    2000:	20 f4       	brcc	.+8      	; 0x200a <dtoa_prf+0x28a>
    2002:	95 33       	cpi	r25, 0x35	; 53
    2004:	19 f4       	brne	.+6      	; 0x200c <dtoa_prf+0x28c>
    2006:	31 11       	cpse	r19, r1
    2008:	01 c0       	rjmp	.+2      	; 0x200c <dtoa_prf+0x28c>
    200a:	81 e3       	ldi	r24, 0x31	; 49
    200c:	f6 01       	movw	r30, r12
    200e:	80 83       	st	Z, r24
    2010:	f7 01       	movw	r30, r14
    2012:	82 2f       	mov	r24, r18
    2014:	90 e2       	ldi	r25, 0x20	; 32
    2016:	88 23       	and	r24, r24
    2018:	19 f0       	breq	.+6      	; 0x2020 <dtoa_prf+0x2a0>
    201a:	91 93       	st	Z+, r25
    201c:	81 50       	subi	r24, 0x01	; 1
    201e:	fb cf       	rjmp	.-10     	; 0x2016 <dtoa_prf+0x296>
    2020:	f7 01       	movw	r30, r14
    2022:	e2 0f       	add	r30, r18
    2024:	f1 1d       	adc	r31, r1
    2026:	10 82       	st	Z, r1
    2028:	80 e0       	ldi	r24, 0x00	; 0
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	29 96       	adiw	r28, 0x09	; 9
    202e:	ec e0       	ldi	r30, 0x0C	; 12
    2030:	0c 94 32 12 	jmp	0x2464	; 0x2464 <__epilogue_restores__+0xc>

00002034 <__ftoa_engine>:
    2034:	28 30       	cpi	r18, 0x08	; 8
    2036:	08 f0       	brcs	.+2      	; 0x203a <__ftoa_engine+0x6>
    2038:	27 e0       	ldi	r18, 0x07	; 7
    203a:	33 27       	eor	r19, r19
    203c:	da 01       	movw	r26, r20
    203e:	99 0f       	add	r25, r25
    2040:	31 1d       	adc	r19, r1
    2042:	87 fd       	sbrc	r24, 7
    2044:	91 60       	ori	r25, 0x01	; 1
    2046:	00 96       	adiw	r24, 0x00	; 0
    2048:	61 05       	cpc	r22, r1
    204a:	71 05       	cpc	r23, r1
    204c:	39 f4       	brne	.+14     	; 0x205c <__ftoa_engine+0x28>
    204e:	32 60       	ori	r19, 0x02	; 2
    2050:	2e 5f       	subi	r18, 0xFE	; 254
    2052:	3d 93       	st	X+, r19
    2054:	30 e3       	ldi	r19, 0x30	; 48
    2056:	2a 95       	dec	r18
    2058:	e1 f7       	brne	.-8      	; 0x2052 <__ftoa_engine+0x1e>
    205a:	08 95       	ret
    205c:	9f 3f       	cpi	r25, 0xFF	; 255
    205e:	30 f0       	brcs	.+12     	; 0x206c <__ftoa_engine+0x38>
    2060:	80 38       	cpi	r24, 0x80	; 128
    2062:	71 05       	cpc	r23, r1
    2064:	61 05       	cpc	r22, r1
    2066:	09 f0       	breq	.+2      	; 0x206a <__ftoa_engine+0x36>
    2068:	3c 5f       	subi	r19, 0xFC	; 252
    206a:	3c 5f       	subi	r19, 0xFC	; 252
    206c:	3d 93       	st	X+, r19
    206e:	91 30       	cpi	r25, 0x01	; 1
    2070:	08 f0       	brcs	.+2      	; 0x2074 <__ftoa_engine+0x40>
    2072:	80 68       	ori	r24, 0x80	; 128
    2074:	91 1d       	adc	r25, r1
    2076:	df 93       	push	r29
    2078:	cf 93       	push	r28
    207a:	1f 93       	push	r17
    207c:	0f 93       	push	r16
    207e:	ff 92       	push	r15
    2080:	ef 92       	push	r14
    2082:	19 2f       	mov	r17, r25
    2084:	98 7f       	andi	r25, 0xF8	; 248
    2086:	96 95       	lsr	r25
    2088:	e9 2f       	mov	r30, r25
    208a:	96 95       	lsr	r25
    208c:	96 95       	lsr	r25
    208e:	e9 0f       	add	r30, r25
    2090:	ff 27       	eor	r31, r31
    2092:	e6 54       	subi	r30, 0x46	; 70
    2094:	ff 4f       	sbci	r31, 0xFF	; 255
    2096:	99 27       	eor	r25, r25
    2098:	33 27       	eor	r19, r19
    209a:	ee 24       	eor	r14, r14
    209c:	ff 24       	eor	r15, r15
    209e:	a7 01       	movw	r20, r14
    20a0:	e7 01       	movw	r28, r14
    20a2:	05 90       	lpm	r0, Z+
    20a4:	08 94       	sec
    20a6:	07 94       	ror	r0
    20a8:	28 f4       	brcc	.+10     	; 0x20b4 <__ftoa_engine+0x80>
    20aa:	36 0f       	add	r19, r22
    20ac:	e7 1e       	adc	r14, r23
    20ae:	f8 1e       	adc	r15, r24
    20b0:	49 1f       	adc	r20, r25
    20b2:	51 1d       	adc	r21, r1
    20b4:	66 0f       	add	r22, r22
    20b6:	77 1f       	adc	r23, r23
    20b8:	88 1f       	adc	r24, r24
    20ba:	99 1f       	adc	r25, r25
    20bc:	06 94       	lsr	r0
    20be:	a1 f7       	brne	.-24     	; 0x20a8 <__ftoa_engine+0x74>
    20c0:	05 90       	lpm	r0, Z+
    20c2:	07 94       	ror	r0
    20c4:	28 f4       	brcc	.+10     	; 0x20d0 <__ftoa_engine+0x9c>
    20c6:	e7 0e       	add	r14, r23
    20c8:	f8 1e       	adc	r15, r24
    20ca:	49 1f       	adc	r20, r25
    20cc:	56 1f       	adc	r21, r22
    20ce:	c1 1d       	adc	r28, r1
    20d0:	77 0f       	add	r23, r23
    20d2:	88 1f       	adc	r24, r24
    20d4:	99 1f       	adc	r25, r25
    20d6:	66 1f       	adc	r22, r22
    20d8:	06 94       	lsr	r0
    20da:	a1 f7       	brne	.-24     	; 0x20c4 <__ftoa_engine+0x90>
    20dc:	05 90       	lpm	r0, Z+
    20de:	07 94       	ror	r0
    20e0:	28 f4       	brcc	.+10     	; 0x20ec <__ftoa_engine+0xb8>
    20e2:	f8 0e       	add	r15, r24
    20e4:	49 1f       	adc	r20, r25
    20e6:	56 1f       	adc	r21, r22
    20e8:	c7 1f       	adc	r28, r23
    20ea:	d1 1d       	adc	r29, r1
    20ec:	88 0f       	add	r24, r24
    20ee:	99 1f       	adc	r25, r25
    20f0:	66 1f       	adc	r22, r22
    20f2:	77 1f       	adc	r23, r23
    20f4:	06 94       	lsr	r0
    20f6:	a1 f7       	brne	.-24     	; 0x20e0 <__ftoa_engine+0xac>
    20f8:	05 90       	lpm	r0, Z+
    20fa:	07 94       	ror	r0
    20fc:	20 f4       	brcc	.+8      	; 0x2106 <__ftoa_engine+0xd2>
    20fe:	49 0f       	add	r20, r25
    2100:	56 1f       	adc	r21, r22
    2102:	c7 1f       	adc	r28, r23
    2104:	d8 1f       	adc	r29, r24
    2106:	99 0f       	add	r25, r25
    2108:	66 1f       	adc	r22, r22
    210a:	77 1f       	adc	r23, r23
    210c:	88 1f       	adc	r24, r24
    210e:	06 94       	lsr	r0
    2110:	a9 f7       	brne	.-22     	; 0x20fc <__ftoa_engine+0xc8>
    2112:	84 91       	lpm	r24, Z
    2114:	10 95       	com	r17
    2116:	17 70       	andi	r17, 0x07	; 7
    2118:	41 f0       	breq	.+16     	; 0x212a <__ftoa_engine+0xf6>
    211a:	d6 95       	lsr	r29
    211c:	c7 95       	ror	r28
    211e:	57 95       	ror	r21
    2120:	47 95       	ror	r20
    2122:	f7 94       	ror	r15
    2124:	e7 94       	ror	r14
    2126:	1a 95       	dec	r17
    2128:	c1 f7       	brne	.-16     	; 0x211a <__ftoa_engine+0xe6>
    212a:	e0 e6       	ldi	r30, 0x60	; 96
    212c:	f0 e0       	ldi	r31, 0x00	; 0
    212e:	68 94       	set
    2130:	15 90       	lpm	r1, Z+
    2132:	15 91       	lpm	r17, Z+
    2134:	35 91       	lpm	r19, Z+
    2136:	65 91       	lpm	r22, Z+
    2138:	95 91       	lpm	r25, Z+
    213a:	05 90       	lpm	r0, Z+
    213c:	7f e2       	ldi	r23, 0x2F	; 47
    213e:	73 95       	inc	r23
    2140:	e1 18       	sub	r14, r1
    2142:	f1 0a       	sbc	r15, r17
    2144:	43 0b       	sbc	r20, r19
    2146:	56 0b       	sbc	r21, r22
    2148:	c9 0b       	sbc	r28, r25
    214a:	d0 09       	sbc	r29, r0
    214c:	c0 f7       	brcc	.-16     	; 0x213e <__ftoa_engine+0x10a>
    214e:	e1 0c       	add	r14, r1
    2150:	f1 1e       	adc	r15, r17
    2152:	43 1f       	adc	r20, r19
    2154:	56 1f       	adc	r21, r22
    2156:	c9 1f       	adc	r28, r25
    2158:	d0 1d       	adc	r29, r0
    215a:	7e f4       	brtc	.+30     	; 0x217a <__ftoa_engine+0x146>
    215c:	70 33       	cpi	r23, 0x30	; 48
    215e:	11 f4       	brne	.+4      	; 0x2164 <__ftoa_engine+0x130>
    2160:	8a 95       	dec	r24
    2162:	e6 cf       	rjmp	.-52     	; 0x2130 <__ftoa_engine+0xfc>
    2164:	e8 94       	clt
    2166:	01 50       	subi	r16, 0x01	; 1
    2168:	30 f0       	brcs	.+12     	; 0x2176 <__ftoa_engine+0x142>
    216a:	08 0f       	add	r16, r24
    216c:	0a f4       	brpl	.+2      	; 0x2170 <__ftoa_engine+0x13c>
    216e:	00 27       	eor	r16, r16
    2170:	02 17       	cp	r16, r18
    2172:	08 f4       	brcc	.+2      	; 0x2176 <__ftoa_engine+0x142>
    2174:	20 2f       	mov	r18, r16
    2176:	23 95       	inc	r18
    2178:	02 2f       	mov	r16, r18
    217a:	7a 33       	cpi	r23, 0x3A	; 58
    217c:	28 f0       	brcs	.+10     	; 0x2188 <__ftoa_engine+0x154>
    217e:	79 e3       	ldi	r23, 0x39	; 57
    2180:	7d 93       	st	X+, r23
    2182:	2a 95       	dec	r18
    2184:	e9 f7       	brne	.-6      	; 0x2180 <__ftoa_engine+0x14c>
    2186:	10 c0       	rjmp	.+32     	; 0x21a8 <__ftoa_engine+0x174>
    2188:	7d 93       	st	X+, r23
    218a:	2a 95       	dec	r18
    218c:	89 f6       	brne	.-94     	; 0x2130 <__ftoa_engine+0xfc>
    218e:	06 94       	lsr	r0
    2190:	97 95       	ror	r25
    2192:	67 95       	ror	r22
    2194:	37 95       	ror	r19
    2196:	17 95       	ror	r17
    2198:	17 94       	ror	r1
    219a:	e1 18       	sub	r14, r1
    219c:	f1 0a       	sbc	r15, r17
    219e:	43 0b       	sbc	r20, r19
    21a0:	56 0b       	sbc	r21, r22
    21a2:	c9 0b       	sbc	r28, r25
    21a4:	d0 09       	sbc	r29, r0
    21a6:	98 f0       	brcs	.+38     	; 0x21ce <__ftoa_engine+0x19a>
    21a8:	23 95       	inc	r18
    21aa:	7e 91       	ld	r23, -X
    21ac:	73 95       	inc	r23
    21ae:	7a 33       	cpi	r23, 0x3A	; 58
    21b0:	08 f0       	brcs	.+2      	; 0x21b4 <__ftoa_engine+0x180>
    21b2:	70 e3       	ldi	r23, 0x30	; 48
    21b4:	7c 93       	st	X, r23
    21b6:	20 13       	cpse	r18, r16
    21b8:	b8 f7       	brcc	.-18     	; 0x21a8 <__ftoa_engine+0x174>
    21ba:	7e 91       	ld	r23, -X
    21bc:	70 61       	ori	r23, 0x10	; 16
    21be:	7d 93       	st	X+, r23
    21c0:	30 f0       	brcs	.+12     	; 0x21ce <__ftoa_engine+0x19a>
    21c2:	83 95       	inc	r24
    21c4:	71 e3       	ldi	r23, 0x31	; 49
    21c6:	7d 93       	st	X+, r23
    21c8:	70 e3       	ldi	r23, 0x30	; 48
    21ca:	2a 95       	dec	r18
    21cc:	e1 f7       	brne	.-8      	; 0x21c6 <__ftoa_engine+0x192>
    21ce:	11 24       	eor	r1, r1
    21d0:	ef 90       	pop	r14
    21d2:	ff 90       	pop	r15
    21d4:	0f 91       	pop	r16
    21d6:	1f 91       	pop	r17
    21d8:	cf 91       	pop	r28
    21da:	df 91       	pop	r29
    21dc:	99 27       	eor	r25, r25
    21de:	87 fd       	sbrc	r24, 7
    21e0:	90 95       	com	r25
    21e2:	08 95       	ret

000021e4 <isspace>:
    21e4:	91 11       	cpse	r25, r1
    21e6:	0c 94 0d 12 	jmp	0x241a	; 0x241a <__ctype_isfalse>
    21ea:	80 32       	cpi	r24, 0x20	; 32
    21ec:	19 f0       	breq	.+6      	; 0x21f4 <isspace+0x10>
    21ee:	89 50       	subi	r24, 0x09	; 9
    21f0:	85 50       	subi	r24, 0x05	; 5
    21f2:	c8 f7       	brcc	.-14     	; 0x21e6 <isspace+0x2>
    21f4:	08 95       	ret

000021f6 <strchr_P>:
    21f6:	fc 01       	movw	r30, r24
    21f8:	05 90       	lpm	r0, Z+
    21fa:	06 16       	cp	r0, r22
    21fc:	21 f0       	breq	.+8      	; 0x2206 <strchr_P+0x10>
    21fe:	00 20       	and	r0, r0
    2200:	d9 f7       	brne	.-10     	; 0x21f8 <strchr_P+0x2>
    2202:	c0 01       	movw	r24, r0
    2204:	08 95       	ret
    2206:	31 97       	sbiw	r30, 0x01	; 1
    2208:	cf 01       	movw	r24, r30
    220a:	08 95       	ret

0000220c <strnlen_P>:
    220c:	fc 01       	movw	r30, r24
    220e:	05 90       	lpm	r0, Z+
    2210:	61 50       	subi	r22, 0x01	; 1
    2212:	70 40       	sbci	r23, 0x00	; 0
    2214:	01 10       	cpse	r0, r1
    2216:	d8 f7       	brcc	.-10     	; 0x220e <strnlen_P+0x2>
    2218:	80 95       	com	r24
    221a:	90 95       	com	r25
    221c:	8e 0f       	add	r24, r30
    221e:	9f 1f       	adc	r25, r31
    2220:	08 95       	ret

00002222 <strnlen>:
    2222:	fc 01       	movw	r30, r24
    2224:	61 50       	subi	r22, 0x01	; 1
    2226:	70 40       	sbci	r23, 0x00	; 0
    2228:	01 90       	ld	r0, Z+
    222a:	01 10       	cpse	r0, r1
    222c:	d8 f7       	brcc	.-10     	; 0x2224 <strnlen+0x2>
    222e:	80 95       	com	r24
    2230:	90 95       	com	r25
    2232:	8e 0f       	add	r24, r30
    2234:	9f 1f       	adc	r25, r31
    2236:	08 95       	ret

00002238 <fgetc>:
    2238:	cf 93       	push	r28
    223a:	df 93       	push	r29
    223c:	ec 01       	movw	r28, r24
    223e:	2b 81       	ldd	r18, Y+3	; 0x03
    2240:	20 ff       	sbrs	r18, 0
    2242:	33 c0       	rjmp	.+102    	; 0x22aa <fgetc+0x72>
    2244:	26 ff       	sbrs	r18, 6
    2246:	0a c0       	rjmp	.+20     	; 0x225c <fgetc+0x24>
    2248:	2f 7b       	andi	r18, 0xBF	; 191
    224a:	2b 83       	std	Y+3, r18	; 0x03
    224c:	8e 81       	ldd	r24, Y+6	; 0x06
    224e:	9f 81       	ldd	r25, Y+7	; 0x07
    2250:	01 96       	adiw	r24, 0x01	; 1
    2252:	9f 83       	std	Y+7, r25	; 0x07
    2254:	8e 83       	std	Y+6, r24	; 0x06
    2256:	8a 81       	ldd	r24, Y+2	; 0x02
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	29 c0       	rjmp	.+82     	; 0x22ae <fgetc+0x76>
    225c:	22 ff       	sbrs	r18, 2
    225e:	0f c0       	rjmp	.+30     	; 0x227e <fgetc+0x46>
    2260:	e8 81       	ld	r30, Y
    2262:	f9 81       	ldd	r31, Y+1	; 0x01
    2264:	80 81       	ld	r24, Z
    2266:	08 2e       	mov	r0, r24
    2268:	00 0c       	add	r0, r0
    226a:	99 0b       	sbc	r25, r25
    226c:	00 97       	sbiw	r24, 0x00	; 0
    226e:	19 f4       	brne	.+6      	; 0x2276 <fgetc+0x3e>
    2270:	20 62       	ori	r18, 0x20	; 32
    2272:	2b 83       	std	Y+3, r18	; 0x03
    2274:	1a c0       	rjmp	.+52     	; 0x22aa <fgetc+0x72>
    2276:	31 96       	adiw	r30, 0x01	; 1
    2278:	f9 83       	std	Y+1, r31	; 0x01
    227a:	e8 83       	st	Y, r30
    227c:	0e c0       	rjmp	.+28     	; 0x229a <fgetc+0x62>
    227e:	ea 85       	ldd	r30, Y+10	; 0x0a
    2280:	fb 85       	ldd	r31, Y+11	; 0x0b
    2282:	09 95       	icall
    2284:	97 ff       	sbrs	r25, 7
    2286:	09 c0       	rjmp	.+18     	; 0x229a <fgetc+0x62>
    2288:	2b 81       	ldd	r18, Y+3	; 0x03
    228a:	01 96       	adiw	r24, 0x01	; 1
    228c:	11 f0       	breq	.+4      	; 0x2292 <fgetc+0x5a>
    228e:	80 e2       	ldi	r24, 0x20	; 32
    2290:	01 c0       	rjmp	.+2      	; 0x2294 <fgetc+0x5c>
    2292:	80 e1       	ldi	r24, 0x10	; 16
    2294:	82 2b       	or	r24, r18
    2296:	8b 83       	std	Y+3, r24	; 0x03
    2298:	08 c0       	rjmp	.+16     	; 0x22aa <fgetc+0x72>
    229a:	2e 81       	ldd	r18, Y+6	; 0x06
    229c:	3f 81       	ldd	r19, Y+7	; 0x07
    229e:	2f 5f       	subi	r18, 0xFF	; 255
    22a0:	3f 4f       	sbci	r19, 0xFF	; 255
    22a2:	3f 83       	std	Y+7, r19	; 0x07
    22a4:	2e 83       	std	Y+6, r18	; 0x06
    22a6:	99 27       	eor	r25, r25
    22a8:	02 c0       	rjmp	.+4      	; 0x22ae <fgetc+0x76>
    22aa:	8f ef       	ldi	r24, 0xFF	; 255
    22ac:	9f ef       	ldi	r25, 0xFF	; 255
    22ae:	df 91       	pop	r29
    22b0:	cf 91       	pop	r28
    22b2:	08 95       	ret

000022b4 <fputc>:
    22b4:	0f 93       	push	r16
    22b6:	1f 93       	push	r17
    22b8:	cf 93       	push	r28
    22ba:	df 93       	push	r29
    22bc:	fb 01       	movw	r30, r22
    22be:	23 81       	ldd	r18, Z+3	; 0x03
    22c0:	21 fd       	sbrc	r18, 1
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <fputc+0x16>
    22c4:	8f ef       	ldi	r24, 0xFF	; 255
    22c6:	9f ef       	ldi	r25, 0xFF	; 255
    22c8:	2c c0       	rjmp	.+88     	; 0x2322 <fputc+0x6e>
    22ca:	22 ff       	sbrs	r18, 2
    22cc:	16 c0       	rjmp	.+44     	; 0x22fa <fputc+0x46>
    22ce:	46 81       	ldd	r20, Z+6	; 0x06
    22d0:	57 81       	ldd	r21, Z+7	; 0x07
    22d2:	24 81       	ldd	r18, Z+4	; 0x04
    22d4:	35 81       	ldd	r19, Z+5	; 0x05
    22d6:	42 17       	cp	r20, r18
    22d8:	53 07       	cpc	r21, r19
    22da:	44 f4       	brge	.+16     	; 0x22ec <fputc+0x38>
    22dc:	a0 81       	ld	r26, Z
    22de:	b1 81       	ldd	r27, Z+1	; 0x01
    22e0:	9d 01       	movw	r18, r26
    22e2:	2f 5f       	subi	r18, 0xFF	; 255
    22e4:	3f 4f       	sbci	r19, 0xFF	; 255
    22e6:	31 83       	std	Z+1, r19	; 0x01
    22e8:	20 83       	st	Z, r18
    22ea:	8c 93       	st	X, r24
    22ec:	26 81       	ldd	r18, Z+6	; 0x06
    22ee:	37 81       	ldd	r19, Z+7	; 0x07
    22f0:	2f 5f       	subi	r18, 0xFF	; 255
    22f2:	3f 4f       	sbci	r19, 0xFF	; 255
    22f4:	37 83       	std	Z+7, r19	; 0x07
    22f6:	26 83       	std	Z+6, r18	; 0x06
    22f8:	14 c0       	rjmp	.+40     	; 0x2322 <fputc+0x6e>
    22fa:	8b 01       	movw	r16, r22
    22fc:	ec 01       	movw	r28, r24
    22fe:	fb 01       	movw	r30, r22
    2300:	00 84       	ldd	r0, Z+8	; 0x08
    2302:	f1 85       	ldd	r31, Z+9	; 0x09
    2304:	e0 2d       	mov	r30, r0
    2306:	09 95       	icall
    2308:	89 2b       	or	r24, r25
    230a:	e1 f6       	brne	.-72     	; 0x22c4 <fputc+0x10>
    230c:	d8 01       	movw	r26, r16
    230e:	16 96       	adiw	r26, 0x06	; 6
    2310:	8d 91       	ld	r24, X+
    2312:	9c 91       	ld	r25, X
    2314:	17 97       	sbiw	r26, 0x07	; 7
    2316:	01 96       	adiw	r24, 0x01	; 1
    2318:	17 96       	adiw	r26, 0x07	; 7
    231a:	9c 93       	st	X, r25
    231c:	8e 93       	st	-X, r24
    231e:	16 97       	sbiw	r26, 0x06	; 6
    2320:	ce 01       	movw	r24, r28
    2322:	df 91       	pop	r29
    2324:	cf 91       	pop	r28
    2326:	1f 91       	pop	r17
    2328:	0f 91       	pop	r16
    232a:	08 95       	ret

0000232c <ungetc>:
    232c:	fb 01       	movw	r30, r22
    232e:	23 81       	ldd	r18, Z+3	; 0x03
    2330:	20 ff       	sbrs	r18, 0
    2332:	12 c0       	rjmp	.+36     	; 0x2358 <ungetc+0x2c>
    2334:	26 fd       	sbrc	r18, 6
    2336:	10 c0       	rjmp	.+32     	; 0x2358 <ungetc+0x2c>
    2338:	8f 3f       	cpi	r24, 0xFF	; 255
    233a:	3f ef       	ldi	r19, 0xFF	; 255
    233c:	93 07       	cpc	r25, r19
    233e:	61 f0       	breq	.+24     	; 0x2358 <ungetc+0x2c>
    2340:	82 83       	std	Z+2, r24	; 0x02
    2342:	2f 7d       	andi	r18, 0xDF	; 223
    2344:	20 64       	ori	r18, 0x40	; 64
    2346:	23 83       	std	Z+3, r18	; 0x03
    2348:	26 81       	ldd	r18, Z+6	; 0x06
    234a:	37 81       	ldd	r19, Z+7	; 0x07
    234c:	21 50       	subi	r18, 0x01	; 1
    234e:	31 09       	sbc	r19, r1
    2350:	37 83       	std	Z+7, r19	; 0x07
    2352:	26 83       	std	Z+6, r18	; 0x06
    2354:	99 27       	eor	r25, r25
    2356:	08 95       	ret
    2358:	8f ef       	ldi	r24, 0xFF	; 255
    235a:	9f ef       	ldi	r25, 0xFF	; 255
    235c:	08 95       	ret

0000235e <__ultoa_invert>:
    235e:	fa 01       	movw	r30, r20
    2360:	aa 27       	eor	r26, r26
    2362:	28 30       	cpi	r18, 0x08	; 8
    2364:	51 f1       	breq	.+84     	; 0x23ba <__ultoa_invert+0x5c>
    2366:	20 31       	cpi	r18, 0x10	; 16
    2368:	81 f1       	breq	.+96     	; 0x23ca <__ultoa_invert+0x6c>
    236a:	e8 94       	clt
    236c:	6f 93       	push	r22
    236e:	6e 7f       	andi	r22, 0xFE	; 254
    2370:	6e 5f       	subi	r22, 0xFE	; 254
    2372:	7f 4f       	sbci	r23, 0xFF	; 255
    2374:	8f 4f       	sbci	r24, 0xFF	; 255
    2376:	9f 4f       	sbci	r25, 0xFF	; 255
    2378:	af 4f       	sbci	r26, 0xFF	; 255
    237a:	b1 e0       	ldi	r27, 0x01	; 1
    237c:	3e d0       	rcall	.+124    	; 0x23fa <__ultoa_invert+0x9c>
    237e:	b4 e0       	ldi	r27, 0x04	; 4
    2380:	3c d0       	rcall	.+120    	; 0x23fa <__ultoa_invert+0x9c>
    2382:	67 0f       	add	r22, r23
    2384:	78 1f       	adc	r23, r24
    2386:	89 1f       	adc	r24, r25
    2388:	9a 1f       	adc	r25, r26
    238a:	a1 1d       	adc	r26, r1
    238c:	68 0f       	add	r22, r24
    238e:	79 1f       	adc	r23, r25
    2390:	8a 1f       	adc	r24, r26
    2392:	91 1d       	adc	r25, r1
    2394:	a1 1d       	adc	r26, r1
    2396:	6a 0f       	add	r22, r26
    2398:	71 1d       	adc	r23, r1
    239a:	81 1d       	adc	r24, r1
    239c:	91 1d       	adc	r25, r1
    239e:	a1 1d       	adc	r26, r1
    23a0:	20 d0       	rcall	.+64     	; 0x23e2 <__ultoa_invert+0x84>
    23a2:	09 f4       	brne	.+2      	; 0x23a6 <__ultoa_invert+0x48>
    23a4:	68 94       	set
    23a6:	3f 91       	pop	r19
    23a8:	2a e0       	ldi	r18, 0x0A	; 10
    23aa:	26 9f       	mul	r18, r22
    23ac:	11 24       	eor	r1, r1
    23ae:	30 19       	sub	r19, r0
    23b0:	30 5d       	subi	r19, 0xD0	; 208
    23b2:	31 93       	st	Z+, r19
    23b4:	de f6       	brtc	.-74     	; 0x236c <__ultoa_invert+0xe>
    23b6:	cf 01       	movw	r24, r30
    23b8:	08 95       	ret
    23ba:	46 2f       	mov	r20, r22
    23bc:	47 70       	andi	r20, 0x07	; 7
    23be:	40 5d       	subi	r20, 0xD0	; 208
    23c0:	41 93       	st	Z+, r20
    23c2:	b3 e0       	ldi	r27, 0x03	; 3
    23c4:	0f d0       	rcall	.+30     	; 0x23e4 <__ultoa_invert+0x86>
    23c6:	c9 f7       	brne	.-14     	; 0x23ba <__ultoa_invert+0x5c>
    23c8:	f6 cf       	rjmp	.-20     	; 0x23b6 <__ultoa_invert+0x58>
    23ca:	46 2f       	mov	r20, r22
    23cc:	4f 70       	andi	r20, 0x0F	; 15
    23ce:	40 5d       	subi	r20, 0xD0	; 208
    23d0:	4a 33       	cpi	r20, 0x3A	; 58
    23d2:	18 f0       	brcs	.+6      	; 0x23da <__ultoa_invert+0x7c>
    23d4:	49 5d       	subi	r20, 0xD9	; 217
    23d6:	31 fd       	sbrc	r19, 1
    23d8:	40 52       	subi	r20, 0x20	; 32
    23da:	41 93       	st	Z+, r20
    23dc:	02 d0       	rcall	.+4      	; 0x23e2 <__ultoa_invert+0x84>
    23de:	a9 f7       	brne	.-22     	; 0x23ca <__ultoa_invert+0x6c>
    23e0:	ea cf       	rjmp	.-44     	; 0x23b6 <__ultoa_invert+0x58>
    23e2:	b4 e0       	ldi	r27, 0x04	; 4
    23e4:	a6 95       	lsr	r26
    23e6:	97 95       	ror	r25
    23e8:	87 95       	ror	r24
    23ea:	77 95       	ror	r23
    23ec:	67 95       	ror	r22
    23ee:	ba 95       	dec	r27
    23f0:	c9 f7       	brne	.-14     	; 0x23e4 <__ultoa_invert+0x86>
    23f2:	00 97       	sbiw	r24, 0x00	; 0
    23f4:	61 05       	cpc	r22, r1
    23f6:	71 05       	cpc	r23, r1
    23f8:	08 95       	ret
    23fa:	9b 01       	movw	r18, r22
    23fc:	ac 01       	movw	r20, r24
    23fe:	0a 2e       	mov	r0, r26
    2400:	06 94       	lsr	r0
    2402:	57 95       	ror	r21
    2404:	47 95       	ror	r20
    2406:	37 95       	ror	r19
    2408:	27 95       	ror	r18
    240a:	ba 95       	dec	r27
    240c:	c9 f7       	brne	.-14     	; 0x2400 <__ultoa_invert+0xa2>
    240e:	62 0f       	add	r22, r18
    2410:	73 1f       	adc	r23, r19
    2412:	84 1f       	adc	r24, r20
    2414:	95 1f       	adc	r25, r21
    2416:	a0 1d       	adc	r26, r0
    2418:	08 95       	ret

0000241a <__ctype_isfalse>:
    241a:	99 27       	eor	r25, r25
    241c:	88 27       	eor	r24, r24

0000241e <__ctype_istrue>:
    241e:	08 95       	ret

00002420 <__prologue_saves__>:
    2420:	2f 92       	push	r2
    2422:	3f 92       	push	r3
    2424:	4f 92       	push	r4
    2426:	5f 92       	push	r5
    2428:	6f 92       	push	r6
    242a:	7f 92       	push	r7
    242c:	8f 92       	push	r8
    242e:	9f 92       	push	r9
    2430:	af 92       	push	r10
    2432:	bf 92       	push	r11
    2434:	cf 92       	push	r12
    2436:	df 92       	push	r13
    2438:	ef 92       	push	r14
    243a:	ff 92       	push	r15
    243c:	0f 93       	push	r16
    243e:	1f 93       	push	r17
    2440:	cf 93       	push	r28
    2442:	df 93       	push	r29
    2444:	cd b7       	in	r28, 0x3d	; 61
    2446:	de b7       	in	r29, 0x3e	; 62
    2448:	ca 1b       	sub	r28, r26
    244a:	db 0b       	sbc	r29, r27
    244c:	0f b6       	in	r0, 0x3f	; 63
    244e:	f8 94       	cli
    2450:	de bf       	out	0x3e, r29	; 62
    2452:	0f be       	out	0x3f, r0	; 63
    2454:	cd bf       	out	0x3d, r28	; 61
    2456:	09 94       	ijmp

00002458 <__epilogue_restores__>:
    2458:	2a 88       	ldd	r2, Y+18	; 0x12
    245a:	39 88       	ldd	r3, Y+17	; 0x11
    245c:	48 88       	ldd	r4, Y+16	; 0x10
    245e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2460:	6e 84       	ldd	r6, Y+14	; 0x0e
    2462:	7d 84       	ldd	r7, Y+13	; 0x0d
    2464:	8c 84       	ldd	r8, Y+12	; 0x0c
    2466:	9b 84       	ldd	r9, Y+11	; 0x0b
    2468:	aa 84       	ldd	r10, Y+10	; 0x0a
    246a:	b9 84       	ldd	r11, Y+9	; 0x09
    246c:	c8 84       	ldd	r12, Y+8	; 0x08
    246e:	df 80       	ldd	r13, Y+7	; 0x07
    2470:	ee 80       	ldd	r14, Y+6	; 0x06
    2472:	fd 80       	ldd	r15, Y+5	; 0x05
    2474:	0c 81       	ldd	r16, Y+4	; 0x04
    2476:	1b 81       	ldd	r17, Y+3	; 0x03
    2478:	aa 81       	ldd	r26, Y+2	; 0x02
    247a:	b9 81       	ldd	r27, Y+1	; 0x01
    247c:	ce 0f       	add	r28, r30
    247e:	d1 1d       	adc	r29, r1
    2480:	0f b6       	in	r0, 0x3f	; 63
    2482:	f8 94       	cli
    2484:	de bf       	out	0x3e, r29	; 62
    2486:	0f be       	out	0x3f, r0	; 63
    2488:	cd bf       	out	0x3d, r28	; 61
    248a:	ed 01       	movw	r28, r26
    248c:	08 95       	ret

0000248e <_exit>:
    248e:	f8 94       	cli

00002490 <__stop_program>:
    2490:	ff cf       	rjmp	.-2      	; 0x2490 <__stop_program>
