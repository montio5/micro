
final_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c4  00800060  000023cc  00002460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000f0  00800124  00800124  00002524  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002524  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002580  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000388  00000000  00000000  000025bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037ed  00000000  00000000  00002944  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001037  00000000  00000000  00006131  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c74  00000000  00000000  00007168  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a24  00000000  00000000  00008ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010bd  00000000  00000000  00009800  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002828  00000000  00000000  0000a8bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000328  00000000  00000000  0000d0e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__ctors_end>
       4:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__vector_1>
       8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      24:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      2c:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__vector_11>
      30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      34:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__vector_13>
      38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	63 64       	ori	r22, 0x43	; 67
      56:	69 6e       	ori	r22, 0xE9	; 233
      58:	6f 70       	andi	r22, 0x0F	; 15
      5a:	73 75       	andi	r23, 0x53	; 83
      5c:	78 58       	subi	r23, 0x88	; 136
      5e:	5b 00       	.word	0x005b	; ????
      60:	00 40       	sbci	r16, 0x00	; 0
      62:	7a 10       	cpse	r7, r10
      64:	f3 5a       	subi	r31, 0xA3	; 163
      66:	00 a0       	ldd	r0, Z+32	; 0x20
      68:	72 4e       	sbci	r23, 0xE2	; 226
      6a:	18 09       	sbc	r17, r8
      6c:	00 10       	cpse	r0, r0
      6e:	a5 d4       	rcall	.+2378   	; 0x9ba <openTrash+0x26>
      70:	e8 00       	.word	0x00e8	; ????
      72:	00 e8       	ldi	r16, 0x80	; 128
      74:	76 48       	sbci	r23, 0x86	; 134
      76:	17 00       	.word	0x0017	; ????
      78:	00 e4       	ldi	r16, 0x40	; 64
      7a:	0b 54       	subi	r16, 0x4B	; 75
      7c:	02 00       	.word	0x0002	; ????
      7e:	00 ca       	rjmp	.-3072   	; 0xfffff480 <__eeprom_end+0xff7ef480>
      80:	9a 3b       	cpi	r25, 0xBA	; 186
      82:	00 00       	nop
      84:	00 e1       	ldi	r16, 0x10	; 16
      86:	f5 05       	cpc	r31, r5
      88:	00 00       	nop
      8a:	80 96       	adiw	r24, 0x20	; 32
      8c:	98 00       	.word	0x0098	; ????
      8e:	00 00       	nop
      90:	40 42       	sbci	r20, 0x20	; 32
      92:	0f 00       	.word	0x000f	; ????
      94:	00 00       	nop
      96:	a0 86       	std	Z+8, r10	; 0x08
      98:	01 00       	.word	0x0001	; ????
      9a:	00 00       	nop
      9c:	10 27       	eor	r17, r16
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	e8 03       	fmulsu	r22, r16
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	64 00       	.word	0x0064	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	0a 00       	.word	0x000a	; ????
      b0:	00 00       	nop
      b2:	00 00       	nop
      b4:	01 00       	.word	0x0001	; ????
      b6:	00 00       	nop
      b8:	00 00       	nop
      ba:	2c 76       	andi	r18, 0x6C	; 108
      bc:	d8 88       	ldd	r13, Y+16	; 0x10
      be:	dc 67       	ori	r29, 0x7C	; 124
      c0:	4f 08       	sbc	r4, r15
      c2:	23 df       	rcall	.-442    	; 0xffffff0a <__eeprom_end+0xff7eff0a>
      c4:	c1 df       	rcall	.-126    	; 0x48 <__SREG__+0x9>
      c6:	ae 59       	subi	r26, 0x9E	; 158
      c8:	e1 b1       	in	r30, 0x01	; 1
      ca:	b7 96       	adiw	r30, 0x27	; 39
      cc:	e5 e3       	ldi	r30, 0x35	; 53
      ce:	e4 53       	subi	r30, 0x34	; 52
      d0:	c6 3a       	cpi	r28, 0xA6	; 166
      d2:	e6 51       	subi	r30, 0x16	; 22
      d4:	99 76       	andi	r25, 0x69	; 105
      d6:	96 e8       	ldi	r25, 0x86	; 134
      d8:	e6 c2       	rjmp	.+1484   	; 0x6a6 <i2c_master_sendByte+0x20>
      da:	84 26       	eor	r8, r20
      dc:	eb 89       	ldd	r30, Y+19	; 0x13
      de:	8c 9b       	sbis	0x11, 4	; 17
      e0:	62 ed       	ldi	r22, 0xD2	; 210
      e2:	40 7c       	andi	r20, 0xC0	; 192
      e4:	6f fc       	.word	0xfc6f	; ????
      e6:	ef bc       	out	0x2f, r14	; 47
      e8:	9c 9f       	mul	r25, r28
      ea:	40 f2       	brcs	.-112    	; 0x7c <__trampolines_end+0x28>
      ec:	ba a5       	ldd	r27, Y+42	; 0x2a
      ee:	6f a5       	ldd	r22, Y+47	; 0x2f
      f0:	f4 90       	lpm	r15, Z
      f2:	05 5a       	subi	r16, 0xA5	; 165
      f4:	2a f7       	brpl	.-54     	; 0xc0 <__trampolines_end+0x6c>
      f6:	5c 93       	st	X, r21
      f8:	6b 6c       	ori	r22, 0xCB	; 203
      fa:	f9 67       	ori	r31, 0x79	; 121
      fc:	6d c1       	rjmp	.+730    	; 0x3d8 <FlagWrite+0x58>
      fe:	1b fc       	.word	0xfc1b	; ????
     100:	e0 e4       	ldi	r30, 0x40	; 64
     102:	0d 47       	sbci	r16, 0x7D	; 125
     104:	fe f5       	brtc	.+126    	; 0x184 <.do_clear_bss_loop>
     106:	20 e6       	ldi	r18, 0x60	; 96
     108:	b5 00       	.word	0x00b5	; ????
     10a:	d0 ed       	ldi	r29, 0xD0	; 208
     10c:	90 2e       	mov	r9, r16
     10e:	03 00       	.word	0x0003	; ????
     110:	94 35       	cpi	r25, 0x54	; 84
     112:	77 05       	cpc	r23, r7
     114:	00 80       	ld	r0, Z
     116:	84 1e       	adc	r8, r20
     118:	08 00       	.word	0x0008	; ????
     11a:	00 20       	and	r0, r0
     11c:	4e 0a       	sbc	r4, r30
     11e:	00 00       	nop
     120:	00 c8       	rjmp	.-4096   	; 0xfffff122 <__eeprom_end+0xff7ef122>
     122:	0c 33       	cpi	r16, 0x3C	; 60
     124:	33 33       	cpi	r19, 0x33	; 51
     126:	33 0f       	add	r19, r19
     128:	98 6e       	ori	r25, 0xE8	; 232
     12a:	12 83       	std	Z+2, r17	; 0x02
     12c:	11 41       	sbci	r17, 0x11	; 17
     12e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     130:	21 14       	cp	r2, r1
     132:	89 3b       	cpi	r24, 0xB9	; 185
     134:	e6 55       	subi	r30, 0x56	; 86
     136:	16 cf       	rjmp	.-468    	; 0xffffff64 <__eeprom_end+0xff7eff64>
     138:	fe e6       	ldi	r31, 0x6E	; 110
     13a:	db 18       	sub	r13, r11
     13c:	d1 84       	ldd	r13, Z+9	; 0x09
     13e:	4b 38       	cpi	r20, 0x8B	; 139
     140:	1b f7       	brvc	.-58     	; 0x108 <__trampolines_end+0xb4>
     142:	7c 1d       	adc	r23, r12
     144:	90 1d       	adc	r25, r0
     146:	a4 bb       	out	0x14, r26	; 20
     148:	e4 24       	eor	r14, r4
     14a:	20 32       	cpi	r18, 0x20	; 32
     14c:	84 72       	andi	r24, 0x24	; 36
     14e:	5e 22       	and	r5, r30
     150:	81 00       	.word	0x0081	; ????
     152:	c9 f1       	breq	.+114    	; 0x1c6 <RTC_Status+0x4>
     154:	24 ec       	ldi	r18, 0xC4	; 196
     156:	a1 e5       	ldi	r26, 0x51	; 81
     158:	3d 27       	eor	r19, r29

0000015a <__ctors_end>:
     15a:	11 24       	eor	r1, r1
     15c:	1f be       	out	0x3f, r1	; 63
     15e:	cf e5       	ldi	r28, 0x5F	; 95
     160:	d8 e0       	ldi	r29, 0x08	; 8
     162:	de bf       	out	0x3e, r29	; 62
     164:	cd bf       	out	0x3d, r28	; 61

00000166 <__do_copy_data>:
     166:	11 e0       	ldi	r17, 0x01	; 1
     168:	a0 e6       	ldi	r26, 0x60	; 96
     16a:	b0 e0       	ldi	r27, 0x00	; 0
     16c:	ec ec       	ldi	r30, 0xCC	; 204
     16e:	f3 e2       	ldi	r31, 0x23	; 35
     170:	02 c0       	rjmp	.+4      	; 0x176 <__do_copy_data+0x10>
     172:	05 90       	lpm	r0, Z+
     174:	0d 92       	st	X+, r0
     176:	a4 32       	cpi	r26, 0x24	; 36
     178:	b1 07       	cpc	r27, r17
     17a:	d9 f7       	brne	.-10     	; 0x172 <__do_copy_data+0xc>

0000017c <__do_clear_bss>:
     17c:	22 e0       	ldi	r18, 0x02	; 2
     17e:	a4 e2       	ldi	r26, 0x24	; 36
     180:	b1 e0       	ldi	r27, 0x01	; 1
     182:	01 c0       	rjmp	.+2      	; 0x186 <.do_clear_bss_start>

00000184 <.do_clear_bss_loop>:
     184:	1d 92       	st	X+, r1

00000186 <.do_clear_bss_start>:
     186:	a4 31       	cpi	r26, 0x14	; 20
     188:	b2 07       	cpc	r27, r18
     18a:	e1 f7       	brne	.-8      	; 0x184 <.do_clear_bss_loop>
     18c:	0e 94 bf 07 	call	0xf7e	; 0xf7e <main>
     190:	0c 94 e4 11 	jmp	0x23c8	; 0x23c8 <_exit>

00000194 <__bad_interrupt>:
     194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <Dec2bcd>:
		reg |= Frequency;
	}

	//Write control register
	RTC_WriteByte(__RTC_Address_Control, reg);
}
     198:	9a e1       	ldi	r25, 0x1A	; 26
     19a:	89 9f       	mul	r24, r25
     19c:	90 01       	movw	r18, r0
     19e:	11 24       	eor	r1, r1
     1a0:	93 2f       	mov	r25, r19
     1a2:	99 0f       	add	r25, r25
     1a4:	93 0f       	add	r25, r19
     1a6:	29 2f       	mov	r18, r25
     1a8:	22 0f       	add	r18, r18
     1aa:	82 0f       	add	r24, r18
     1ac:	08 95       	ret

000001ae <Bcd2dec>:
     1ae:	98 2f       	mov	r25, r24
     1b0:	92 95       	swap	r25
     1b2:	9f 70       	andi	r25, 0x0F	; 15
     1b4:	29 2f       	mov	r18, r25
     1b6:	22 0f       	add	r18, r18
     1b8:	92 0f       	add	r25, r18
     1ba:	29 2f       	mov	r18, r25
     1bc:	22 0f       	add	r18, r18
     1be:	82 1b       	sub	r24, r18
     1c0:	08 95       	ret

000001c2 <RTC_Status>:
     1c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1c6:	08 95       	ret

000001c8 <RTC_WriteBlock>:
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	c8 2f       	mov	r28, r24
     1d2:	8b 01       	movw	r16, r22
     1d4:	d4 2f       	mov	r29, r20
     1d6:	0e 94 18 08 	call	0x1030	; 0x1030 <TWI_BeginTransmission>
     1da:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     1de:	88 30       	cpi	r24, 0x08	; 8
     1e0:	29 f0       	breq	.+10     	; 0x1ec <RTC_WriteBlock+0x24>
     1e2:	80 31       	cpi	r24, 0x10	; 16
     1e4:	19 f0       	breq	.+6      	; 0x1ec <RTC_WriteBlock+0x24>
     1e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ea:	2e c0       	rjmp	.+92     	; 0x248 <RTC_WriteBlock+0x80>
     1ec:	80 ed       	ldi	r24, 0xD0	; 208
     1ee:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     1f2:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     1f6:	88 31       	cpi	r24, 0x18	; 24
     1f8:	29 f0       	breq	.+10     	; 0x204 <RTC_WriteBlock+0x3c>
     1fa:	80 32       	cpi	r24, 0x20	; 32
     1fc:	19 f0       	breq	.+6      	; 0x204 <RTC_WriteBlock+0x3c>
     1fe:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     202:	22 c0       	rjmp	.+68     	; 0x248 <RTC_WriteBlock+0x80>
     204:	8c 2f       	mov	r24, r28
     206:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     20a:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     20e:	88 32       	cpi	r24, 0x28	; 40
     210:	99 f0       	breq	.+38     	; 0x238 <RTC_WriteBlock+0x70>
     212:	80 33       	cpi	r24, 0x30	; 48
     214:	99 f0       	breq	.+38     	; 0x23c <RTC_WriteBlock+0x74>
     216:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     21a:	16 c0       	rjmp	.+44     	; 0x248 <RTC_WriteBlock+0x80>
     21c:	f8 01       	movw	r30, r16
     21e:	ec 0f       	add	r30, r28
     220:	f1 1d       	adc	r31, r1
     222:	80 81       	ld	r24, Z
     224:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     228:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     22c:	88 32       	cpi	r24, 0x28	; 40
     22e:	11 f0       	breq	.+4      	; 0x234 <RTC_WriteBlock+0x6c>
     230:	80 33       	cpi	r24, 0x30	; 48
     232:	39 f4       	brne	.+14     	; 0x242 <RTC_WriteBlock+0x7a>
     234:	cf 5f       	subi	r28, 0xFF	; 255
     236:	03 c0       	rjmp	.+6      	; 0x23e <RTC_WriteBlock+0x76>
     238:	c0 e0       	ldi	r28, 0x00	; 0
     23a:	01 c0       	rjmp	.+2      	; 0x23e <RTC_WriteBlock+0x76>
     23c:	c0 e0       	ldi	r28, 0x00	; 0
     23e:	cd 17       	cp	r28, r29
     240:	68 f3       	brcs	.-38     	; 0x21c <RTC_WriteBlock+0x54>
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     248:	0e 94 20 08 	call	0x1040	; 0x1040 <TWI_EndTransmission>
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	08 95       	ret

00000256 <RTC_WriteByte>:
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	1f 92       	push	r1
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62
     260:	69 83       	std	Y+1, r22	; 0x01
     262:	41 e0       	ldi	r20, 0x01	; 1
     264:	be 01       	movw	r22, r28
     266:	6f 5f       	subi	r22, 0xFF	; 255
     268:	7f 4f       	sbci	r23, 0xFF	; 255
     26a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     26e:	0f 90       	pop	r0
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <RTC_ReadBlock>:
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	08 2f       	mov	r16, r24
     280:	eb 01       	movw	r28, r22
     282:	14 2f       	mov	r17, r20
     284:	0e 94 18 08 	call	0x1030	; 0x1030 <TWI_BeginTransmission>
     288:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     28c:	88 30       	cpi	r24, 0x08	; 8
     28e:	29 f0       	breq	.+10     	; 0x29a <RTC_ReadBlock+0x24>
     290:	80 31       	cpi	r24, 0x10	; 16
     292:	19 f0       	breq	.+6      	; 0x29a <RTC_ReadBlock+0x24>
     294:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     298:	5c c0       	rjmp	.+184    	; 0x352 <RTC_ReadBlock+0xdc>
     29a:	80 ed       	ldi	r24, 0xD0	; 208
     29c:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     2a0:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     2a4:	88 31       	cpi	r24, 0x18	; 24
     2a6:	29 f0       	breq	.+10     	; 0x2b2 <RTC_ReadBlock+0x3c>
     2a8:	80 32       	cpi	r24, 0x20	; 32
     2aa:	19 f0       	breq	.+6      	; 0x2b2 <RTC_ReadBlock+0x3c>
     2ac:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2b0:	50 c0       	rjmp	.+160    	; 0x352 <RTC_ReadBlock+0xdc>
     2b2:	80 2f       	mov	r24, r16
     2b4:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     2b8:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     2bc:	88 32       	cpi	r24, 0x28	; 40
     2be:	29 f0       	breq	.+10     	; 0x2ca <RTC_ReadBlock+0x54>
     2c0:	80 33       	cpi	r24, 0x30	; 48
     2c2:	19 f0       	breq	.+6      	; 0x2ca <RTC_ReadBlock+0x54>
     2c4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2c8:	44 c0       	rjmp	.+136    	; 0x352 <RTC_ReadBlock+0xdc>
     2ca:	0e 94 18 08 	call	0x1030	; 0x1030 <TWI_BeginTransmission>
     2ce:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     2d2:	88 30       	cpi	r24, 0x08	; 8
     2d4:	29 f0       	breq	.+10     	; 0x2e0 <RTC_ReadBlock+0x6a>
     2d6:	80 31       	cpi	r24, 0x10	; 16
     2d8:	19 f0       	breq	.+6      	; 0x2e0 <RTC_ReadBlock+0x6a>
     2da:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2de:	39 c0       	rjmp	.+114    	; 0x352 <RTC_ReadBlock+0xdc>
     2e0:	81 ed       	ldi	r24, 0xD1	; 209
     2e2:	0e 94 26 08 	call	0x104c	; 0x104c <TWI_Transmit>
     2e6:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     2ea:	80 34       	cpi	r24, 0x40	; 64
     2ec:	b1 f0       	breq	.+44     	; 0x31a <RTC_ReadBlock+0xa4>
     2ee:	88 34       	cpi	r24, 0x48	; 72
     2f0:	b1 f0       	breq	.+44     	; 0x31e <RTC_ReadBlock+0xa8>
     2f2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2f6:	2d c0       	rjmp	.+90     	; 0x352 <RTC_ReadBlock+0xdc>
     2f8:	0e 94 2f 08 	call	0x105e	; 0x105e <TWI_ReceiveACK>
     2fc:	fe 01       	movw	r30, r28
     2fe:	e0 0f       	add	r30, r16
     300:	f1 1d       	adc	r31, r1
     302:	80 83       	st	Z, r24
     304:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     308:	80 35       	cpi	r24, 0x50	; 80
     30a:	29 f0       	breq	.+10     	; 0x316 <RTC_ReadBlock+0xa0>
     30c:	88 35       	cpi	r24, 0x58	; 88
     30e:	19 f0       	breq	.+6      	; 0x316 <RTC_ReadBlock+0xa0>
     310:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     314:	0d c0       	rjmp	.+26     	; 0x330 <RTC_ReadBlock+0xba>
     316:	0f 5f       	subi	r16, 0xFF	; 255
     318:	03 c0       	rjmp	.+6      	; 0x320 <RTC_ReadBlock+0xaa>
     31a:	00 e0       	ldi	r16, 0x00	; 0
     31c:	01 c0       	rjmp	.+2      	; 0x320 <RTC_ReadBlock+0xaa>
     31e:	00 e0       	ldi	r16, 0x00	; 0
     320:	20 2f       	mov	r18, r16
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	81 2f       	mov	r24, r17
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	28 17       	cp	r18, r24
     32c:	39 07       	cpc	r19, r25
     32e:	24 f3       	brlt	.-56     	; 0x2f8 <RTC_ReadBlock+0x82>
     330:	c0 0f       	add	r28, r16
     332:	d1 1d       	adc	r29, r1
     334:	0e 94 36 08 	call	0x106c	; 0x106c <TWI_ReceiveNACK>
     338:	88 83       	st	Y, r24
     33a:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
     33e:	80 35       	cpi	r24, 0x50	; 80
     340:	29 f0       	breq	.+10     	; 0x34c <RTC_ReadBlock+0xd6>
     342:	88 35       	cpi	r24, 0x58	; 88
     344:	19 f0       	breq	.+6      	; 0x34c <RTC_ReadBlock+0xd6>
     346:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     34a:	03 c0       	rjmp	.+6      	; 0x352 <RTC_ReadBlock+0xdc>
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     352:	0e 94 20 08 	call	0x1040	; 0x1040 <TWI_EndTransmission>
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	08 95       	ret

00000360 <RTC_ReadByte>:
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	1f 92       	push	r1
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	be 01       	movw	r22, r28
     36e:	6f 5f       	subi	r22, 0xFF	; 255
     370:	7f 4f       	sbci	r23, 0xFF	; 255
     372:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	0f 90       	pop	r0
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <FlagWrite>:
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	0f 93       	push	r16
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	d8 2f       	mov	r29, r24
     38e:	e6 2e       	mov	r14, r22
     390:	f4 2e       	mov	r15, r20
     392:	0e 94 b0 01 	call	0x360	; 0x360 <RTC_ReadByte>
     396:	48 2f       	mov	r20, r24
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	60 e0       	ldi	r22, 0x00	; 0
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	0e 2c       	mov	r0, r14
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <FlagWrite+0x2a>
     3a2:	76 95       	lsr	r23
     3a4:	67 95       	ror	r22
     3a6:	57 95       	ror	r21
     3a8:	47 95       	ror	r20
     3aa:	0a 94       	dec	r0
     3ac:	d2 f7       	brpl	.-12     	; 0x3a2 <FlagWrite+0x22>
     3ae:	91 e0       	ldi	r25, 0x01	; 1
     3b0:	40 ff       	sbrs	r20, 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	c9 2f       	mov	r28, r25
     3b6:	01 e0       	ldi	r16, 0x01	; 1
     3b8:	10 e0       	ldi	r17, 0x00	; 0
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <FlagWrite+0x48>
     3c0:	00 0f       	add	r16, r16
     3c2:	11 1f       	adc	r17, r17
     3c4:	22 1f       	adc	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	ea 94       	dec	r14
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <FlagWrite+0x40>
     3cc:	60 2f       	mov	r22, r16
     3ce:	60 95       	com	r22
     3d0:	68 23       	and	r22, r24
     3d2:	f1 10       	cpse	r15, r1
     3d4:	60 2b       	or	r22, r16
     3d6:	8d 2f       	mov	r24, r29
     3d8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     3dc:	8c 2f       	mov	r24, r28
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	ff 90       	pop	r15
     3e8:	ef 90       	pop	r14
     3ea:	08 95       	ret

000003ec <RTC_Set>:
     3ec:	af 92       	push	r10
     3ee:	bf 92       	push	r11
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	28 97       	sbiw	r28, 0x08	; 8
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	a3 2e       	mov	r10, r19
     412:	b4 2e       	mov	r11, r20
     414:	c5 2e       	mov	r12, r21
     416:	d6 2e       	mov	r13, r22
     418:	e7 2e       	mov	r14, r23
     41a:	f8 2e       	mov	r15, r24
     41c:	82 2f       	mov	r24, r18
     41e:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     422:	06 e3       	ldi	r16, 0x36	; 54
     424:	11 e0       	ldi	r17, 0x01	; 1
     426:	f8 01       	movw	r30, r16
     428:	80 83       	st	Z, r24
     42a:	8a 2d       	mov	r24, r10
     42c:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     430:	f8 01       	movw	r30, r16
     432:	81 83       	std	Z+1, r24	; 0x01
     434:	8b 2d       	mov	r24, r11
     436:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     43a:	f8 01       	movw	r30, r16
     43c:	82 83       	std	Z+2, r24	; 0x02
     43e:	8c 2d       	mov	r24, r12
     440:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     444:	f8 01       	movw	r30, r16
     446:	83 83       	std	Z+3, r24	; 0x03
     448:	8d 2d       	mov	r24, r13
     44a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     44e:	f8 01       	movw	r30, r16
     450:	84 83       	std	Z+4, r24	; 0x04
     452:	8e 2d       	mov	r24, r14
     454:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     458:	f8 01       	movw	r30, r16
     45a:	85 83       	std	Z+5, r24	; 0x05
     45c:	80 e3       	ldi	r24, 0x30	; 48
     45e:	8f 0d       	add	r24, r15
     460:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     464:	f8 01       	movw	r30, r16
     466:	86 83       	std	Z+6, r24	; 0x06
     468:	47 e0       	ldi	r20, 0x07	; 7
     46a:	b8 01       	movw	r22, r16
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     472:	28 96       	adiw	r28, 0x08	; 8
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	ff 90       	pop	r15
     488:	ef 90       	pop	r14
     48a:	df 90       	pop	r13
     48c:	cf 90       	pop	r12
     48e:	bf 90       	pop	r11
     490:	af 90       	pop	r10
     492:	08 95       	ret

00000494 <RTC_Get>:
     494:	0f 93       	push	r16
     496:	1f 93       	push	r17
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	60 97       	sbiw	r28, 0x10	; 16
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
     4ac:	47 e0       	ldi	r20, 0x07	; 7
     4ae:	66 e3       	ldi	r22, 0x36	; 54
     4b0:	71 e0       	ldi	r23, 0x01	; 1
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     4b8:	06 e3       	ldi	r16, 0x36	; 54
     4ba:	11 e0       	ldi	r17, 0x01	; 1
     4bc:	f8 01       	movw	r30, r16
     4be:	80 81       	ld	r24, Z
     4c0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4c4:	89 87       	std	Y+9, r24	; 0x09
     4c6:	f8 01       	movw	r30, r16
     4c8:	81 81       	ldd	r24, Z+1	; 0x01
     4ca:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ce:	8a 87       	std	Y+10, r24	; 0x0a
     4d0:	f8 01       	movw	r30, r16
     4d2:	82 81       	ldd	r24, Z+2	; 0x02
     4d4:	8f 73       	andi	r24, 0x3F	; 63
     4d6:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4da:	8b 87       	std	Y+11, r24	; 0x0b
     4dc:	f8 01       	movw	r30, r16
     4de:	83 81       	ldd	r24, Z+3	; 0x03
     4e0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4e4:	8c 87       	std	Y+12, r24	; 0x0c
     4e6:	f8 01       	movw	r30, r16
     4e8:	84 81       	ldd	r24, Z+4	; 0x04
     4ea:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ee:	8d 87       	std	Y+13, r24	; 0x0d
     4f0:	f8 01       	movw	r30, r16
     4f2:	85 81       	ldd	r24, Z+5	; 0x05
     4f4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4f8:	8e 87       	std	Y+14, r24	; 0x0e
     4fa:	f8 01       	movw	r30, r16
     4fc:	86 81       	ldd	r24, Z+6	; 0x06
     4fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	80 53       	subi	r24, 0x30	; 48
     506:	98 4f       	sbci	r25, 0xF8	; 248
     508:	98 8b       	std	Y+16, r25	; 0x10
     50a:	8f 87       	std	Y+15, r24	; 0x0f
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	fe 01       	movw	r30, r28
     510:	39 96       	adiw	r30, 0x09	; 9
     512:	de 01       	movw	r26, r28
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	01 90       	ld	r0, Z+
     518:	0d 92       	st	X+, r0
     51a:	8a 95       	dec	r24
     51c:	e1 f7       	brne	.-8      	; 0x516 <RTC_Get+0x82>
     51e:	29 81       	ldd	r18, Y+1	; 0x01
     520:	3a 81       	ldd	r19, Y+2	; 0x02
     522:	4b 81       	ldd	r20, Y+3	; 0x03
     524:	5c 81       	ldd	r21, Y+4	; 0x04
     526:	6d 81       	ldd	r22, Y+5	; 0x05
     528:	7e 81       	ldd	r23, Y+6	; 0x06
     52a:	8f 81       	ldd	r24, Y+7	; 0x07
     52c:	98 85       	ldd	r25, Y+8	; 0x08
     52e:	60 96       	adiw	r28, 0x10	; 16
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	08 95       	ret

00000544 <RTC_AlarmSet>:

//Set alarm.
void RTC_AlarmSet(Alarm_Type_t Alarm, uint8_t DayDate, uint8_t Hours, uint8_t Minutes, uint8_t Seconds)
{
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	c8 2f       	mov	r28, r24
     552:	d6 2f       	mov	r29, r22
     554:	14 2f       	mov	r17, r20
     556:	e2 2e       	mov	r14, r18
     558:	80 2f       	mov	r24, r16
	uint8_t addr;

	//Convert all decimal values to their corresponding BCD values
	Seconds = Dec2bcd(Seconds);
     55a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     55e:	f8 2e       	mov	r15, r24
	Minutes = Dec2bcd(Minutes);
     560:	8e 2d       	mov	r24, r14
     562:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     566:	08 2f       	mov	r16, r24
	Hours   = Dec2bcd(Hours);
     568:	81 2f       	mov	r24, r17
     56a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     56e:	18 2f       	mov	r17, r24
	DayDate = Dec2bcd(DayDate);	//Either Day or Date can be used. Not both.
     570:	8d 2f       	mov	r24, r29
     572:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     576:	d8 2f       	mov	r29, r24
	
	//Set Alarm Control Bits based on Alarm Mask Bits
	//Seconds
	if (BitCheck(Alarm, 0))
     578:	c0 ff       	sbrs	r28, 0
     57a:	03 c0       	rjmp	.+6      	; 0x582 <RTC_AlarmSet+0x3e>
		BitSet(Seconds, __RTC_A1M1);
     57c:	8f 2d       	mov	r24, r15
     57e:	80 68       	ori	r24, 0x80	; 128
     580:	f8 2e       	mov	r15, r24
	//Minutes
	if (BitCheck(Alarm, 1))
     582:	c1 fd       	sbrc	r28, 1
		BitSet(Minutes, __RTC_A1M2);
     584:	00 68       	ori	r16, 0x80	; 128
	//Hours
	if (BitCheck(Alarm, 2))
     586:	c2 fd       	sbrc	r28, 2
		BitSet(Hours, __RTC_A1M3);
     588:	10 68       	ori	r17, 0x80	; 128
	//Day-Date value
	if (BitCheck(Alarm, 3))
     58a:	c3 fd       	sbrc	r28, 3
		BitSet(DayDate, __RTC_A1M4);
     58c:	d0 68       	ori	r29, 0x80	; 128
	//Day-Date flag
	if (BitCheck(Alarm, 4))
     58e:	c4 fd       	sbrc	r28, 4
		BitSet(DayDate, __RTC_DYDT);
     590:	d0 64       	ori	r29, 0x40	; 64
	
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
     592:	cc 23       	and	r28, r28
     594:	34 f0       	brlt	.+12     	; 0x5a2 <RTC_AlarmSet+0x5e>
	//Alarm 1
	else
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
     596:	6f 2d       	mov	r22, r15
     598:	87 e0       	ldi	r24, 0x07	; 7
     59a:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     59e:	c8 e0       	ldi	r28, 0x08	; 8
     5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <RTC_AlarmSet+0x60>
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
	{
		//Alarm 2 does not have seconds register
		addr = __RTC_Address_Alarm2_Minutes;
     5a2:	cb e0       	ldi	r28, 0x0B	; 11
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
	}
	RTC_WriteByte(addr++, Minutes);
     5a4:	ff 24       	eor	r15, r15
     5a6:	f3 94       	inc	r15
     5a8:	fc 0e       	add	r15, r28
     5aa:	60 2f       	mov	r22, r16
     5ac:	8c 2f       	mov	r24, r28
     5ae:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, Hours);
     5b2:	ce 5f       	subi	r28, 0xFE	; 254
     5b4:	61 2f       	mov	r22, r17
     5b6:	8f 2d       	mov	r24, r15
     5b8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, DayDate);
     5bc:	6d 2f       	mov	r22, r29
     5be:	8c 2f       	mov	r24, r28
     5c0:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <RTC_AlarmInterrupt>:

//Set alarm interrupt pin 
uint8_t RTC_AlarmInterrupt(Alarm_Number_t Alarm, uint8_t Enable)
{
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	d8 2f       	mov	r29, r24
     5d8:	c6 2f       	mov	r28, r22
	//Enable INTCN
	FlagWrite(__RTC_Address_Control, __RTC_INTCN, Enable);
     5da:	46 2f       	mov	r20, r22
     5dc:	62 e0       	ldi	r22, 0x02	; 2
     5de:	8e e0       	ldi	r24, 0x0E	; 14
     5e0:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
		
	//Enable alarm
	return (FlagWrite(__RTC_Address_Control, Alarm, Enable));
     5e4:	4c 2f       	mov	r20, r28
     5e6:	6d 2f       	mov	r22, r29
     5e8:	8e e0       	ldi	r24, 0x0E	; 14
     5ea:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <i2c_master_init>:
	}
	
	i2c_master_stop();
	
	return I2C_STATUS_SUCCESS;
}
     5f4:	9b 01       	movw	r18, r22
     5f6:	ac 01       	movw	r20, r24
     5f8:	11 b8       	out	0x01, r1	; 1
     5fa:	60 e0       	ldi	r22, 0x00	; 0
     5fc:	72 e1       	ldi	r23, 0x12	; 18
     5fe:	8a e7       	ldi	r24, 0x7A	; 122
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 38 09 	call	0x1270	; 0x1270 <__udivmodsi4>
     606:	da 01       	movw	r26, r20
     608:	c9 01       	movw	r24, r18
     60a:	40 97       	sbiw	r24, 0x10	; 16
     60c:	a1 09       	sbc	r26, r1
     60e:	b1 09       	sbc	r27, r1
     610:	b6 95       	lsr	r27
     612:	a7 95       	ror	r26
     614:	97 95       	ror	r25
     616:	87 95       	ror	r24
     618:	80 b9       	out	0x00, r24	; 0
     61a:	08 95       	ret

0000061c <i2c_master_start>:
     61c:	16 be       	out	0x36, r1	; 54
     61e:	94 ea       	ldi	r25, 0xA4	; 164
     620:	96 bf       	out	0x36, r25	; 54
     622:	06 b6       	in	r0, 0x36	; 54
     624:	07 fe       	sbrs	r0, 7
     626:	fd cf       	rjmp	.-6      	; 0x622 <i2c_master_start+0x6>
     628:	91 b1       	in	r25, 0x01	; 1
     62a:	98 7f       	andi	r25, 0xF8	; 248
     62c:	98 30       	cpi	r25, 0x08	; 8
     62e:	11 f0       	breq	.+4      	; 0x634 <i2c_master_start+0x18>
     630:	90 31       	cpi	r25, 0x10	; 16
     632:	91 f4       	brne	.+36     	; 0x658 <i2c_master_start+0x3c>
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	88 0f       	add	r24, r24
     638:	99 1f       	adc	r25, r25
     63a:	86 2b       	or	r24, r22
     63c:	83 b9       	out	0x03, r24	; 3
     63e:	84 e8       	ldi	r24, 0x84	; 132
     640:	86 bf       	out	0x36, r24	; 54
     642:	06 b6       	in	r0, 0x36	; 54
     644:	07 fe       	sbrs	r0, 7
     646:	fd cf       	rjmp	.-6      	; 0x642 <i2c_master_start+0x26>
     648:	81 b1       	in	r24, 0x01	; 1
     64a:	88 7f       	andi	r24, 0xF8	; 248
     64c:	88 31       	cpi	r24, 0x18	; 24
     64e:	31 f0       	breq	.+12     	; 0x65c <i2c_master_start+0x40>
     650:	80 34       	cpi	r24, 0x40	; 64
     652:	31 f4       	brne	.+12     	; 0x660 <i2c_master_start+0x44>
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	08 95       	ret
     658:	8a e0       	ldi	r24, 0x0A	; 10
     65a:	08 95       	ret
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	08 95       	ret
     660:	84 e1       	ldi	r24, 0x14	; 20
     662:	08 95       	ret

00000664 <i2c_master_write>:
     664:	83 b9       	out	0x03, r24	; 3
     666:	84 e8       	ldi	r24, 0x84	; 132
     668:	86 bf       	out	0x36, r24	; 54
     66a:	06 b6       	in	r0, 0x36	; 54
     66c:	07 fe       	sbrs	r0, 7
     66e:	fd cf       	rjmp	.-6      	; 0x66a <i2c_master_write+0x6>
     670:	81 b1       	in	r24, 0x01	; 1
     672:	88 7f       	andi	r24, 0xF8	; 248
     674:	88 32       	cpi	r24, 0x28	; 40
     676:	11 f0       	breq	.+4      	; 0x67c <i2c_master_write+0x18>
     678:	85 e1       	ldi	r24, 0x15	; 21
     67a:	08 95       	ret
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	08 95       	ret

00000680 <i2c_master_stop>:
     680:	84 e9       	ldi	r24, 0x94	; 148
     682:	86 bf       	out	0x36, r24	; 54
     684:	08 95       	ret

00000686 <i2c_master_sendByte>:

uint8_t i2c_master_sendByte(uint8_t address, uint8_t data)
{
     686:	cf 93       	push	r28
     688:	c6 2f       	mov	r28, r22
	uint8_t status = i2c_master_start(address, I2C_WRITE);
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	0e 94 0e 03 	call	0x61c	; 0x61c <i2c_master_start>
	if (status) return status;
     690:	81 11       	cpse	r24, r1
     692:	08 c0       	rjmp	.+16     	; 0x6a4 <i2c_master_sendByte+0x1e>

	status = i2c_master_write(data);
     694:	8c 2f       	mov	r24, r28
     696:	0e 94 32 03 	call	0x664	; 0x664 <i2c_master_write>
	if (status) return status;
     69a:	81 11       	cpse	r24, r1
     69c:	03 c0       	rjmp	.+6      	; 0x6a4 <i2c_master_sendByte+0x1e>

	i2c_master_stop();
     69e:	0e 94 40 03 	call	0x680	; 0x680 <i2c_master_stop>
	
	return I2C_STATUS_SUCCESS;
     6a2:	80 e0       	ldi	r24, 0x00	; 0
};
     6a4:	cf 91       	pop	r28
     6a6:	08 95       	ret

000006a8 <lq_transmitI2C>:

	for (i = 0; i < 8; i++) 
	{
		lq_writeDeviceByte(device, charmap[i], LCD_REGISTER_SELECT_BIT);
	}
}
     6a8:	fc 01       	movw	r30, r24
     6aa:	23 81       	ldd	r18, Z+3	; 0x03
     6ac:	62 2b       	or	r22, r18
     6ae:	80 81       	ld	r24, Z
     6b0:	0e 94 43 03 	call	0x686	; 0x686 <i2c_master_sendByte>
     6b4:	08 95       	ret

000006b6 <lq_writeDevicePulse>:
     6b6:	0f 93       	push	r16
     6b8:	1f 93       	push	r17
     6ba:	cf 93       	push	r28
     6bc:	8c 01       	movw	r16, r24
     6be:	c6 2f       	mov	r28, r22
     6c0:	64 60       	ori	r22, 0x04	; 4
     6c2:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6c6:	8a e0       	ldi	r24, 0x0A	; 10
     6c8:	8a 95       	dec	r24
     6ca:	f1 f7       	brne	.-4      	; 0x6c8 <lq_writeDevicePulse+0x12>
     6cc:	00 c0       	rjmp	.+0      	; 0x6ce <lq_writeDevicePulse+0x18>
     6ce:	6c 2f       	mov	r22, r28
     6d0:	6b 7f       	andi	r22, 0xFB	; 251
     6d2:	c8 01       	movw	r24, r16
     6d4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6d8:	87 ec       	ldi	r24, 0xC7	; 199
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <lq_writeDevicePulse+0x26>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <lq_writeDevicePulse+0x2c>
     6e2:	00 00       	nop
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	0f 91       	pop	r16
     6ea:	08 95       	ret

000006ec <lq_writeDevice4Bits>:
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
     6f4:	16 2f       	mov	r17, r22
     6f6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6fa:	61 2f       	mov	r22, r17
     6fc:	ce 01       	movw	r24, r28
     6fe:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <lq_writeDevicePulse>
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	1f 91       	pop	r17
     708:	08 95       	ret

0000070a <lq_writeDeviceByte>:
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	8c 01       	movw	r16, r24
     716:	f4 2e       	mov	r15, r20
     718:	86 2f       	mov	r24, r22
     71a:	80 7f       	andi	r24, 0xF0	; 240
     71c:	90 e1       	ldi	r25, 0x10	; 16
     71e:	69 9f       	mul	r22, r25
     720:	e0 01       	movw	r28, r0
     722:	11 24       	eor	r1, r1
     724:	68 2f       	mov	r22, r24
     726:	64 2b       	or	r22, r20
     728:	c8 01       	movw	r24, r16
     72a:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     72e:	6c 2f       	mov	r22, r28
     730:	6f 29       	or	r22, r15
     732:	c8 01       	movw	r24, r16
     734:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	ff 90       	pop	r15
     742:	08 95       	ret

00000744 <lq_print>:
     744:	0f 93       	push	r16
     746:	1f 93       	push	r17
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	8c 01       	movw	r16, r24
     74e:	eb 01       	movw	r28, r22
     750:	68 81       	ld	r22, Y
     752:	06 c0       	rjmp	.+12     	; 0x760 <lq_print+0x1c>
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	c8 01       	movw	r24, r16
     758:	0e 94 85 03 	call	0x70a	; 0x70a <lq_writeDeviceByte>
     75c:	21 96       	adiw	r28, 0x01	; 1
     75e:	68 81       	ld	r22, Y
     760:	61 11       	cpse	r22, r1
     762:	f8 cf       	rjmp	.-16     	; 0x754 <lq_print+0x10>
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	08 95       	ret

0000076e <lq_sendCommand>:
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	0e 94 85 03 	call	0x70a	; 0x70a <lq_writeDeviceByte>
     774:	08 95       	ret

00000776 <lq_setCursor>:
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	00 d0       	rcall	.+0      	; 0x77c <lq_setCursor+0x6>
     77c:	00 d0       	rcall	.+0      	; 0x77e <lq_setCursor+0x8>
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	19 82       	std	Y+1, r1	; 0x01
     784:	20 e4       	ldi	r18, 0x40	; 64
     786:	2a 83       	std	Y+2, r18	; 0x02
     788:	24 e1       	ldi	r18, 0x14	; 20
     78a:	2b 83       	std	Y+3, r18	; 0x03
     78c:	24 e5       	ldi	r18, 0x54	; 84
     78e:	2c 83       	std	Y+4, r18	; 0x04
     790:	e1 e0       	ldi	r30, 0x01	; 1
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	ec 0f       	add	r30, r28
     796:	fd 1f       	adc	r31, r29
     798:	e6 0f       	add	r30, r22
     79a:	f1 1d       	adc	r31, r1
     79c:	60 81       	ld	r22, Z
     79e:	64 0f       	add	r22, r20
     7a0:	60 68       	ori	r22, 0x80	; 128
     7a2:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <lq_clear>:
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	ec 01       	movw	r28, r24
     7ba:	61 e0       	ldi	r22, 0x01	; 1
     7bc:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7c0:	8f e3       	ldi	r24, 0x3F	; 63
     7c2:	9f e1       	ldi	r25, 0x1F	; 31
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <lq_clear+0x10>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <lq_clear+0x16>
     7ca:	00 00       	nop
     7cc:	40 e0       	ldi	r20, 0x00	; 0
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	ce 01       	movw	r24, r28
     7d2:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	08 95       	ret

000007dc <lq_returnHome>:
     7dc:	62 e0       	ldi	r22, 0x02	; 2
     7de:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7e2:	8f e3       	ldi	r24, 0x3F	; 63
     7e4:	9f e1       	ldi	r25, 0x1F	; 31
     7e6:	01 97       	sbiw	r24, 0x01	; 1
     7e8:	f1 f7       	brne	.-4      	; 0x7e6 <lq_returnHome+0xa>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <lq_returnHome+0x10>
     7ec:	00 00       	nop
     7ee:	08 95       	ret

000007f0 <lq_turnOnDisplay>:
     7f0:	fc 01       	movw	r30, r24
     7f2:	65 81       	ldd	r22, Z+5	; 0x05
     7f4:	26 2f       	mov	r18, r22
     7f6:	24 60       	ori	r18, 0x04	; 4
     7f8:	25 83       	std	Z+5, r18	; 0x05
     7fa:	6c 60       	ori	r22, 0x0C	; 12
     7fc:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     800:	08 95       	ret

00000802 <lq_init>:

#include <avr/io.h>
#include <util/delay.h>

LiquidCrystalDevice_t lq_init(uint8_t address, uint8_t columns, uint8_t rows, uint8_t dotSize)
{
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	cd b7       	in	r28, 0x3d	; 61
     808:	de b7       	in	r29, 0x3e	; 62
     80a:	2e 97       	sbiw	r28, 0x0e	; 14
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	f8 94       	cli
     810:	de bf       	out	0x3e, r29	; 62
     812:	0f be       	out	0x3f, r0	; 63
     814:	cd bf       	out	0x3d, r28	; 61
	LiquidCrystalDevice_t device;

	device.Address = address;
     816:	88 87       	std	Y+8, r24	; 0x08
	device.Columns = columns;
     818:	69 87       	std	Y+9, r22	; 0x09
	device.Rows = rows;
     81a:	4a 87       	std	Y+10, r20	; 0x0a
	device.Backlight = LCD_NOBACKLIGHT;
     81c:	1b 86       	std	Y+11, r1	; 0x0b
	device.DisplayFunction = LCD_4BITMODE | LCD_1LINE | dotSize;
     81e:	2c 87       	std	Y+12, r18	; 0x0c
	device.DisplayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
     820:	84 e0       	ldi	r24, 0x04	; 4
     822:	8d 87       	std	Y+13, r24	; 0x0d

	// Initialize to default text direction (for roman languages)
	device.DisplayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     824:	82 e0       	ldi	r24, 0x02	; 2
     826:	8e 87       	std	Y+14, r24	; 0x0e

	if (rows > 1) {
     828:	42 30       	cpi	r20, 0x02	; 2
     82a:	18 f0       	brcs	.+6      	; 0x832 <lq_init+0x30>
		device.DisplayFunction |= LCD_2LINE;
     82c:	82 2f       	mov	r24, r18
     82e:	88 60       	ori	r24, 0x08	; 8
     830:	8c 87       	std	Y+12, r24	; 0x0c
	}

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotSize != 0) && (rows == 1)) {
     832:	22 23       	and	r18, r18
     834:	29 f0       	breq	.+10     	; 0x840 <lq_init+0x3e>
     836:	41 30       	cpi	r20, 0x01	; 1
     838:	19 f4       	brne	.+6      	; 0x840 <lq_init+0x3e>
		device.DisplayFunction |= LCD_5x10DOTS;
     83a:	8c 85       	ldd	r24, Y+12	; 0x0c
     83c:	84 60       	ori	r24, 0x04	; 4
     83e:	8c 87       	std	Y+12, r24	; 0x0c
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     840:	2f ef       	ldi	r18, 0xFF	; 255
     842:	81 ee       	ldi	r24, 0xE1	; 225
     844:	94 e0       	ldi	r25, 0x04	; 4
     846:	21 50       	subi	r18, 0x01	; 1
     848:	80 40       	sbci	r24, 0x00	; 0
     84a:	90 40       	sbci	r25, 0x00	; 0
     84c:	e1 f7       	brne	.-8      	; 0x846 <lq_init+0x44>
     84e:	00 c0       	rjmp	.+0      	; 0x850 <lq_init+0x4e>
     850:	00 00       	nop
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	_delay_ms(100);
	
	// Now we pull both RS and R/W low to begin commands
	lq_transmitI2C(&device, LCD_NOBACKLIGHT);	// reset expanderand turn backlight off (Bit 8 =1)
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	ce 01       	movw	r24, r28
     856:	08 96       	adiw	r24, 0x08	; 8
     858:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     85c:	2f ef       	ldi	r18, 0xFF	; 255
     85e:	81 ee       	ldi	r24, 0xE1	; 225
     860:	94 e0       	ldi	r25, 0x04	; 4
     862:	21 50       	subi	r18, 0x01	; 1
     864:	80 40       	sbci	r24, 0x00	; 0
     866:	90 40       	sbci	r25, 0x00	; 0
     868:	e1 f7       	brne	.-8      	; 0x862 <__stack+0x3>
     86a:	00 c0       	rjmp	.+0      	; 0x86c <__stack+0xd>
     86c:	00 00       	nop
	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	// we start in 8bit mode, try to set 4 bit mode
	lq_transmitI2C(&device, 0x03 << 4);
     86e:	60 e3       	ldi	r22, 0x30	; 48
     870:	ce 01       	movw	r24, r28
     872:	08 96       	adiw	r24, 0x08	; 8
     874:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     878:	8f e4       	ldi	r24, 0x4F	; 79
     87a:	96 e4       	ldi	r25, 0x46	; 70
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	f1 f7       	brne	.-4      	; 0x87c <__stack+0x1d>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// second try
	lq_writeDevice4Bits(&device, 0x03 << 4);
     884:	60 e3       	ldi	r22, 0x30	; 48
     886:	ce 01       	movw	r24, r28
     888:	08 96       	adiw	r24, 0x08	; 8
     88a:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     88e:	8f e4       	ldi	r24, 0x4F	; 79
     890:	96 e4       	ldi	r25, 0x46	; 70
     892:	01 97       	sbiw	r24, 0x01	; 1
     894:	f1 f7       	brne	.-4      	; 0x892 <__stack+0x33>
     896:	00 c0       	rjmp	.+0      	; 0x898 <__stack+0x39>
     898:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// third go!
	lq_writeDevice4Bits(&device, 0x03 << 4);
     89a:	60 e3       	ldi	r22, 0x30	; 48
     89c:	ce 01       	movw	r24, r28
     89e:	08 96       	adiw	r24, 0x08	; 8
     8a0:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     8a4:	87 e5       	ldi	r24, 0x57	; 87
     8a6:	92 e0       	ldi	r25, 0x02	; 2
     8a8:	01 97       	sbiw	r24, 0x01	; 1
     8aa:	f1 f7       	brne	.-4      	; 0x8a8 <__stack+0x49>
     8ac:	00 c0       	rjmp	.+0      	; 0x8ae <__stack+0x4f>
     8ae:	00 00       	nop
	_delay_us(150); // wait min 150 mics
	
	// finally, set to 4-bit interface
	lq_writeDevice4Bits(&device, 0x02 << 4);
     8b0:	60 e2       	ldi	r22, 0x20	; 32
     8b2:	ce 01       	movw	r24, r28
     8b4:	08 96       	adiw	r24, 0x08	; 8
     8b6:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>

	// set # lines, font size, etc.
	lq_sendCommand(&device, LCD_FUNCTIONSET | device.DisplayFunction);
     8ba:	6c 85       	ldd	r22, Y+12	; 0x0c
     8bc:	60 62       	ori	r22, 0x20	; 32
     8be:	ce 01       	movw	r24, r28
     8c0:	08 96       	adiw	r24, 0x08	; 8
     8c2:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
	
	// turn the display on with no cursor or blinking default
	lq_turnOnDisplay(&device);
     8c6:	ce 01       	movw	r24, r28
     8c8:	08 96       	adiw	r24, 0x08	; 8
     8ca:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <lq_turnOnDisplay>
	
	// clear it off
	lq_clear(&device);
     8ce:	ce 01       	movw	r24, r28
     8d0:	08 96       	adiw	r24, 0x08	; 8
     8d2:	0e 94 da 03 	call	0x7b4	; 0x7b4 <lq_clear>
	
	// set the entry mode
	lq_sendCommand(&device, LCD_ENTRYMODESET | device.DisplayMode);
     8d6:	6e 85       	ldd	r22, Y+14	; 0x0e
     8d8:	64 60       	ori	r22, 0x04	; 4
     8da:	ce 01       	movw	r24, r28
     8dc:	08 96       	adiw	r24, 0x08	; 8
     8de:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
	
	lq_returnHome(&device);
     8e2:	ce 01       	movw	r24, r28
     8e4:	08 96       	adiw	r24, 0x08	; 8
     8e6:	0e 94 ee 03 	call	0x7dc	; 0x7dc <lq_returnHome>

	return device;
     8ea:	87 e0       	ldi	r24, 0x07	; 7
     8ec:	fe 01       	movw	r30, r28
     8ee:	38 96       	adiw	r30, 0x08	; 8
     8f0:	de 01       	movw	r26, r28
     8f2:	11 96       	adiw	r26, 0x01	; 1
     8f4:	01 90       	ld	r0, Z+
     8f6:	0d 92       	st	X+, r0
     8f8:	8a 95       	dec	r24
     8fa:	e1 f7       	brne	.-8      	; 0x8f4 <__stack+0x95>
     8fc:	29 81       	ldd	r18, Y+1	; 0x01
     8fe:	3a 81       	ldd	r19, Y+2	; 0x02
     900:	4b 81       	ldd	r20, Y+3	; 0x03
     902:	5c 81       	ldd	r21, Y+4	; 0x04
     904:	6d 81       	ldd	r22, Y+5	; 0x05
     906:	7e 81       	ldd	r23, Y+6	; 0x06
};
     908:	8f 81       	ldd	r24, Y+7	; 0x07
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	2e 96       	adiw	r28, 0x0e	; 14
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	f8 94       	cli
     912:	de bf       	out	0x3e, r29	; 62
     914:	0f be       	out	0x3f, r0	; 63
     916:	cd bf       	out	0x3d, r28	; 61
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	08 95       	ret

0000091e <__vector_1>:
	char distanceStr[20];
	snprintf(distanceStr, sizeof(distanceStr), "%.2f", distance);
	
	// Send the distance string over UART
	serial_send_string(distanceStr);
}
     91e:	1f 92       	push	r1
     920:	0f 92       	push	r0
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	0f 92       	push	r0
     926:	11 24       	eor	r1, r1
     928:	2f 93       	push	r18
     92a:	3f 93       	push	r19
     92c:	4f 93       	push	r20
     92e:	5f 93       	push	r21
     930:	6f 93       	push	r22
     932:	7f 93       	push	r23
     934:	8f 93       	push	r24
     936:	9f 93       	push	r25
     938:	af 93       	push	r26
     93a:	bf 93       	push	r27
     93c:	ef 93       	push	r30
     93e:	ff 93       	push	r31
     940:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <isInAutomaticMode>
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	89 27       	eor	r24, r25
     948:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <isInAutomaticMode>
     94c:	81 11       	cpse	r24, r1
     94e:	0c c0       	rjmp	.+24     	; 0x968 <__vector_1+0x4a>
     950:	86 e7       	ldi	r24, 0x76	; 118
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <isMotorWorking>
     95e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <isTrashOpen>
     962:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <measurementFlag>
     966:	05 c0       	rjmp	.+10     	; 0x972 <__vector_1+0x54>
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <isMotorWorking>
     96e:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <isTrashOpen>
     972:	ff 91       	pop	r31
     974:	ef 91       	pop	r30
     976:	bf 91       	pop	r27
     978:	af 91       	pop	r26
     97a:	9f 91       	pop	r25
     97c:	8f 91       	pop	r24
     97e:	7f 91       	pop	r23
     980:	6f 91       	pop	r22
     982:	5f 91       	pop	r21
     984:	4f 91       	pop	r20
     986:	3f 91       	pop	r19
     988:	2f 91       	pop	r18
     98a:	0f 90       	pop	r0
     98c:	0f be       	out	0x3f, r0	; 63
     98e:	0f 90       	pop	r0
     990:	1f 90       	pop	r1
     992:	18 95       	reti

00000994 <openTrash>:
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	c0 e0       	ldi	r28, 0x00	; 0
     99a:	d0 e0       	ldi	r29, 0x00	; 0
     99c:	25 c0       	rjmp	.+74     	; 0x9e8 <openTrash+0x54>
     99e:	84 e0       	ldi	r24, 0x04	; 4
     9a0:	8b bb       	out	0x1b, r24	; 27
     9a2:	8f e4       	ldi	r24, 0x4F	; 79
     9a4:	93 ec       	ldi	r25, 0xC3	; 195
     9a6:	01 97       	sbiw	r24, 0x01	; 1
     9a8:	f1 f7       	brne	.-4      	; 0x9a6 <openTrash+0x12>
     9aa:	00 c0       	rjmp	.+0      	; 0x9ac <openTrash+0x18>
     9ac:	00 00       	nop
     9ae:	82 e0       	ldi	r24, 0x02	; 2
     9b0:	8b bb       	out	0x1b, r24	; 27
     9b2:	8f e4       	ldi	r24, 0x4F	; 79
     9b4:	93 ec       	ldi	r25, 0xC3	; 195
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	f1 f7       	brne	.-4      	; 0x9b6 <openTrash+0x22>
     9ba:	00 c0       	rjmp	.+0      	; 0x9bc <openTrash+0x28>
     9bc:	00 00       	nop
     9be:	88 e0       	ldi	r24, 0x08	; 8
     9c0:	8b bb       	out	0x1b, r24	; 27
     9c2:	8f e4       	ldi	r24, 0x4F	; 79
     9c4:	93 ec       	ldi	r25, 0xC3	; 195
     9c6:	01 97       	sbiw	r24, 0x01	; 1
     9c8:	f1 f7       	brne	.-4      	; 0x9c6 <openTrash+0x32>
     9ca:	00 c0       	rjmp	.+0      	; 0x9cc <openTrash+0x38>
     9cc:	00 00       	nop
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	8b bb       	out	0x1b, r24	; 27
     9d2:	8f e4       	ldi	r24, 0x4F	; 79
     9d4:	93 ec       	ldi	r25, 0xC3	; 195
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	f1 f7       	brne	.-4      	; 0x9d6 <openTrash+0x42>
     9da:	00 c0       	rjmp	.+0      	; 0x9dc <openTrash+0x48>
     9dc:	00 00       	nop
     9de:	8d e8       	ldi	r24, 0x8D	; 141
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
     9e6:	21 96       	adiw	r28, 0x01	; 1
     9e8:	c5 30       	cpi	r28, 0x05	; 5
     9ea:	d1 05       	cpc	r29, r1
     9ec:	c4 f2       	brlt	.-80     	; 0x99e <openTrash+0xa>
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <isTrashCompleteOpen>
     9f4:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <isTrashCompleteClose>
     9f8:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <isMotorWorking>
     9fc:	df 91       	pop	r29
     9fe:	cf 91       	pop	r28
     a00:	08 95       	ret

00000a02 <closeTrash>:
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	c0 e0       	ldi	r28, 0x00	; 0
     a08:	d0 e0       	ldi	r29, 0x00	; 0
     a0a:	25 c0       	rjmp	.+74     	; 0xa56 <closeTrash+0x54>
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	8b bb       	out	0x1b, r24	; 27
     a10:	8f e4       	ldi	r24, 0x4F	; 79
     a12:	93 ec       	ldi	r25, 0xC3	; 195
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	f1 f7       	brne	.-4      	; 0xa14 <closeTrash+0x12>
     a18:	00 c0       	rjmp	.+0      	; 0xa1a <closeTrash+0x18>
     a1a:	00 00       	nop
     a1c:	88 e0       	ldi	r24, 0x08	; 8
     a1e:	8b bb       	out	0x1b, r24	; 27
     a20:	8f e4       	ldi	r24, 0x4F	; 79
     a22:	93 ec       	ldi	r25, 0xC3	; 195
     a24:	01 97       	sbiw	r24, 0x01	; 1
     a26:	f1 f7       	brne	.-4      	; 0xa24 <closeTrash+0x22>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <closeTrash+0x28>
     a2a:	00 00       	nop
     a2c:	82 e0       	ldi	r24, 0x02	; 2
     a2e:	8b bb       	out	0x1b, r24	; 27
     a30:	8f e4       	ldi	r24, 0x4F	; 79
     a32:	93 ec       	ldi	r25, 0xC3	; 195
     a34:	01 97       	sbiw	r24, 0x01	; 1
     a36:	f1 f7       	brne	.-4      	; 0xa34 <closeTrash+0x32>
     a38:	00 c0       	rjmp	.+0      	; 0xa3a <closeTrash+0x38>
     a3a:	00 00       	nop
     a3c:	84 e0       	ldi	r24, 0x04	; 4
     a3e:	8b bb       	out	0x1b, r24	; 27
     a40:	8f e4       	ldi	r24, 0x4F	; 79
     a42:	93 ec       	ldi	r25, 0xC3	; 195
     a44:	01 97       	sbiw	r24, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <closeTrash+0x42>
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <closeTrash+0x48>
     a4a:	00 00       	nop
     a4c:	8a e9       	ldi	r24, 0x9A	; 154
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
     a54:	21 96       	adiw	r28, 0x01	; 1
     a56:	c5 30       	cpi	r28, 0x05	; 5
     a58:	d1 05       	cpc	r29, r1
     a5a:	c4 f2       	brlt	.-80     	; 0xa0c <closeTrash+0xa>
     a5c:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <isTrashCompleteOpen>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <isTrashCompleteClose>
     a66:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <isMotorWorking>
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	08 95       	ret

00000a70 <initClock>:
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	cd b7       	in	r28, 0x3d	; 61
     a76:	de b7       	in	r29, 0x3e	; 62
     a78:	28 97       	sbiw	r28, 0x08	; 8
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	de bf       	out	0x3e, r29	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	cd bf       	out	0x3d, r28	; 61
     a84:	89 ee       	ldi	r24, 0xE9	; 233
     a86:	97 e0       	ldi	r25, 0x07	; 7
     a88:	27 e3       	ldi	r18, 0x37	; 55
     a8a:	3b e3       	ldi	r19, 0x3B	; 59
     a8c:	42 e1       	ldi	r20, 0x12	; 18
     a8e:	52 e0       	ldi	r21, 0x02	; 2
     a90:	6d e1       	ldi	r22, 0x1D	; 29
     a92:	76 e0       	ldi	r23, 0x06	; 6
     a94:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
     a98:	28 96       	adiw	r28, 0x08	; 8
     a9a:	0f b6       	in	r0, 0x3f	; 63
     a9c:	f8 94       	cli
     a9e:	de bf       	out	0x3e, r29	; 62
     aa0:	0f be       	out	0x3f, r0	; 63
     aa2:	cd bf       	out	0x3d, r28	; 61
     aa4:	df 91       	pop	r29
     aa6:	cf 91       	pop	r28
     aa8:	08 95       	ret

00000aaa <initBuzzer>:
     aaa:	82 b3       	in	r24, 0x12	; 18
     aac:	88 60       	ori	r24, 0x08	; 8
     aae:	82 bb       	out	0x12, r24	; 18
     ab0:	81 b3       	in	r24, 0x11	; 17
     ab2:	80 68       	ori	r24, 0x80	; 128
     ab4:	81 bb       	out	0x11, r24	; 17
     ab6:	08 95       	ret

00000ab8 <turnOffBuzzer>:
     ab8:	82 b3       	in	r24, 0x12	; 18
     aba:	8f 77       	andi	r24, 0x7F	; 127
     abc:	82 bb       	out	0x12, r24	; 18
     abe:	08 95       	ret

00000ac0 <setupAlarm>:
     ac0:	0f 93       	push	r16
     ac2:	61 e0       	ldi	r22, 0x01	; 1
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <RTC_AlarmInterrupt>
     aca:	00 91 34 01 	lds	r16, 0x0134	; 0x800134 <alarmSeconds>
     ace:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <alarmMinutes>
     ad2:	40 91 75 00 	lds	r20, 0x0075	; 0x800075 <alarmHours>
     ad6:	60 91 41 01 	lds	r22, 0x0141	; 0x800141 <t+0x4>
     ada:	88 e0       	ldi	r24, 0x08	; 8
     adc:	0e 94 a2 02 	call	0x544	; 0x544 <RTC_AlarmSet>
     ae0:	0f 91       	pop	r16
     ae2:	08 95       	ret

00000ae4 <checkAlarm>:
     ae4:	82 b3       	in	r24, 0x12	; 18
     ae6:	08 95       	ret

00000ae8 <sensorInit>:
     ae8:	87 b3       	in	r24, 0x17	; 23
     aea:	82 60       	ori	r24, 0x02	; 2
     aec:	87 bb       	out	0x17, r24	; 23
     aee:	08 95       	ret

00000af0 <ADC_Init>:
     af0:	80 ec       	ldi	r24, 0xC0	; 192
     af2:	87 b9       	out	0x07, r24	; 7
     af4:	87 e8       	ldi	r24, 0x87	; 135
     af6:	86 b9       	out	0x06, r24	; 6
     af8:	08 95       	ret

00000afa <adcRead>:
     afa:	86 b1       	in	r24, 0x06	; 6
     afc:	80 65       	ori	r24, 0x50	; 80
     afe:	86 b9       	out	0x06, r24	; 6
     b00:	86 b1       	in	r24, 0x06	; 6
     b02:	84 b1       	in	r24, 0x04	; 4
     b04:	95 b1       	in	r25, 0x05	; 5
     b06:	08 95       	ret

00000b08 <calculateTemp>:
     b08:	0f 93       	push	r16
     b0a:	1f 93       	push	r17
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	cd b7       	in	r28, 0x3d	; 61
     b12:	de b7       	in	r29, 0x3e	; 62
     b14:	2a 97       	sbiw	r28, 0x0a	; 10
     b16:	0f b6       	in	r0, 0x3f	; 63
     b18:	f8 94       	cli
     b1a:	de bf       	out	0x3e, r29	; 62
     b1c:	0f be       	out	0x3f, r0	; 63
     b1e:	cd bf       	out	0x3d, r28	; 61
     b20:	0e 94 7d 05 	call	0xafa	; 0xafa <adcRead>
     b24:	0e 94 7d 05 	call	0xafa	; 0xafa <adcRead>
     b28:	bc 01       	movw	r22, r24
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 3d 08 	call	0x107a	; 0x107a <__floatunsisf>
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	40 e8       	ldi	r20, 0x80	; 128
     b38:	5e e3       	ldi	r21, 0x3E	; 62
     b3a:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <__mulsf3>
     b3e:	8e 01       	movw	r16, r28
     b40:	0f 5f       	subi	r16, 0xFF	; 255
     b42:	1f 4f       	sbci	r17, 0xFF	; 255
     b44:	21 e0       	ldi	r18, 0x01	; 1
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	44 e0       	ldi	r20, 0x04	; 4
     b4a:	50 e0       	ldi	r21, 0x00	; 0
     b4c:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <dtostrf>
     b50:	4d e0       	ldi	r20, 0x0D	; 13
     b52:	61 e0       	ldi	r22, 0x01	; 1
     b54:	85 e4       	ldi	r24, 0x45	; 69
     b56:	91 e0       	ldi	r25, 0x01	; 1
     b58:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     b5c:	b8 01       	movw	r22, r16
     b5e:	85 e4       	ldi	r24, 0x45	; 69
     b60:	91 e0       	ldi	r25, 0x01	; 1
     b62:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     b66:	2a 96       	adiw	r28, 0x0a	; 10
     b68:	0f b6       	in	r0, 0x3f	; 63
     b6a:	f8 94       	cli
     b6c:	de bf       	out	0x3e, r29	; 62
     b6e:	0f be       	out	0x3f, r0	; 63
     b70:	cd bf       	out	0x3d, r28	; 61
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	08 95       	ret

00000b7c <updateLcd>:
     b7c:	ef 92       	push	r14
     b7e:	ff 92       	push	r15
     b80:	0f 93       	push	r16
     b82:	1f 93       	push	r17
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	cd b7       	in	r28, 0x3d	; 61
     b8a:	de b7       	in	r29, 0x3e	; 62
     b8c:	64 97       	sbiw	r28, 0x14	; 20
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	f8 94       	cli
     b92:	de bf       	out	0x3e, r29	; 62
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	cd bf       	out	0x3d, r28	; 61
     b98:	0e 94 4a 02 	call	0x494	; 0x494 <RTC_Get>
     b9c:	ed e3       	ldi	r30, 0x3D	; 61
     b9e:	f1 e0       	ldi	r31, 0x01	; 1
     ba0:	20 83       	st	Z, r18
     ba2:	31 83       	std	Z+1, r19	; 0x01
     ba4:	42 83       	std	Z+2, r20	; 0x02
     ba6:	53 83       	std	Z+3, r21	; 0x03
     ba8:	64 83       	std	Z+4, r22	; 0x04
     baa:	75 83       	std	Z+5, r23	; 0x05
     bac:	86 83       	std	Z+6, r24	; 0x06
     bae:	97 83       	std	Z+7, r25	; 0x07
     bb0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <RTC_Status>
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	09 f0       	breq	.+2      	; 0xbba <updateLcd+0x3e>
     bb8:	49 c0       	rjmp	.+146    	; 0xc4c <updateLcd+0xd0>
     bba:	40 e0       	ldi	r20, 0x00	; 0
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	85 e4       	ldi	r24, 0x45	; 69
     bc0:	91 e0       	ldi	r25, 0x01	; 1
     bc2:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     bc6:	0d e3       	ldi	r16, 0x3D	; 61
     bc8:	11 e0       	ldi	r17, 0x01	; 1
     bca:	f8 01       	movw	r30, r16
     bcc:	20 81       	ld	r18, Z
     bce:	91 81       	ldd	r25, Z+1	; 0x01
     bd0:	82 81       	ldd	r24, Z+2	; 0x02
     bd2:	1f 92       	push	r1
     bd4:	2f 93       	push	r18
     bd6:	1f 92       	push	r1
     bd8:	9f 93       	push	r25
     bda:	1f 92       	push	r1
     bdc:	8f 93       	push	r24
     bde:	87 ea       	ldi	r24, 0xA7	; 167
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	9f 93       	push	r25
     be4:	8f 93       	push	r24
     be6:	7e 01       	movw	r14, r28
     be8:	fb e0       	ldi	r31, 0x0B	; 11
     bea:	ef 0e       	add	r14, r31
     bec:	f1 1c       	adc	r15, r1
     bee:	ff 92       	push	r15
     bf0:	ef 92       	push	r14
     bf2:	0e 94 94 09 	call	0x1328	; 0x1328 <sprintf>
     bf6:	b7 01       	movw	r22, r14
     bf8:	85 e4       	ldi	r24, 0x45	; 69
     bfa:	91 e0       	ldi	r25, 0x01	; 1
     bfc:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     c00:	40 e0       	ldi	r20, 0x00	; 0
     c02:	61 e0       	ldi	r22, 0x01	; 1
     c04:	85 e4       	ldi	r24, 0x45	; 69
     c06:	91 e0       	ldi	r25, 0x01	; 1
     c08:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     c0c:	f8 01       	movw	r30, r16
     c0e:	94 81       	ldd	r25, Z+4	; 0x04
     c10:	85 81       	ldd	r24, Z+5	; 0x05
     c12:	1f 92       	push	r1
     c14:	9f 93       	push	r25
     c16:	1f 92       	push	r1
     c18:	8f 93       	push	r24
     c1a:	87 81       	ldd	r24, Z+7	; 0x07
     c1c:	8f 93       	push	r24
     c1e:	86 81       	ldd	r24, Z+6	; 0x06
     c20:	8f 93       	push	r24
     c22:	86 eb       	ldi	r24, 0xB6	; 182
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	9f 93       	push	r25
     c28:	8f 93       	push	r24
     c2a:	8e 01       	movw	r16, r28
     c2c:	0f 5f       	subi	r16, 0xFF	; 255
     c2e:	1f 4f       	sbci	r17, 0xFF	; 255
     c30:	1f 93       	push	r17
     c32:	0f 93       	push	r16
     c34:	0e 94 94 09 	call	0x1328	; 0x1328 <sprintf>
     c38:	b8 01       	movw	r22, r16
     c3a:	85 e4       	ldi	r24, 0x45	; 69
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     c42:	0f b6       	in	r0, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	cd bf       	out	0x3d, r28	; 61
     c4c:	64 96       	adiw	r28, 0x14	; 20
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	f8 94       	cli
     c52:	de bf       	out	0x3e, r29	; 62
     c54:	0f be       	out	0x3f, r0	; 63
     c56:	cd bf       	out	0x3d, r28	; 61
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	1f 91       	pop	r17
     c5e:	0f 91       	pop	r16
     c60:	ff 90       	pop	r15
     c62:	ef 90       	pop	r14
     c64:	08 95       	ret

00000c66 <__vector_11>:
     c66:	1f 92       	push	r1
     c68:	0f 92       	push	r0
     c6a:	0f b6       	in	r0, 0x3f	; 63
     c6c:	0f 92       	push	r0
     c6e:	11 24       	eor	r1, r1
     c70:	2f 93       	push	r18
     c72:	3f 93       	push	r19
     c74:	4f 93       	push	r20
     c76:	5f 93       	push	r21
     c78:	6f 93       	push	r22
     c7a:	7f 93       	push	r23
     c7c:	8f 93       	push	r24
     c7e:	9f 93       	push	r25
     c80:	af 93       	push	r26
     c82:	bf 93       	push	r27
     c84:	ef 93       	push	r30
     c86:	ff 93       	push	r31
     c88:	86 e0       	ldi	r24, 0x06	; 6
     c8a:	82 bf       	out	0x32, r24	; 50
     c8c:	88 b7       	in	r24, 0x38	; 56
     c8e:	81 60       	ori	r24, 0x01	; 1
     c90:	88 bf       	out	0x38, r24	; 56
     c92:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <distanceTimeCounter>
     c96:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <distanceTimeCounter+0x1>
     c9a:	01 96       	adiw	r24, 0x01	; 1
     c9c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <distanceTimeCounter+0x1>
     ca0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <distanceTimeCounter>
     ca4:	0e 94 be 05 	call	0xb7c	; 0xb7c <updateLcd>
     ca8:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <buzzerOn>
     cac:	88 23       	and	r24, r24
     cae:	51 f0       	breq	.+20     	; 0xcc4 <__vector_11+0x5e>
     cb0:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
     cb4:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__data_end+0x1>
     cb8:	2f 5f       	subi	r18, 0xFF	; 255
     cba:	3f 4f       	sbci	r19, 0xFF	; 255
     cbc:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <__data_end+0x1>
     cc0:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
     cc4:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
     cc8:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__data_end+0x1>
     ccc:	2e 33       	cpi	r18, 0x3E	; 62
     cce:	31 05       	cpc	r19, r1
     cd0:	61 f4       	brne	.+24     	; 0xcea <__vector_11+0x84>
     cd2:	88 23       	and	r24, r24
     cd4:	51 f0       	breq	.+20     	; 0xcea <__vector_11+0x84>
     cd6:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__data_end+0x1>
     cda:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
     cde:	86 e0       	ldi	r24, 0x06	; 6
     ce0:	82 bf       	out	0x32, r24	; 50
     ce2:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <buzzerOn>
     ce6:	0e 94 5c 05 	call	0xab8	; 0xab8 <turnOffBuzzer>
     cea:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <isObjectDetected>
     cee:	88 23       	and	r24, r24
     cf0:	51 f0       	breq	.+20     	; 0xd06 <__vector_11+0xa0>
     cf2:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <trashOpentimeCounter>
     cf6:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <trashOpentimeCounter+0x1>
     cfa:	2f 5f       	subi	r18, 0xFF	; 255
     cfc:	3f 4f       	sbci	r19, 0xFF	; 255
     cfe:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <trashOpentimeCounter+0x1>
     d02:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <trashOpentimeCounter>
     d06:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <trashOpentimeCounter>
     d0a:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <trashOpentimeCounter+0x1>
     d0e:	26 33       	cpi	r18, 0x36	; 54
     d10:	31 40       	sbci	r19, 0x01	; 1
     d12:	79 f4       	brne	.+30     	; 0xd32 <__vector_11+0xcc>
     d14:	88 23       	and	r24, r24
     d16:	69 f0       	breq	.+26     	; 0xd32 <__vector_11+0xcc>
     d18:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <trashOpentimeCounter+0x1>
     d1c:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <trashOpentimeCounter>
     d20:	86 e0       	ldi	r24, 0x06	; 6
     d22:	82 bf       	out	0x32, r24	; 50
     d24:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <isObjectDetected>
     d28:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <isTrashOpen>
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <isMotorWorking>
     d32:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <distanceTimeCounter>
     d36:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <distanceTimeCounter+0x1>
     d3a:	40 97       	sbiw	r24, 0x10	; 16
     d3c:	71 f4       	brne	.+28     	; 0xd5a <__vector_11+0xf4>
     d3e:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <isInAutomaticMode>
     d42:	88 23       	and	r24, r24
     d44:	19 f0       	breq	.+6      	; 0xd4c <__vector_11+0xe6>
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <measurementFlag>
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <isUpdateTemp>
     d52:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <distanceTimeCounter+0x1>
     d56:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <distanceTimeCounter>
     d5a:	ff 91       	pop	r31
     d5c:	ef 91       	pop	r30
     d5e:	bf 91       	pop	r27
     d60:	af 91       	pop	r26
     d62:	9f 91       	pop	r25
     d64:	8f 91       	pop	r24
     d66:	7f 91       	pop	r23
     d68:	6f 91       	pop	r22
     d6a:	5f 91       	pop	r21
     d6c:	4f 91       	pop	r20
     d6e:	3f 91       	pop	r19
     d70:	2f 91       	pop	r18
     d72:	0f 90       	pop	r0
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	0f 90       	pop	r0
     d78:	1f 90       	pop	r1
     d7a:	18 95       	reti

00000d7c <buttonInit>:
void buttonInit(){
	PORTD |= (1 << PD6);// Pull up button
     d7c:	82 b3       	in	r24, 0x12	; 18
     d7e:	80 64       	ori	r24, 0x40	; 64
     d80:	82 bb       	out	0x12, r24	; 18
	GICR |= (1 << INT0);// Enable Button interrupt 0
     d82:	8b b7       	in	r24, 0x3b	; 59
     d84:	80 64       	ori	r24, 0x40	; 64
     d86:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1 << ISC01);	// Set falling edge interrupt
     d88:	85 b7       	in	r24, 0x35	; 53
     d8a:	82 60       	ori	r24, 0x02	; 2
     d8c:	85 bf       	out	0x35, r24	; 53
     d8e:	08 95       	ret

00000d90 <init>:
}
void init(){
	ADC_Init();
     d90:	0e 94 78 05 	call	0xaf0	; 0xaf0 <ADC_Init>
	initClock();
     d94:	0e 94 38 05 	call	0xa70	; 0xa70 <initClock>
	sensorInit();
     d98:	0e 94 74 05 	call	0xae8	; 0xae8 <sensorInit>
	DDRA |= (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);// motor init
     d9c:	8a b3       	in	r24, 0x1a	; 26
     d9e:	8e 61       	ori	r24, 0x1E	; 30
     da0:	8a bb       	out	0x1a, r24	; 26
	i2c_master_init(I2C_SCL_FREQUENCY_400);
     da2:	60 e8       	ldi	r22, 0x80	; 128
     da4:	7a e1       	ldi	r23, 0x1A	; 26
     da6:	86 e0       	ldi	r24, 0x06	; 6
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <i2c_master_init>
	lcd1 = lq_init(0x27, 16, 2, LCD_5x8DOTS);
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	42 e0       	ldi	r20, 0x02	; 2
     db2:	60 e1       	ldi	r22, 0x10	; 16
     db4:	87 e2       	ldi	r24, 0x27	; 39
     db6:	0e 94 01 04 	call	0x802	; 0x802 <lq_init>
     dba:	20 93 45 01 	sts	0x0145, r18	; 0x800145 <lcd1>
     dbe:	30 93 46 01 	sts	0x0146, r19	; 0x800146 <lcd1+0x1>
     dc2:	40 93 47 01 	sts	0x0147, r20	; 0x800147 <lcd1+0x2>
     dc6:	50 93 48 01 	sts	0x0148, r21	; 0x800148 <lcd1+0x3>
     dca:	60 93 49 01 	sts	0x0149, r22	; 0x800149 <lcd1+0x4>
     dce:	70 93 4a 01 	sts	0x014A, r23	; 0x80014a <lcd1+0x5>
     dd2:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <lcd1+0x6>
	cli(); // Disable interrupts during timer setup
     dd6:	f8 94       	cli
	initBuzzer();
     dd8:	0e 94 55 05 	call	0xaaa	; 0xaaa <initBuzzer>
	setupAlarm();
     ddc:	0e 94 60 05 	call	0xac0	; 0xac0 <setupAlarm>
	buttonInit();
     de0:	0e 94 be 06 	call	0xd7c	; 0xd7c <buttonInit>
	TIMSK |= (1 << TOIE0);
     de4:	89 b7       	in	r24, 0x39	; 57
     de6:	81 60       	ori	r24, 0x01	; 1
     de8:	89 bf       	out	0x39, r24	; 57
	TCNT0 = 5; // Timer start
     dea:	85 e0       	ldi	r24, 0x05	; 5
     dec:	82 bf       	out	0x32, r24	; 50
	TCCR0 = (1 << CS02) | (1 << CS00); // 101: Prescaler = 1024
     dee:	83 bf       	out	0x33, r24	; 51
	//Timer Clock Frequency = System Clock Frequency / Prescaler Division Factor = 8,000,000 / 1024 ? 7812.5 Hz
	//Timer Duration = Number of Timer Counts / Timer Clock Frequency = 252 / 7812.5 ? 0.032256 seconds (32.256 ms)
	serial_init();
     df0:	0e 94 f7 07 	call	0xfee	; 0xfee <serial_init>
	sei(); // Enable interrupts after timer setup
     df4:	78 94       	sei
     df6:	08 95       	ret

00000df8 <setTimeFromReceivedString>:
}

void setTimeFromReceivedString(const char* str) {
     df8:	cf 93       	push	r28
     dfa:	df 93       	push	r29
     dfc:	cd b7       	in	r28, 0x3d	; 61
     dfe:	de b7       	in	r29, 0x3e	; 62
     e00:	a3 97       	sbiw	r28, 0x23	; 35
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	f8 94       	cli
     e06:	de bf       	out	0x3e, r29	; 62
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	cd bf       	out	0x3d, r28	; 61
	char formatString[] = "set time %d:%d:%d %d/%d/%d";
     e0c:	4b e1       	ldi	r20, 0x1B	; 27
     e0e:	ea ec       	ldi	r30, 0xCA	; 202
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	9e 01       	movw	r18, r28
     e14:	2f 5f       	subi	r18, 0xFF	; 255
     e16:	3f 4f       	sbci	r19, 0xFF	; 255
     e18:	d9 01       	movw	r26, r18
     e1a:	01 90       	ld	r0, Z+
     e1c:	0d 92       	st	X+, r0
     e1e:	4a 95       	dec	r20
     e20:	e1 f7       	brne	.-8      	; 0xe1a <setTimeFromReceivedString+0x22>
	DateTime_t t1 ;
	sscanf(str, formatString, &t1.Hour, &t1.Minute, &t1.Second, &t1.Month, &t1.Date, &t1.Year);
     e22:	ae 01       	movw	r20, r28
     e24:	44 5e       	subi	r20, 0xE4	; 228
     e26:	5f 4f       	sbci	r21, 0xFF	; 255
     e28:	be 01       	movw	r22, r28
     e2a:	6e 5d       	subi	r22, 0xDE	; 222
     e2c:	7f 4f       	sbci	r23, 0xFF	; 255
     e2e:	7f 93       	push	r23
     e30:	6f 93       	push	r22
     e32:	62 50       	subi	r22, 0x02	; 2
     e34:	71 09       	sbc	r23, r1
     e36:	7f 93       	push	r23
     e38:	6f 93       	push	r22
     e3a:	6f 5f       	subi	r22, 0xFF	; 255
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	7f 93       	push	r23
     e40:	6f 93       	push	r22
     e42:	5f 93       	push	r21
     e44:	4f 93       	push	r20
     e46:	4f 5f       	subi	r20, 0xFF	; 255
     e48:	5f 4f       	sbci	r21, 0xFF	; 255
     e4a:	5f 93       	push	r21
     e4c:	4f 93       	push	r20
     e4e:	4f 5f       	subi	r20, 0xFF	; 255
     e50:	5f 4f       	sbci	r21, 0xFF	; 255
     e52:	5f 93       	push	r21
     e54:	4f 93       	push	r20
     e56:	3f 93       	push	r19
     e58:	2f 93       	push	r18
     e5a:	9f 93       	push	r25
     e5c:	8f 93       	push	r24
     e5e:	0e 94 b6 09 	call	0x136c	; 0x136c <sscanf>
	RTC_Set(t1);
     e62:	2c 8d       	ldd	r18, Y+28	; 0x1c
     e64:	3d 8d       	ldd	r19, Y+29	; 0x1d
     e66:	4e 8d       	ldd	r20, Y+30	; 0x1e
     e68:	5f 8d       	ldd	r21, Y+31	; 0x1f
     e6a:	68 a1       	ldd	r22, Y+32	; 0x20
     e6c:	79 a1       	ldd	r23, Y+33	; 0x21
     e6e:	8a a1       	ldd	r24, Y+34	; 0x22
     e70:	9b a1       	ldd	r25, Y+35	; 0x23
     e72:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
}
     e76:	0f b6       	in	r0, 0x3f	; 63
     e78:	f8 94       	cli
     e7a:	de bf       	out	0x3e, r29	; 62
     e7c:	0f be       	out	0x3f, r0	; 63
     e7e:	cd bf       	out	0x3d, r28	; 61
     e80:	a3 96       	adiw	r28, 0x23	; 35
     e82:	0f b6       	in	r0, 0x3f	; 63
     e84:	f8 94       	cli
     e86:	de bf       	out	0x3e, r29	; 62
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	cd bf       	out	0x3d, r28	; 61
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	08 95       	ret

00000e92 <processCommand>:
	}
}
//============================
//comand mamager

int processCommand(char* str) {
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
     e96:	ec 01       	movw	r28, r24
	if (strstr(str, setTimeCommand) != NULL) {
     e98:	6c e6       	ldi	r22, 0x6C	; 108
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <strstr>
     ea0:	89 2b       	or	r24, r25
     ea2:	19 f0       	breq	.+6      	; 0xeaa <processCommand+0x18>
		setTimeFromReceivedString(str);
     ea4:	ce 01       	movw	r24, r28
     ea6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <setTimeFromReceivedString>
	}
	if (strstr(str, openTrashCommand) != NULL) {
     eaa:	61 e6       	ldi	r22, 0x61	; 97
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	ce 01       	movw	r24, r28
     eb0:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <strstr>
     eb4:	89 2b       	or	r24, r25
     eb6:	49 f0       	breq	.+18     	; 0xeca <processCommand+0x38>
		serial_send_string("open command");
     eb8:	85 ee       	ldi	r24, 0xE5	; 229
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
		isMotorWorking=true;
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <isMotorWorking>
		isTrashOpen=true;
     ec6:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <isTrashOpen>

	}
	if (strstr(str, closeTrashCommand) != NULL) {
     eca:	66 e6       	ldi	r22, 0x66	; 102
     ecc:	70 e0       	ldi	r23, 0x00	; 0
     ece:	ce 01       	movw	r24, r28
     ed0:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <strstr>
     ed4:	89 2b       	or	r24, r25
     ed6:	49 f0       	breq	.+18     	; 0xeea <processCommand+0x58>
		serial_send_string("close command");
     ed8:	82 ef       	ldi	r24, 0xF2	; 242
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
		isMotorWorking=true;
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <isMotorWorking>
		isTrashOpen=false;
     ee6:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <isTrashOpen>
	}
	return 0;
}
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	df 91       	pop	r29
     ef0:	cf 91       	pop	r28
     ef2:	08 95       	ret

00000ef4 <__vector_13>:
void updateLcd();
void setTimeFromReceivedString(const char* str);
//============================
//intrupts
#if SERIAL_INTERRUPT == 1
ISR(USART_RXC_vect) {
     ef4:	1f 92       	push	r1
     ef6:	0f 92       	push	r0
     ef8:	0f b6       	in	r0, 0x3f	; 63
     efa:	0f 92       	push	r0
     efc:	11 24       	eor	r1, r1
     efe:	2f 93       	push	r18
     f00:	3f 93       	push	r19
     f02:	4f 93       	push	r20
     f04:	5f 93       	push	r21
     f06:	6f 93       	push	r22
     f08:	7f 93       	push	r23
     f0a:	8f 93       	push	r24
     f0c:	9f 93       	push	r25
     f0e:	af 93       	push	r26
     f10:	bf 93       	push	r27
     f12:	ef 93       	push	r30
     f14:	ff 93       	push	r31
	char c = UDR;
     f16:	8c b1       	in	r24, 0x0c	; 12
	UDR = c;	// Save the received character
     f18:	8c b9       	out	0x0c, r24	; 12
	receivedString[counter] = c;
     f1a:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <counter>
     f1e:	ae 2f       	mov	r26, r30
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	a4 5b       	subi	r26, 0xB4	; 180
     f24:	be 4f       	sbci	r27, 0xFE	; 254
     f26:	8c 93       	st	X, r24
	counter++;
     f28:	ef 5f       	subi	r30, 0xFF	; 255
     f2a:	e0 93 2b 01 	sts	0x012B, r30	; 0x80012b <counter>
	if (c == '\r') { // If user has pressed ENTER (in Proteus)
     f2e:	8d 30       	cpi	r24, 0x0D	; 13
     f30:	a9 f4       	brne	.+42     	; 0xf5c <__vector_13+0x68>
		receivedString[counter] = '\0'; // Null-terminate the string
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	e4 5b       	subi	r30, 0xB4	; 180
     f36:	fe 4f       	sbci	r31, 0xFE	; 254
     f38:	10 82       	st	Z, r1
		serial_send_string(receivedString);
     f3a:	8c e4       	ldi	r24, 0x4C	; 76
     f3c:	91 e0       	ldi	r25, 0x01	; 1
     f3e:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
		processCommand(receivedString);
     f42:	8c e4       	ldi	r24, 0x4C	; 76
     f44:	91 e0       	ldi	r25, 0x01	; 1
     f46:	0e 94 49 07 	call	0xe92	; 0xe92 <processCommand>
		// Reset the counter and clear the received string for the next input
		counter = 0;
     f4a:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <counter>
		memset(receivedString, 0, sizeof(receivedString));
     f4e:	88 ec       	ldi	r24, 0xC8	; 200
     f50:	ec e4       	ldi	r30, 0x4C	; 76
     f52:	f1 e0       	ldi	r31, 0x01	; 1
     f54:	df 01       	movw	r26, r30
     f56:	1d 92       	st	X+, r1
     f58:	8a 95       	dec	r24
     f5a:	e9 f7       	brne	.-6      	; 0xf56 <__vector_13+0x62>
	}
}
     f5c:	ff 91       	pop	r31
     f5e:	ef 91       	pop	r30
     f60:	bf 91       	pop	r27
     f62:	af 91       	pop	r26
     f64:	9f 91       	pop	r25
     f66:	8f 91       	pop	r24
     f68:	7f 91       	pop	r23
     f6a:	6f 91       	pop	r22
     f6c:	5f 91       	pop	r21
     f6e:	4f 91       	pop	r20
     f70:	3f 91       	pop	r19
     f72:	2f 91       	pop	r18
     f74:	0f 90       	pop	r0
     f76:	0f be       	out	0x3f, r0	; 63
     f78:	0f 90       	pop	r0
     f7a:	1f 90       	pop	r1
     f7c:	18 95       	reti

00000f7e <main>:
	RTC_Set(t1);
}

int main(void) {

	init();
     f7e:	0e 94 c8 06 	call	0xd90	; 0xd90 <init>
	serial_send_string(" Enter command: "); // Look at how \r works
     f82:	80 e0       	ldi	r24, 0x00	; 0
     f84:	91 e0       	ldi	r25, 0x01	; 1
     f86:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
	while (1) {
		//motor process
		if (isMotorWorking) {
     f8a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <isMotorWorking>
     f8e:	88 23       	and	r24, r24
     f90:	f1 f0       	breq	.+60     	; 0xfce <main+0x50>
			serial_send_string(" motor working...\r");
     f92:	81 e1       	ldi	r24, 0x11	; 17
     f94:	91 e0       	ldi	r25, 0x01	; 1
     f96:	0e 94 08 08 	call	0x1010	; 0x1010 <serial_send_string>
			if (isTrashOpen && !isTrashCompleteOpen) {
     f9a:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <isTrashOpen>
     f9e:	88 23       	and	r24, r24
     fa0:	39 f0       	breq	.+14     	; 0xfb0 <main+0x32>
     fa2:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <isTrashCompleteOpen>
     fa6:	91 11       	cpse	r25, r1
     fa8:	03 c0       	rjmp	.+6      	; 0xfb0 <main+0x32>
				openTrash();
     faa:	0e 94 ca 04 	call	0x994	; 0x994 <openTrash>
     fae:	0f c0       	rjmp	.+30     	; 0xfce <main+0x50>
				} else if (!isTrashOpen && isInAutomaticMode &&!isTrashCompleteClose) {
     fb0:	81 11       	cpse	r24, r1
     fb2:	0b c0       	rjmp	.+22     	; 0xfca <main+0x4c>
     fb4:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <isInAutomaticMode>
     fb8:	88 23       	and	r24, r24
     fba:	39 f0       	breq	.+14     	; 0xfca <main+0x4c>
     fbc:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <isTrashCompleteClose>
     fc0:	81 11       	cpse	r24, r1
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <main+0x4c>
				closeTrash();
     fc4:	0e 94 01 05 	call	0xa02	; 0xa02 <closeTrash>
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <main+0x50>
			}
			else{
				isMotorWorking=false;
     fca:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <isMotorWorking>
			}
		}

		if (measurementFlag) {
     fce:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <measurementFlag>
     fd2:	81 11       	cpse	r24, r1
//			serial_send_string(" enter sensor\r");
			measurementFlag = false;
     fd4:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <measurementFlag>
// 				} else {
// 				serial_send_string(" object not found\r");
// 				isObjectDetected = false;
// 			}
		}
		if(isUpdateTemp){
     fd8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <isUpdateTemp>
     fdc:	88 23       	and	r24, r24
     fde:	21 f0       	breq	.+8      	; 0xfe8 <main+0x6a>
			calculateTemp();
     fe0:	0e 94 84 05 	call	0xb08	; 0xb08 <calculateTemp>
			isUpdateTemp=false;
     fe4:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <isUpdateTemp>
		}
		checkAlarm();
     fe8:	0e 94 72 05 	call	0xae4	; 0xae4 <checkAlarm>
	}
     fec:	ce cf       	rjmp	.-100    	; 0xf8a <main+0xc>

00000fee <serial_init>:

#include "Serial_lib.h"

void serial_init()
{
	UCSRB = (1 << RXEN) | (1 << TXEN);
     fee:	88 e1       	ldi	r24, 0x18	; 24
     ff0:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);
     ff2:	80 b5       	in	r24, 0x20	; 32
     ff4:	86 68       	ori	r24, 0x86	; 134
     ff6:	80 bd       	out	0x20, r24	; 32
	UBRRL = (int)((F_CPU / (SERIAL_BAUD_RATE * 16)) - 1);
     ff8:	83 e3       	ldi	r24, 0x33	; 51
     ffa:	89 b9       	out	0x09, r24	; 9
	
#if SERIAL_INTERRUPT == 1
	UCSRB |= (1<<RXCIE);
     ffc:	8a b1       	in	r24, 0x0a	; 10
     ffe:	80 68       	ori	r24, 0x80	; 128
    1000:	8a b9       	out	0x0a, r24	; 10
    1002:	08 95       	ret

00001004 <serial_send_char>:
#endif
}

void serial_send_char(char c)
{
	UCSRA = 1 << TXC; // clear TXC bit
    1004:	90 e4       	ldi	r25, 0x40	; 64
    1006:	9b b9       	out	0x0b, r25	; 11
	UDR = c;
    1008:	8c b9       	out	0x0c, r24	; 12
	while ((UCSRA & (1 << TXC)) == 0);
    100a:	5e 9b       	sbis	0x0b, 6	; 11
    100c:	fe cf       	rjmp	.-4      	; 0x100a <serial_send_char+0x6>
}
    100e:	08 95       	ret

00001010 <serial_send_string>:

void serial_send_string(char *s)
{
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	ec 01       	movw	r28, r24
	while (*s != '\0')
    1016:	03 c0       	rjmp	.+6      	; 0x101e <serial_send_string+0xe>
	{
		serial_send_char(*s);
    1018:	0e 94 02 08 	call	0x1004	; 0x1004 <serial_send_char>
		s++;
    101c:	21 96       	adiw	r28, 0x01	; 1
	while ((UCSRA & (1 << TXC)) == 0);
}

void serial_send_string(char *s)
{
	while (*s != '\0')
    101e:	88 81       	ld	r24, Y
    1020:	81 11       	cpse	r24, r1
    1022:	fa cf       	rjmp	.-12     	; 0x1018 <serial_send_string+0x8>
	{
		serial_send_char(*s);
		s++;
	}
}
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	08 95       	ret

0000102a <TWI_Status>:
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
    102a:	81 b1       	in	r24, 0x01	; 1
}
    102c:	88 7f       	andi	r24, 0xF8	; 248
    102e:	08 95       	ret

00001030 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    1030:	84 ea       	ldi	r24, 0xA4	; 164
    1032:	86 bf       	out	0x36, r24	; 54

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
    1034:	06 b6       	in	r0, 0x36	; 54
    1036:	07 fe       	sbrs	r0, 7
    1038:	fd cf       	rjmp	.-6      	; 0x1034 <TWI_BeginTransmission+0x4>

	//Return status register
	return (TWI_Status());
    103a:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
}
    103e:	08 95       	ret

00001040 <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
    1040:	85 ed       	ldi	r24, 0xD5	; 213
    1042:	86 bf       	out	0x36, r24	; 54

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
    1044:	06 b6       	in	r0, 0x36	; 54
    1046:	04 fc       	sbrc	r0, 4
    1048:	fd cf       	rjmp	.-6      	; 0x1044 <TWI_EndTransmission+0x4>
}
    104a:	08 95       	ret

0000104c <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
    104c:	83 b9       	out	0x03, r24	; 3

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
    104e:	84 e8       	ldi	r24, 0x84	; 132
    1050:	86 bf       	out	0x36, r24	; 54

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
    1052:	06 b6       	in	r0, 0x36	; 54
    1054:	07 fe       	sbrs	r0, 7
    1056:	fd cf       	rjmp	.-6      	; 0x1052 <TWI_Transmit+0x6>

	//Return status register
	return (TWI_Status());
    1058:	0e 94 15 08 	call	0x102a	; 0x102a <TWI_Status>
}
    105c:	08 95       	ret

0000105e <TWI_ReceiveACK>:

//Wait until ACK received. 
uint8_t TWI_ReceiveACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
    105e:	84 ec       	ldi	r24, 0xC4	; 196
    1060:	86 bf       	out	0x36, r24	; 54
	
	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1062:	06 b6       	in	r0, 0x36	; 54
    1064:	07 fe       	sbrs	r0, 7
    1066:	fd cf       	rjmp	.-6      	; 0x1062 <TWI_ReceiveACK+0x4>

	//Return received data
	return TWDR;
    1068:	83 b1       	in	r24, 0x03	; 3
}
    106a:	08 95       	ret

0000106c <TWI_ReceiveNACK>:

//Wait until NACK received. 
uint8_t TWI_ReceiveNACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    106c:	84 e8       	ldi	r24, 0x84	; 132
    106e:	86 bf       	out	0x36, r24	; 54

	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1070:	06 b6       	in	r0, 0x36	; 54
    1072:	07 fe       	sbrs	r0, 7
    1074:	fd cf       	rjmp	.-6      	; 0x1070 <TWI_ReceiveNACK+0x4>

	//Return received data
	return TWDR;
    1076:	83 b1       	in	r24, 0x03	; 3
}
    1078:	08 95       	ret

0000107a <__floatunsisf>:
    107a:	e8 94       	clt
    107c:	09 c0       	rjmp	.+18     	; 0x1090 <__floatsisf+0x12>

0000107e <__floatsisf>:
    107e:	97 fb       	bst	r25, 7
    1080:	3e f4       	brtc	.+14     	; 0x1090 <__floatsisf+0x12>
    1082:	90 95       	com	r25
    1084:	80 95       	com	r24
    1086:	70 95       	com	r23
    1088:	61 95       	neg	r22
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	99 23       	and	r25, r25
    1092:	a9 f0       	breq	.+42     	; 0x10be <__floatsisf+0x40>
    1094:	f9 2f       	mov	r31, r25
    1096:	96 e9       	ldi	r25, 0x96	; 150
    1098:	bb 27       	eor	r27, r27
    109a:	93 95       	inc	r25
    109c:	f6 95       	lsr	r31
    109e:	87 95       	ror	r24
    10a0:	77 95       	ror	r23
    10a2:	67 95       	ror	r22
    10a4:	b7 95       	ror	r27
    10a6:	f1 11       	cpse	r31, r1
    10a8:	f8 cf       	rjmp	.-16     	; 0x109a <__floatsisf+0x1c>
    10aa:	fa f4       	brpl	.+62     	; 0x10ea <__floatsisf+0x6c>
    10ac:	bb 0f       	add	r27, r27
    10ae:	11 f4       	brne	.+4      	; 0x10b4 <__floatsisf+0x36>
    10b0:	60 ff       	sbrs	r22, 0
    10b2:	1b c0       	rjmp	.+54     	; 0x10ea <__floatsisf+0x6c>
    10b4:	6f 5f       	subi	r22, 0xFF	; 255
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ba:	9f 4f       	sbci	r25, 0xFF	; 255
    10bc:	16 c0       	rjmp	.+44     	; 0x10ea <__floatsisf+0x6c>
    10be:	88 23       	and	r24, r24
    10c0:	11 f0       	breq	.+4      	; 0x10c6 <__floatsisf+0x48>
    10c2:	96 e9       	ldi	r25, 0x96	; 150
    10c4:	11 c0       	rjmp	.+34     	; 0x10e8 <__floatsisf+0x6a>
    10c6:	77 23       	and	r23, r23
    10c8:	21 f0       	breq	.+8      	; 0x10d2 <__floatsisf+0x54>
    10ca:	9e e8       	ldi	r25, 0x8E	; 142
    10cc:	87 2f       	mov	r24, r23
    10ce:	76 2f       	mov	r23, r22
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <__floatsisf+0x5e>
    10d2:	66 23       	and	r22, r22
    10d4:	71 f0       	breq	.+28     	; 0x10f2 <__floatsisf+0x74>
    10d6:	96 e8       	ldi	r25, 0x86	; 134
    10d8:	86 2f       	mov	r24, r22
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	60 e0       	ldi	r22, 0x00	; 0
    10de:	2a f0       	brmi	.+10     	; 0x10ea <__floatsisf+0x6c>
    10e0:	9a 95       	dec	r25
    10e2:	66 0f       	add	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	88 1f       	adc	r24, r24
    10e8:	da f7       	brpl	.-10     	; 0x10e0 <__floatsisf+0x62>
    10ea:	88 0f       	add	r24, r24
    10ec:	96 95       	lsr	r25
    10ee:	87 95       	ror	r24
    10f0:	97 f9       	bld	r25, 7
    10f2:	08 95       	ret

000010f4 <__mulsf3>:
    10f4:	0e 94 8d 08 	call	0x111a	; 0x111a <__mulsf3x>
    10f8:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_round>
    10fc:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__fp_pscA>
    1100:	38 f0       	brcs	.+14     	; 0x1110 <__mulsf3+0x1c>
    1102:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__fp_pscB>
    1106:	20 f0       	brcs	.+8      	; 0x1110 <__mulsf3+0x1c>
    1108:	95 23       	and	r25, r21
    110a:	11 f0       	breq	.+4      	; 0x1110 <__mulsf3+0x1c>
    110c:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__fp_inf>
    1110:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_nan>
    1114:	11 24       	eor	r1, r1
    1116:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__fp_szero>

0000111a <__mulsf3x>:
    111a:	0e 94 0f 09 	call	0x121e	; 0x121e <__fp_split3>
    111e:	70 f3       	brcs	.-36     	; 0x10fc <__mulsf3+0x8>

00001120 <__mulsf3_pse>:
    1120:	95 9f       	mul	r25, r21
    1122:	c1 f3       	breq	.-16     	; 0x1114 <__mulsf3+0x20>
    1124:	95 0f       	add	r25, r21
    1126:	50 e0       	ldi	r21, 0x00	; 0
    1128:	55 1f       	adc	r21, r21
    112a:	62 9f       	mul	r22, r18
    112c:	f0 01       	movw	r30, r0
    112e:	72 9f       	mul	r23, r18
    1130:	bb 27       	eor	r27, r27
    1132:	f0 0d       	add	r31, r0
    1134:	b1 1d       	adc	r27, r1
    1136:	63 9f       	mul	r22, r19
    1138:	aa 27       	eor	r26, r26
    113a:	f0 0d       	add	r31, r0
    113c:	b1 1d       	adc	r27, r1
    113e:	aa 1f       	adc	r26, r26
    1140:	64 9f       	mul	r22, r20
    1142:	66 27       	eor	r22, r22
    1144:	b0 0d       	add	r27, r0
    1146:	a1 1d       	adc	r26, r1
    1148:	66 1f       	adc	r22, r22
    114a:	82 9f       	mul	r24, r18
    114c:	22 27       	eor	r18, r18
    114e:	b0 0d       	add	r27, r0
    1150:	a1 1d       	adc	r26, r1
    1152:	62 1f       	adc	r22, r18
    1154:	73 9f       	mul	r23, r19
    1156:	b0 0d       	add	r27, r0
    1158:	a1 1d       	adc	r26, r1
    115a:	62 1f       	adc	r22, r18
    115c:	83 9f       	mul	r24, r19
    115e:	a0 0d       	add	r26, r0
    1160:	61 1d       	adc	r22, r1
    1162:	22 1f       	adc	r18, r18
    1164:	74 9f       	mul	r23, r20
    1166:	33 27       	eor	r19, r19
    1168:	a0 0d       	add	r26, r0
    116a:	61 1d       	adc	r22, r1
    116c:	23 1f       	adc	r18, r19
    116e:	84 9f       	mul	r24, r20
    1170:	60 0d       	add	r22, r0
    1172:	21 1d       	adc	r18, r1
    1174:	82 2f       	mov	r24, r18
    1176:	76 2f       	mov	r23, r22
    1178:	6a 2f       	mov	r22, r26
    117a:	11 24       	eor	r1, r1
    117c:	9f 57       	subi	r25, 0x7F	; 127
    117e:	50 40       	sbci	r21, 0x00	; 0
    1180:	9a f0       	brmi	.+38     	; 0x11a8 <__mulsf3_pse+0x88>
    1182:	f1 f0       	breq	.+60     	; 0x11c0 <__mulsf3_pse+0xa0>
    1184:	88 23       	and	r24, r24
    1186:	4a f0       	brmi	.+18     	; 0x119a <__mulsf3_pse+0x7a>
    1188:	ee 0f       	add	r30, r30
    118a:	ff 1f       	adc	r31, r31
    118c:	bb 1f       	adc	r27, r27
    118e:	66 1f       	adc	r22, r22
    1190:	77 1f       	adc	r23, r23
    1192:	88 1f       	adc	r24, r24
    1194:	91 50       	subi	r25, 0x01	; 1
    1196:	50 40       	sbci	r21, 0x00	; 0
    1198:	a9 f7       	brne	.-22     	; 0x1184 <__mulsf3_pse+0x64>
    119a:	9e 3f       	cpi	r25, 0xFE	; 254
    119c:	51 05       	cpc	r21, r1
    119e:	80 f0       	brcs	.+32     	; 0x11c0 <__mulsf3_pse+0xa0>
    11a0:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__fp_inf>
    11a4:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__fp_szero>
    11a8:	5f 3f       	cpi	r21, 0xFF	; 255
    11aa:	e4 f3       	brlt	.-8      	; 0x11a4 <__mulsf3_pse+0x84>
    11ac:	98 3e       	cpi	r25, 0xE8	; 232
    11ae:	d4 f3       	brlt	.-12     	; 0x11a4 <__mulsf3_pse+0x84>
    11b0:	86 95       	lsr	r24
    11b2:	77 95       	ror	r23
    11b4:	67 95       	ror	r22
    11b6:	b7 95       	ror	r27
    11b8:	f7 95       	ror	r31
    11ba:	e7 95       	ror	r30
    11bc:	9f 5f       	subi	r25, 0xFF	; 255
    11be:	c1 f7       	brne	.-16     	; 0x11b0 <__mulsf3_pse+0x90>
    11c0:	fe 2b       	or	r31, r30
    11c2:	88 0f       	add	r24, r24
    11c4:	91 1d       	adc	r25, r1
    11c6:	96 95       	lsr	r25
    11c8:	87 95       	ror	r24
    11ca:	97 f9       	bld	r25, 7
    11cc:	08 95       	ret

000011ce <__fp_inf>:
    11ce:	97 f9       	bld	r25, 7
    11d0:	9f 67       	ori	r25, 0x7F	; 127
    11d2:	80 e8       	ldi	r24, 0x80	; 128
    11d4:	70 e0       	ldi	r23, 0x00	; 0
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	08 95       	ret

000011da <__fp_nan>:
    11da:	9f ef       	ldi	r25, 0xFF	; 255
    11dc:	80 ec       	ldi	r24, 0xC0	; 192
    11de:	08 95       	ret

000011e0 <__fp_pscA>:
    11e0:	00 24       	eor	r0, r0
    11e2:	0a 94       	dec	r0
    11e4:	16 16       	cp	r1, r22
    11e6:	17 06       	cpc	r1, r23
    11e8:	18 06       	cpc	r1, r24
    11ea:	09 06       	cpc	r0, r25
    11ec:	08 95       	ret

000011ee <__fp_pscB>:
    11ee:	00 24       	eor	r0, r0
    11f0:	0a 94       	dec	r0
    11f2:	12 16       	cp	r1, r18
    11f4:	13 06       	cpc	r1, r19
    11f6:	14 06       	cpc	r1, r20
    11f8:	05 06       	cpc	r0, r21
    11fa:	08 95       	ret

000011fc <__fp_round>:
    11fc:	09 2e       	mov	r0, r25
    11fe:	03 94       	inc	r0
    1200:	00 0c       	add	r0, r0
    1202:	11 f4       	brne	.+4      	; 0x1208 <__fp_round+0xc>
    1204:	88 23       	and	r24, r24
    1206:	52 f0       	brmi	.+20     	; 0x121c <__fp_round+0x20>
    1208:	bb 0f       	add	r27, r27
    120a:	40 f4       	brcc	.+16     	; 0x121c <__fp_round+0x20>
    120c:	bf 2b       	or	r27, r31
    120e:	11 f4       	brne	.+4      	; 0x1214 <__fp_round+0x18>
    1210:	60 ff       	sbrs	r22, 0
    1212:	04 c0       	rjmp	.+8      	; 0x121c <__fp_round+0x20>
    1214:	6f 5f       	subi	r22, 0xFF	; 255
    1216:	7f 4f       	sbci	r23, 0xFF	; 255
    1218:	8f 4f       	sbci	r24, 0xFF	; 255
    121a:	9f 4f       	sbci	r25, 0xFF	; 255
    121c:	08 95       	ret

0000121e <__fp_split3>:
    121e:	57 fd       	sbrc	r21, 7
    1220:	90 58       	subi	r25, 0x80	; 128
    1222:	44 0f       	add	r20, r20
    1224:	55 1f       	adc	r21, r21
    1226:	59 f0       	breq	.+22     	; 0x123e <__fp_splitA+0x10>
    1228:	5f 3f       	cpi	r21, 0xFF	; 255
    122a:	71 f0       	breq	.+28     	; 0x1248 <__fp_splitA+0x1a>
    122c:	47 95       	ror	r20

0000122e <__fp_splitA>:
    122e:	88 0f       	add	r24, r24
    1230:	97 fb       	bst	r25, 7
    1232:	99 1f       	adc	r25, r25
    1234:	61 f0       	breq	.+24     	; 0x124e <__fp_splitA+0x20>
    1236:	9f 3f       	cpi	r25, 0xFF	; 255
    1238:	79 f0       	breq	.+30     	; 0x1258 <__fp_splitA+0x2a>
    123a:	87 95       	ror	r24
    123c:	08 95       	ret
    123e:	12 16       	cp	r1, r18
    1240:	13 06       	cpc	r1, r19
    1242:	14 06       	cpc	r1, r20
    1244:	55 1f       	adc	r21, r21
    1246:	f2 cf       	rjmp	.-28     	; 0x122c <__fp_split3+0xe>
    1248:	46 95       	lsr	r20
    124a:	f1 df       	rcall	.-30     	; 0x122e <__fp_splitA>
    124c:	08 c0       	rjmp	.+16     	; 0x125e <__fp_splitA+0x30>
    124e:	16 16       	cp	r1, r22
    1250:	17 06       	cpc	r1, r23
    1252:	18 06       	cpc	r1, r24
    1254:	99 1f       	adc	r25, r25
    1256:	f1 cf       	rjmp	.-30     	; 0x123a <__fp_splitA+0xc>
    1258:	86 95       	lsr	r24
    125a:	71 05       	cpc	r23, r1
    125c:	61 05       	cpc	r22, r1
    125e:	08 94       	sec
    1260:	08 95       	ret

00001262 <__fp_zero>:
    1262:	e8 94       	clt

00001264 <__fp_szero>:
    1264:	bb 27       	eor	r27, r27
    1266:	66 27       	eor	r22, r22
    1268:	77 27       	eor	r23, r23
    126a:	cb 01       	movw	r24, r22
    126c:	97 f9       	bld	r25, 7
    126e:	08 95       	ret

00001270 <__udivmodsi4>:
    1270:	a1 e2       	ldi	r26, 0x21	; 33
    1272:	1a 2e       	mov	r1, r26
    1274:	aa 1b       	sub	r26, r26
    1276:	bb 1b       	sub	r27, r27
    1278:	fd 01       	movw	r30, r26
    127a:	0d c0       	rjmp	.+26     	; 0x1296 <__udivmodsi4_ep>

0000127c <__udivmodsi4_loop>:
    127c:	aa 1f       	adc	r26, r26
    127e:	bb 1f       	adc	r27, r27
    1280:	ee 1f       	adc	r30, r30
    1282:	ff 1f       	adc	r31, r31
    1284:	a2 17       	cp	r26, r18
    1286:	b3 07       	cpc	r27, r19
    1288:	e4 07       	cpc	r30, r20
    128a:	f5 07       	cpc	r31, r21
    128c:	20 f0       	brcs	.+8      	; 0x1296 <__udivmodsi4_ep>
    128e:	a2 1b       	sub	r26, r18
    1290:	b3 0b       	sbc	r27, r19
    1292:	e4 0b       	sbc	r30, r20
    1294:	f5 0b       	sbc	r31, r21

00001296 <__udivmodsi4_ep>:
    1296:	66 1f       	adc	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	99 1f       	adc	r25, r25
    129e:	1a 94       	dec	r1
    12a0:	69 f7       	brne	.-38     	; 0x127c <__udivmodsi4_loop>
    12a2:	60 95       	com	r22
    12a4:	70 95       	com	r23
    12a6:	80 95       	com	r24
    12a8:	90 95       	com	r25
    12aa:	9b 01       	movw	r18, r22
    12ac:	ac 01       	movw	r20, r24
    12ae:	bd 01       	movw	r22, r26
    12b0:	cf 01       	movw	r24, r30
    12b2:	08 95       	ret

000012b4 <dtostrf>:
    12b4:	ef 92       	push	r14
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	e8 01       	movw	r28, r16
    12c0:	47 fd       	sbrc	r20, 7
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <dtostrf+0x14>
    12c4:	34 e0       	ldi	r19, 0x04	; 4
    12c6:	01 c0       	rjmp	.+2      	; 0x12ca <dtostrf+0x16>
    12c8:	34 e1       	ldi	r19, 0x14	; 20
    12ca:	04 2e       	mov	r0, r20
    12cc:	00 0c       	add	r0, r0
    12ce:	55 0b       	sbc	r21, r21
    12d0:	57 ff       	sbrs	r21, 7
    12d2:	03 c0       	rjmp	.+6      	; 0x12da <dtostrf+0x26>
    12d4:	51 95       	neg	r21
    12d6:	41 95       	neg	r20
    12d8:	51 09       	sbc	r21, r1
    12da:	e3 2e       	mov	r14, r19
    12dc:	02 2f       	mov	r16, r18
    12de:	24 2f       	mov	r18, r20
    12e0:	ae 01       	movw	r20, r28
    12e2:	0e 94 5d 0e 	call	0x1cba	; 0x1cba <dtoa_prf>
    12e6:	ce 01       	movw	r24, r28
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	1f 91       	pop	r17
    12ee:	0f 91       	pop	r16
    12f0:	ef 90       	pop	r14
    12f2:	08 95       	ret

000012f4 <strstr>:
    12f4:	fb 01       	movw	r30, r22
    12f6:	51 91       	ld	r21, Z+
    12f8:	55 23       	and	r21, r21
    12fa:	a9 f0       	breq	.+42     	; 0x1326 <strstr+0x32>
    12fc:	bf 01       	movw	r22, r30
    12fe:	dc 01       	movw	r26, r24
    1300:	4d 91       	ld	r20, X+
    1302:	45 17       	cp	r20, r21
    1304:	41 11       	cpse	r20, r1
    1306:	e1 f7       	brne	.-8      	; 0x1300 <strstr+0xc>
    1308:	59 f4       	brne	.+22     	; 0x1320 <strstr+0x2c>
    130a:	cd 01       	movw	r24, r26
    130c:	01 90       	ld	r0, Z+
    130e:	00 20       	and	r0, r0
    1310:	49 f0       	breq	.+18     	; 0x1324 <strstr+0x30>
    1312:	4d 91       	ld	r20, X+
    1314:	40 15       	cp	r20, r0
    1316:	41 11       	cpse	r20, r1
    1318:	c9 f3       	breq	.-14     	; 0x130c <strstr+0x18>
    131a:	fb 01       	movw	r30, r22
    131c:	41 11       	cpse	r20, r1
    131e:	ef cf       	rjmp	.-34     	; 0x12fe <strstr+0xa>
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	01 97       	sbiw	r24, 0x01	; 1
    1326:	08 95       	ret

00001328 <sprintf>:
    1328:	ae e0       	ldi	r26, 0x0E	; 14
    132a:	b0 e0       	ldi	r27, 0x00	; 0
    132c:	ea e9       	ldi	r30, 0x9A	; 154
    132e:	f9 e0       	ldi	r31, 0x09	; 9
    1330:	0c 94 bb 11 	jmp	0x2376	; 0x2376 <__prologue_saves__+0x1c>
    1334:	0d 89       	ldd	r16, Y+21	; 0x15
    1336:	1e 89       	ldd	r17, Y+22	; 0x16
    1338:	86 e0       	ldi	r24, 0x06	; 6
    133a:	8c 83       	std	Y+4, r24	; 0x04
    133c:	1a 83       	std	Y+2, r17	; 0x02
    133e:	09 83       	std	Y+1, r16	; 0x01
    1340:	8f ef       	ldi	r24, 0xFF	; 255
    1342:	9f e7       	ldi	r25, 0x7F	; 127
    1344:	9e 83       	std	Y+6, r25	; 0x06
    1346:	8d 83       	std	Y+5, r24	; 0x05
    1348:	ae 01       	movw	r20, r28
    134a:	47 5e       	subi	r20, 0xE7	; 231
    134c:	5f 4f       	sbci	r21, 0xFF	; 255
    134e:	6f 89       	ldd	r22, Y+23	; 0x17
    1350:	78 8d       	ldd	r23, Y+24	; 0x18
    1352:	ce 01       	movw	r24, r28
    1354:	01 96       	adiw	r24, 0x01	; 1
    1356:	0e 94 cf 09 	call	0x139e	; 0x139e <vfprintf>
    135a:	ef 81       	ldd	r30, Y+7	; 0x07
    135c:	f8 85       	ldd	r31, Y+8	; 0x08
    135e:	e0 0f       	add	r30, r16
    1360:	f1 1f       	adc	r31, r17
    1362:	10 82       	st	Z, r1
    1364:	2e 96       	adiw	r28, 0x0e	; 14
    1366:	e4 e0       	ldi	r30, 0x04	; 4
    1368:	0c 94 d7 11 	jmp	0x23ae	; 0x23ae <__epilogue_restores__+0x1c>

0000136c <sscanf>:
    136c:	ae e0       	ldi	r26, 0x0E	; 14
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	ec eb       	ldi	r30, 0xBC	; 188
    1372:	f9 e0       	ldi	r31, 0x09	; 9
    1374:	0c 94 bd 11 	jmp	0x237a	; 0x237a <__prologue_saves__+0x20>
    1378:	85 e0       	ldi	r24, 0x05	; 5
    137a:	8c 83       	std	Y+4, r24	; 0x04
    137c:	8b 89       	ldd	r24, Y+19	; 0x13
    137e:	9c 89       	ldd	r25, Y+20	; 0x14
    1380:	9a 83       	std	Y+2, r25	; 0x02
    1382:	89 83       	std	Y+1, r24	; 0x01
    1384:	ae 01       	movw	r20, r28
    1386:	49 5e       	subi	r20, 0xE9	; 233
    1388:	5f 4f       	sbci	r21, 0xFF	; 255
    138a:	6d 89       	ldd	r22, Y+21	; 0x15
    138c:	7e 89       	ldd	r23, Y+22	; 0x16
    138e:	ce 01       	movw	r24, r28
    1390:	01 96       	adiw	r24, 0x01	; 1
    1392:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <vfscanf>
    1396:	2e 96       	adiw	r28, 0x0e	; 14
    1398:	e2 e0       	ldi	r30, 0x02	; 2
    139a:	0c 94 d9 11 	jmp	0x23b2	; 0x23b2 <__epilogue_restores__+0x20>

0000139e <vfprintf>:
    139e:	ab e0       	ldi	r26, 0x0B	; 11
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e5 ed       	ldi	r30, 0xD5	; 213
    13a4:	f9 e0       	ldi	r31, 0x09	; 9
    13a6:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__prologue_saves__>
    13aa:	6c 01       	movw	r12, r24
    13ac:	7b 01       	movw	r14, r22
    13ae:	8a 01       	movw	r16, r20
    13b0:	fc 01       	movw	r30, r24
    13b2:	17 82       	std	Z+7, r1	; 0x07
    13b4:	16 82       	std	Z+6, r1	; 0x06
    13b6:	83 81       	ldd	r24, Z+3	; 0x03
    13b8:	81 ff       	sbrs	r24, 1
    13ba:	cc c1       	rjmp	.+920    	; 0x1754 <vfprintf+0x3b6>
    13bc:	ce 01       	movw	r24, r28
    13be:	01 96       	adiw	r24, 0x01	; 1
    13c0:	3c 01       	movw	r6, r24
    13c2:	f6 01       	movw	r30, r12
    13c4:	93 81       	ldd	r25, Z+3	; 0x03
    13c6:	f7 01       	movw	r30, r14
    13c8:	93 fd       	sbrc	r25, 3
    13ca:	85 91       	lpm	r24, Z+
    13cc:	93 ff       	sbrs	r25, 3
    13ce:	81 91       	ld	r24, Z+
    13d0:	7f 01       	movw	r14, r30
    13d2:	88 23       	and	r24, r24
    13d4:	09 f4       	brne	.+2      	; 0x13d8 <vfprintf+0x3a>
    13d6:	ba c1       	rjmp	.+884    	; 0x174c <vfprintf+0x3ae>
    13d8:	85 32       	cpi	r24, 0x25	; 37
    13da:	39 f4       	brne	.+14     	; 0x13ea <vfprintf+0x4c>
    13dc:	93 fd       	sbrc	r25, 3
    13de:	85 91       	lpm	r24, Z+
    13e0:	93 ff       	sbrs	r25, 3
    13e2:	81 91       	ld	r24, Z+
    13e4:	7f 01       	movw	r14, r30
    13e6:	85 32       	cpi	r24, 0x25	; 37
    13e8:	29 f4       	brne	.+10     	; 0x13f4 <vfprintf+0x56>
    13ea:	b6 01       	movw	r22, r12
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    13f2:	e7 cf       	rjmp	.-50     	; 0x13c2 <vfprintf+0x24>
    13f4:	91 2c       	mov	r9, r1
    13f6:	21 2c       	mov	r2, r1
    13f8:	31 2c       	mov	r3, r1
    13fa:	ff e1       	ldi	r31, 0x1F	; 31
    13fc:	f3 15       	cp	r31, r3
    13fe:	d8 f0       	brcs	.+54     	; 0x1436 <vfprintf+0x98>
    1400:	8b 32       	cpi	r24, 0x2B	; 43
    1402:	79 f0       	breq	.+30     	; 0x1422 <vfprintf+0x84>
    1404:	38 f4       	brcc	.+14     	; 0x1414 <vfprintf+0x76>
    1406:	80 32       	cpi	r24, 0x20	; 32
    1408:	79 f0       	breq	.+30     	; 0x1428 <vfprintf+0x8a>
    140a:	83 32       	cpi	r24, 0x23	; 35
    140c:	a1 f4       	brne	.+40     	; 0x1436 <vfprintf+0x98>
    140e:	23 2d       	mov	r18, r3
    1410:	20 61       	ori	r18, 0x10	; 16
    1412:	1d c0       	rjmp	.+58     	; 0x144e <vfprintf+0xb0>
    1414:	8d 32       	cpi	r24, 0x2D	; 45
    1416:	61 f0       	breq	.+24     	; 0x1430 <vfprintf+0x92>
    1418:	80 33       	cpi	r24, 0x30	; 48
    141a:	69 f4       	brne	.+26     	; 0x1436 <vfprintf+0x98>
    141c:	23 2d       	mov	r18, r3
    141e:	21 60       	ori	r18, 0x01	; 1
    1420:	16 c0       	rjmp	.+44     	; 0x144e <vfprintf+0xb0>
    1422:	83 2d       	mov	r24, r3
    1424:	82 60       	ori	r24, 0x02	; 2
    1426:	38 2e       	mov	r3, r24
    1428:	e3 2d       	mov	r30, r3
    142a:	e4 60       	ori	r30, 0x04	; 4
    142c:	3e 2e       	mov	r3, r30
    142e:	2a c0       	rjmp	.+84     	; 0x1484 <vfprintf+0xe6>
    1430:	f3 2d       	mov	r31, r3
    1432:	f8 60       	ori	r31, 0x08	; 8
    1434:	1d c0       	rjmp	.+58     	; 0x1470 <vfprintf+0xd2>
    1436:	37 fc       	sbrc	r3, 7
    1438:	2d c0       	rjmp	.+90     	; 0x1494 <vfprintf+0xf6>
    143a:	20 ed       	ldi	r18, 0xD0	; 208
    143c:	28 0f       	add	r18, r24
    143e:	2a 30       	cpi	r18, 0x0A	; 10
    1440:	40 f0       	brcs	.+16     	; 0x1452 <vfprintf+0xb4>
    1442:	8e 32       	cpi	r24, 0x2E	; 46
    1444:	b9 f4       	brne	.+46     	; 0x1474 <vfprintf+0xd6>
    1446:	36 fc       	sbrc	r3, 6
    1448:	81 c1       	rjmp	.+770    	; 0x174c <vfprintf+0x3ae>
    144a:	23 2d       	mov	r18, r3
    144c:	20 64       	ori	r18, 0x40	; 64
    144e:	32 2e       	mov	r3, r18
    1450:	19 c0       	rjmp	.+50     	; 0x1484 <vfprintf+0xe6>
    1452:	36 fe       	sbrs	r3, 6
    1454:	06 c0       	rjmp	.+12     	; 0x1462 <vfprintf+0xc4>
    1456:	8a e0       	ldi	r24, 0x0A	; 10
    1458:	98 9e       	mul	r9, r24
    145a:	20 0d       	add	r18, r0
    145c:	11 24       	eor	r1, r1
    145e:	92 2e       	mov	r9, r18
    1460:	11 c0       	rjmp	.+34     	; 0x1484 <vfprintf+0xe6>
    1462:	ea e0       	ldi	r30, 0x0A	; 10
    1464:	2e 9e       	mul	r2, r30
    1466:	20 0d       	add	r18, r0
    1468:	11 24       	eor	r1, r1
    146a:	22 2e       	mov	r2, r18
    146c:	f3 2d       	mov	r31, r3
    146e:	f0 62       	ori	r31, 0x20	; 32
    1470:	3f 2e       	mov	r3, r31
    1472:	08 c0       	rjmp	.+16     	; 0x1484 <vfprintf+0xe6>
    1474:	8c 36       	cpi	r24, 0x6C	; 108
    1476:	21 f4       	brne	.+8      	; 0x1480 <vfprintf+0xe2>
    1478:	83 2d       	mov	r24, r3
    147a:	80 68       	ori	r24, 0x80	; 128
    147c:	38 2e       	mov	r3, r24
    147e:	02 c0       	rjmp	.+4      	; 0x1484 <vfprintf+0xe6>
    1480:	88 36       	cpi	r24, 0x68	; 104
    1482:	41 f4       	brne	.+16     	; 0x1494 <vfprintf+0xf6>
    1484:	f7 01       	movw	r30, r14
    1486:	93 fd       	sbrc	r25, 3
    1488:	85 91       	lpm	r24, Z+
    148a:	93 ff       	sbrs	r25, 3
    148c:	81 91       	ld	r24, Z+
    148e:	7f 01       	movw	r14, r30
    1490:	81 11       	cpse	r24, r1
    1492:	b3 cf       	rjmp	.-154    	; 0x13fa <vfprintf+0x5c>
    1494:	98 2f       	mov	r25, r24
    1496:	9f 7d       	andi	r25, 0xDF	; 223
    1498:	95 54       	subi	r25, 0x45	; 69
    149a:	93 30       	cpi	r25, 0x03	; 3
    149c:	28 f4       	brcc	.+10     	; 0x14a8 <vfprintf+0x10a>
    149e:	0c 5f       	subi	r16, 0xFC	; 252
    14a0:	1f 4f       	sbci	r17, 0xFF	; 255
    14a2:	9f e3       	ldi	r25, 0x3F	; 63
    14a4:	99 83       	std	Y+1, r25	; 0x01
    14a6:	0d c0       	rjmp	.+26     	; 0x14c2 <vfprintf+0x124>
    14a8:	83 36       	cpi	r24, 0x63	; 99
    14aa:	31 f0       	breq	.+12     	; 0x14b8 <vfprintf+0x11a>
    14ac:	83 37       	cpi	r24, 0x73	; 115
    14ae:	71 f0       	breq	.+28     	; 0x14cc <vfprintf+0x12e>
    14b0:	83 35       	cpi	r24, 0x53	; 83
    14b2:	09 f0       	breq	.+2      	; 0x14b6 <vfprintf+0x118>
    14b4:	59 c0       	rjmp	.+178    	; 0x1568 <vfprintf+0x1ca>
    14b6:	21 c0       	rjmp	.+66     	; 0x14fa <vfprintf+0x15c>
    14b8:	f8 01       	movw	r30, r16
    14ba:	80 81       	ld	r24, Z
    14bc:	89 83       	std	Y+1, r24	; 0x01
    14be:	0e 5f       	subi	r16, 0xFE	; 254
    14c0:	1f 4f       	sbci	r17, 0xFF	; 255
    14c2:	88 24       	eor	r8, r8
    14c4:	83 94       	inc	r8
    14c6:	91 2c       	mov	r9, r1
    14c8:	53 01       	movw	r10, r6
    14ca:	13 c0       	rjmp	.+38     	; 0x14f2 <vfprintf+0x154>
    14cc:	28 01       	movw	r4, r16
    14ce:	f2 e0       	ldi	r31, 0x02	; 2
    14d0:	4f 0e       	add	r4, r31
    14d2:	51 1c       	adc	r5, r1
    14d4:	f8 01       	movw	r30, r16
    14d6:	a0 80       	ld	r10, Z
    14d8:	b1 80       	ldd	r11, Z+1	; 0x01
    14da:	36 fe       	sbrs	r3, 6
    14dc:	03 c0       	rjmp	.+6      	; 0x14e4 <vfprintf+0x146>
    14de:	69 2d       	mov	r22, r9
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <vfprintf+0x14a>
    14e4:	6f ef       	ldi	r22, 0xFF	; 255
    14e6:	7f ef       	ldi	r23, 0xFF	; 255
    14e8:	c5 01       	movw	r24, r10
    14ea:	0e 94 ae 10 	call	0x215c	; 0x215c <strnlen>
    14ee:	4c 01       	movw	r8, r24
    14f0:	82 01       	movw	r16, r4
    14f2:	f3 2d       	mov	r31, r3
    14f4:	ff 77       	andi	r31, 0x7F	; 127
    14f6:	3f 2e       	mov	r3, r31
    14f8:	16 c0       	rjmp	.+44     	; 0x1526 <vfprintf+0x188>
    14fa:	28 01       	movw	r4, r16
    14fc:	22 e0       	ldi	r18, 0x02	; 2
    14fe:	42 0e       	add	r4, r18
    1500:	51 1c       	adc	r5, r1
    1502:	f8 01       	movw	r30, r16
    1504:	a0 80       	ld	r10, Z
    1506:	b1 80       	ldd	r11, Z+1	; 0x01
    1508:	36 fe       	sbrs	r3, 6
    150a:	03 c0       	rjmp	.+6      	; 0x1512 <vfprintf+0x174>
    150c:	69 2d       	mov	r22, r9
    150e:	70 e0       	ldi	r23, 0x00	; 0
    1510:	02 c0       	rjmp	.+4      	; 0x1516 <vfprintf+0x178>
    1512:	6f ef       	ldi	r22, 0xFF	; 255
    1514:	7f ef       	ldi	r23, 0xFF	; 255
    1516:	c5 01       	movw	r24, r10
    1518:	0e 94 a3 10 	call	0x2146	; 0x2146 <strnlen_P>
    151c:	4c 01       	movw	r8, r24
    151e:	f3 2d       	mov	r31, r3
    1520:	f0 68       	ori	r31, 0x80	; 128
    1522:	3f 2e       	mov	r3, r31
    1524:	82 01       	movw	r16, r4
    1526:	33 fc       	sbrc	r3, 3
    1528:	1b c0       	rjmp	.+54     	; 0x1560 <vfprintf+0x1c2>
    152a:	82 2d       	mov	r24, r2
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	88 16       	cp	r8, r24
    1530:	99 06       	cpc	r9, r25
    1532:	b0 f4       	brcc	.+44     	; 0x1560 <vfprintf+0x1c2>
    1534:	b6 01       	movw	r22, r12
    1536:	80 e2       	ldi	r24, 0x20	; 32
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    153e:	2a 94       	dec	r2
    1540:	f4 cf       	rjmp	.-24     	; 0x152a <vfprintf+0x18c>
    1542:	f5 01       	movw	r30, r10
    1544:	37 fc       	sbrc	r3, 7
    1546:	85 91       	lpm	r24, Z+
    1548:	37 fe       	sbrs	r3, 7
    154a:	81 91       	ld	r24, Z+
    154c:	5f 01       	movw	r10, r30
    154e:	b6 01       	movw	r22, r12
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    1556:	21 10       	cpse	r2, r1
    1558:	2a 94       	dec	r2
    155a:	21 e0       	ldi	r18, 0x01	; 1
    155c:	82 1a       	sub	r8, r18
    155e:	91 08       	sbc	r9, r1
    1560:	81 14       	cp	r8, r1
    1562:	91 04       	cpc	r9, r1
    1564:	71 f7       	brne	.-36     	; 0x1542 <vfprintf+0x1a4>
    1566:	e8 c0       	rjmp	.+464    	; 0x1738 <vfprintf+0x39a>
    1568:	84 36       	cpi	r24, 0x64	; 100
    156a:	11 f0       	breq	.+4      	; 0x1570 <vfprintf+0x1d2>
    156c:	89 36       	cpi	r24, 0x69	; 105
    156e:	41 f5       	brne	.+80     	; 0x15c0 <vfprintf+0x222>
    1570:	f8 01       	movw	r30, r16
    1572:	37 fe       	sbrs	r3, 7
    1574:	07 c0       	rjmp	.+14     	; 0x1584 <vfprintf+0x1e6>
    1576:	60 81       	ld	r22, Z
    1578:	71 81       	ldd	r23, Z+1	; 0x01
    157a:	82 81       	ldd	r24, Z+2	; 0x02
    157c:	93 81       	ldd	r25, Z+3	; 0x03
    157e:	0c 5f       	subi	r16, 0xFC	; 252
    1580:	1f 4f       	sbci	r17, 0xFF	; 255
    1582:	08 c0       	rjmp	.+16     	; 0x1594 <vfprintf+0x1f6>
    1584:	60 81       	ld	r22, Z
    1586:	71 81       	ldd	r23, Z+1	; 0x01
    1588:	07 2e       	mov	r0, r23
    158a:	00 0c       	add	r0, r0
    158c:	88 0b       	sbc	r24, r24
    158e:	99 0b       	sbc	r25, r25
    1590:	0e 5f       	subi	r16, 0xFE	; 254
    1592:	1f 4f       	sbci	r17, 0xFF	; 255
    1594:	f3 2d       	mov	r31, r3
    1596:	ff 76       	andi	r31, 0x6F	; 111
    1598:	3f 2e       	mov	r3, r31
    159a:	97 ff       	sbrs	r25, 7
    159c:	09 c0       	rjmp	.+18     	; 0x15b0 <vfprintf+0x212>
    159e:	90 95       	com	r25
    15a0:	80 95       	com	r24
    15a2:	70 95       	com	r23
    15a4:	61 95       	neg	r22
    15a6:	7f 4f       	sbci	r23, 0xFF	; 255
    15a8:	8f 4f       	sbci	r24, 0xFF	; 255
    15aa:	9f 4f       	sbci	r25, 0xFF	; 255
    15ac:	f0 68       	ori	r31, 0x80	; 128
    15ae:	3f 2e       	mov	r3, r31
    15b0:	2a e0       	ldi	r18, 0x0A	; 10
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	a3 01       	movw	r20, r6
    15b6:	0e 94 4c 11 	call	0x2298	; 0x2298 <__ultoa_invert>
    15ba:	88 2e       	mov	r8, r24
    15bc:	86 18       	sub	r8, r6
    15be:	45 c0       	rjmp	.+138    	; 0x164a <vfprintf+0x2ac>
    15c0:	85 37       	cpi	r24, 0x75	; 117
    15c2:	31 f4       	brne	.+12     	; 0x15d0 <vfprintf+0x232>
    15c4:	23 2d       	mov	r18, r3
    15c6:	2f 7e       	andi	r18, 0xEF	; 239
    15c8:	b2 2e       	mov	r11, r18
    15ca:	2a e0       	ldi	r18, 0x0A	; 10
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	25 c0       	rjmp	.+74     	; 0x161a <vfprintf+0x27c>
    15d0:	93 2d       	mov	r25, r3
    15d2:	99 7f       	andi	r25, 0xF9	; 249
    15d4:	b9 2e       	mov	r11, r25
    15d6:	8f 36       	cpi	r24, 0x6F	; 111
    15d8:	c1 f0       	breq	.+48     	; 0x160a <vfprintf+0x26c>
    15da:	18 f4       	brcc	.+6      	; 0x15e2 <vfprintf+0x244>
    15dc:	88 35       	cpi	r24, 0x58	; 88
    15de:	79 f0       	breq	.+30     	; 0x15fe <vfprintf+0x260>
    15e0:	b5 c0       	rjmp	.+362    	; 0x174c <vfprintf+0x3ae>
    15e2:	80 37       	cpi	r24, 0x70	; 112
    15e4:	19 f0       	breq	.+6      	; 0x15ec <vfprintf+0x24e>
    15e6:	88 37       	cpi	r24, 0x78	; 120
    15e8:	21 f0       	breq	.+8      	; 0x15f2 <vfprintf+0x254>
    15ea:	b0 c0       	rjmp	.+352    	; 0x174c <vfprintf+0x3ae>
    15ec:	e9 2f       	mov	r30, r25
    15ee:	e0 61       	ori	r30, 0x10	; 16
    15f0:	be 2e       	mov	r11, r30
    15f2:	b4 fe       	sbrs	r11, 4
    15f4:	0d c0       	rjmp	.+26     	; 0x1610 <vfprintf+0x272>
    15f6:	fb 2d       	mov	r31, r11
    15f8:	f4 60       	ori	r31, 0x04	; 4
    15fa:	bf 2e       	mov	r11, r31
    15fc:	09 c0       	rjmp	.+18     	; 0x1610 <vfprintf+0x272>
    15fe:	34 fe       	sbrs	r3, 4
    1600:	0a c0       	rjmp	.+20     	; 0x1616 <vfprintf+0x278>
    1602:	29 2f       	mov	r18, r25
    1604:	26 60       	ori	r18, 0x06	; 6
    1606:	b2 2e       	mov	r11, r18
    1608:	06 c0       	rjmp	.+12     	; 0x1616 <vfprintf+0x278>
    160a:	28 e0       	ldi	r18, 0x08	; 8
    160c:	30 e0       	ldi	r19, 0x00	; 0
    160e:	05 c0       	rjmp	.+10     	; 0x161a <vfprintf+0x27c>
    1610:	20 e1       	ldi	r18, 0x10	; 16
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	02 c0       	rjmp	.+4      	; 0x161a <vfprintf+0x27c>
    1616:	20 e1       	ldi	r18, 0x10	; 16
    1618:	32 e0       	ldi	r19, 0x02	; 2
    161a:	f8 01       	movw	r30, r16
    161c:	b7 fe       	sbrs	r11, 7
    161e:	07 c0       	rjmp	.+14     	; 0x162e <vfprintf+0x290>
    1620:	60 81       	ld	r22, Z
    1622:	71 81       	ldd	r23, Z+1	; 0x01
    1624:	82 81       	ldd	r24, Z+2	; 0x02
    1626:	93 81       	ldd	r25, Z+3	; 0x03
    1628:	0c 5f       	subi	r16, 0xFC	; 252
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	06 c0       	rjmp	.+12     	; 0x163a <vfprintf+0x29c>
    162e:	60 81       	ld	r22, Z
    1630:	71 81       	ldd	r23, Z+1	; 0x01
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	0e 5f       	subi	r16, 0xFE	; 254
    1638:	1f 4f       	sbci	r17, 0xFF	; 255
    163a:	a3 01       	movw	r20, r6
    163c:	0e 94 4c 11 	call	0x2298	; 0x2298 <__ultoa_invert>
    1640:	88 2e       	mov	r8, r24
    1642:	86 18       	sub	r8, r6
    1644:	fb 2d       	mov	r31, r11
    1646:	ff 77       	andi	r31, 0x7F	; 127
    1648:	3f 2e       	mov	r3, r31
    164a:	36 fe       	sbrs	r3, 6
    164c:	0d c0       	rjmp	.+26     	; 0x1668 <vfprintf+0x2ca>
    164e:	23 2d       	mov	r18, r3
    1650:	2e 7f       	andi	r18, 0xFE	; 254
    1652:	a2 2e       	mov	r10, r18
    1654:	89 14       	cp	r8, r9
    1656:	58 f4       	brcc	.+22     	; 0x166e <vfprintf+0x2d0>
    1658:	34 fe       	sbrs	r3, 4
    165a:	0b c0       	rjmp	.+22     	; 0x1672 <vfprintf+0x2d4>
    165c:	32 fc       	sbrc	r3, 2
    165e:	09 c0       	rjmp	.+18     	; 0x1672 <vfprintf+0x2d4>
    1660:	83 2d       	mov	r24, r3
    1662:	8e 7e       	andi	r24, 0xEE	; 238
    1664:	a8 2e       	mov	r10, r24
    1666:	05 c0       	rjmp	.+10     	; 0x1672 <vfprintf+0x2d4>
    1668:	b8 2c       	mov	r11, r8
    166a:	a3 2c       	mov	r10, r3
    166c:	03 c0       	rjmp	.+6      	; 0x1674 <vfprintf+0x2d6>
    166e:	b8 2c       	mov	r11, r8
    1670:	01 c0       	rjmp	.+2      	; 0x1674 <vfprintf+0x2d6>
    1672:	b9 2c       	mov	r11, r9
    1674:	a4 fe       	sbrs	r10, 4
    1676:	0f c0       	rjmp	.+30     	; 0x1696 <vfprintf+0x2f8>
    1678:	fe 01       	movw	r30, r28
    167a:	e8 0d       	add	r30, r8
    167c:	f1 1d       	adc	r31, r1
    167e:	80 81       	ld	r24, Z
    1680:	80 33       	cpi	r24, 0x30	; 48
    1682:	21 f4       	brne	.+8      	; 0x168c <vfprintf+0x2ee>
    1684:	9a 2d       	mov	r25, r10
    1686:	99 7e       	andi	r25, 0xE9	; 233
    1688:	a9 2e       	mov	r10, r25
    168a:	09 c0       	rjmp	.+18     	; 0x169e <vfprintf+0x300>
    168c:	a2 fe       	sbrs	r10, 2
    168e:	06 c0       	rjmp	.+12     	; 0x169c <vfprintf+0x2fe>
    1690:	b3 94       	inc	r11
    1692:	b3 94       	inc	r11
    1694:	04 c0       	rjmp	.+8      	; 0x169e <vfprintf+0x300>
    1696:	8a 2d       	mov	r24, r10
    1698:	86 78       	andi	r24, 0x86	; 134
    169a:	09 f0       	breq	.+2      	; 0x169e <vfprintf+0x300>
    169c:	b3 94       	inc	r11
    169e:	a3 fc       	sbrc	r10, 3
    16a0:	11 c0       	rjmp	.+34     	; 0x16c4 <vfprintf+0x326>
    16a2:	a0 fe       	sbrs	r10, 0
    16a4:	06 c0       	rjmp	.+12     	; 0x16b2 <vfprintf+0x314>
    16a6:	b2 14       	cp	r11, r2
    16a8:	88 f4       	brcc	.+34     	; 0x16cc <vfprintf+0x32e>
    16aa:	28 0c       	add	r2, r8
    16ac:	92 2c       	mov	r9, r2
    16ae:	9b 18       	sub	r9, r11
    16b0:	0e c0       	rjmp	.+28     	; 0x16ce <vfprintf+0x330>
    16b2:	b2 14       	cp	r11, r2
    16b4:	60 f4       	brcc	.+24     	; 0x16ce <vfprintf+0x330>
    16b6:	b6 01       	movw	r22, r12
    16b8:	80 e2       	ldi	r24, 0x20	; 32
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    16c0:	b3 94       	inc	r11
    16c2:	f7 cf       	rjmp	.-18     	; 0x16b2 <vfprintf+0x314>
    16c4:	b2 14       	cp	r11, r2
    16c6:	18 f4       	brcc	.+6      	; 0x16ce <vfprintf+0x330>
    16c8:	2b 18       	sub	r2, r11
    16ca:	02 c0       	rjmp	.+4      	; 0x16d0 <vfprintf+0x332>
    16cc:	98 2c       	mov	r9, r8
    16ce:	21 2c       	mov	r2, r1
    16d0:	a4 fe       	sbrs	r10, 4
    16d2:	10 c0       	rjmp	.+32     	; 0x16f4 <vfprintf+0x356>
    16d4:	b6 01       	movw	r22, r12
    16d6:	80 e3       	ldi	r24, 0x30	; 48
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    16de:	a2 fe       	sbrs	r10, 2
    16e0:	17 c0       	rjmp	.+46     	; 0x1710 <vfprintf+0x372>
    16e2:	a1 fc       	sbrc	r10, 1
    16e4:	03 c0       	rjmp	.+6      	; 0x16ec <vfprintf+0x34e>
    16e6:	88 e7       	ldi	r24, 0x78	; 120
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <vfprintf+0x352>
    16ec:	88 e5       	ldi	r24, 0x58	; 88
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	b6 01       	movw	r22, r12
    16f2:	0c c0       	rjmp	.+24     	; 0x170c <vfprintf+0x36e>
    16f4:	8a 2d       	mov	r24, r10
    16f6:	86 78       	andi	r24, 0x86	; 134
    16f8:	59 f0       	breq	.+22     	; 0x1710 <vfprintf+0x372>
    16fa:	a1 fe       	sbrs	r10, 1
    16fc:	02 c0       	rjmp	.+4      	; 0x1702 <vfprintf+0x364>
    16fe:	8b e2       	ldi	r24, 0x2B	; 43
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <vfprintf+0x366>
    1702:	80 e2       	ldi	r24, 0x20	; 32
    1704:	a7 fc       	sbrc	r10, 7
    1706:	8d e2       	ldi	r24, 0x2D	; 45
    1708:	b6 01       	movw	r22, r12
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    1710:	89 14       	cp	r8, r9
    1712:	38 f4       	brcc	.+14     	; 0x1722 <vfprintf+0x384>
    1714:	b6 01       	movw	r22, r12
    1716:	80 e3       	ldi	r24, 0x30	; 48
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    171e:	9a 94       	dec	r9
    1720:	f7 cf       	rjmp	.-18     	; 0x1710 <vfprintf+0x372>
    1722:	8a 94       	dec	r8
    1724:	f3 01       	movw	r30, r6
    1726:	e8 0d       	add	r30, r8
    1728:	f1 1d       	adc	r31, r1
    172a:	80 81       	ld	r24, Z
    172c:	b6 01       	movw	r22, r12
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    1734:	81 10       	cpse	r8, r1
    1736:	f5 cf       	rjmp	.-22     	; 0x1722 <vfprintf+0x384>
    1738:	22 20       	and	r2, r2
    173a:	09 f4       	brne	.+2      	; 0x173e <vfprintf+0x3a0>
    173c:	42 ce       	rjmp	.-892    	; 0x13c2 <vfprintf+0x24>
    173e:	b6 01       	movw	r22, r12
    1740:	80 e2       	ldi	r24, 0x20	; 32
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	0e 94 f7 10 	call	0x21ee	; 0x21ee <fputc>
    1748:	2a 94       	dec	r2
    174a:	f6 cf       	rjmp	.-20     	; 0x1738 <vfprintf+0x39a>
    174c:	f6 01       	movw	r30, r12
    174e:	86 81       	ldd	r24, Z+6	; 0x06
    1750:	97 81       	ldd	r25, Z+7	; 0x07
    1752:	02 c0       	rjmp	.+4      	; 0x1758 <vfprintf+0x3ba>
    1754:	8f ef       	ldi	r24, 0xFF	; 255
    1756:	9f ef       	ldi	r25, 0xFF	; 255
    1758:	2b 96       	adiw	r28, 0x0b	; 11
    175a:	e2 e1       	ldi	r30, 0x12	; 18
    175c:	0c 94 c9 11 	jmp	0x2392	; 0x2392 <__epilogue_restores__>

00001760 <putval>:
    1760:	20 fd       	sbrc	r18, 0
    1762:	09 c0       	rjmp	.+18     	; 0x1776 <putval+0x16>
    1764:	fc 01       	movw	r30, r24
    1766:	23 fd       	sbrc	r18, 3
    1768:	05 c0       	rjmp	.+10     	; 0x1774 <putval+0x14>
    176a:	22 ff       	sbrs	r18, 2
    176c:	02 c0       	rjmp	.+4      	; 0x1772 <putval+0x12>
    176e:	73 83       	std	Z+3, r23	; 0x03
    1770:	62 83       	std	Z+2, r22	; 0x02
    1772:	51 83       	std	Z+1, r21	; 0x01
    1774:	40 83       	st	Z, r20
    1776:	08 95       	ret

00001778 <mulacc>:
    1778:	44 fd       	sbrc	r20, 4
    177a:	17 c0       	rjmp	.+46     	; 0x17aa <mulacc+0x32>
    177c:	46 fd       	sbrc	r20, 6
    177e:	17 c0       	rjmp	.+46     	; 0x17ae <mulacc+0x36>
    1780:	ab 01       	movw	r20, r22
    1782:	bc 01       	movw	r22, r24
    1784:	da 01       	movw	r26, r20
    1786:	fb 01       	movw	r30, r22
    1788:	aa 0f       	add	r26, r26
    178a:	bb 1f       	adc	r27, r27
    178c:	ee 1f       	adc	r30, r30
    178e:	ff 1f       	adc	r31, r31
    1790:	10 94       	com	r1
    1792:	d1 f7       	brne	.-12     	; 0x1788 <mulacc+0x10>
    1794:	4a 0f       	add	r20, r26
    1796:	5b 1f       	adc	r21, r27
    1798:	6e 1f       	adc	r22, r30
    179a:	7f 1f       	adc	r23, r31
    179c:	cb 01       	movw	r24, r22
    179e:	ba 01       	movw	r22, r20
    17a0:	66 0f       	add	r22, r22
    17a2:	77 1f       	adc	r23, r23
    17a4:	88 1f       	adc	r24, r24
    17a6:	99 1f       	adc	r25, r25
    17a8:	09 c0       	rjmp	.+18     	; 0x17bc <mulacc+0x44>
    17aa:	33 e0       	ldi	r19, 0x03	; 3
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <mulacc+0x38>
    17ae:	34 e0       	ldi	r19, 0x04	; 4
    17b0:	66 0f       	add	r22, r22
    17b2:	77 1f       	adc	r23, r23
    17b4:	88 1f       	adc	r24, r24
    17b6:	99 1f       	adc	r25, r25
    17b8:	31 50       	subi	r19, 0x01	; 1
    17ba:	d1 f7       	brne	.-12     	; 0x17b0 <mulacc+0x38>
    17bc:	62 0f       	add	r22, r18
    17be:	71 1d       	adc	r23, r1
    17c0:	81 1d       	adc	r24, r1
    17c2:	91 1d       	adc	r25, r1
    17c4:	08 95       	ret

000017c6 <skip_spaces>:
    17c6:	0f 93       	push	r16
    17c8:	1f 93       	push	r17
    17ca:	cf 93       	push	r28
    17cc:	df 93       	push	r29
    17ce:	8c 01       	movw	r16, r24
    17d0:	c8 01       	movw	r24, r16
    17d2:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    17d6:	ec 01       	movw	r28, r24
    17d8:	97 fd       	sbrc	r25, 7
    17da:	08 c0       	rjmp	.+16     	; 0x17ec <skip_spaces+0x26>
    17dc:	0e 94 8f 10 	call	0x211e	; 0x211e <isspace>
    17e0:	89 2b       	or	r24, r25
    17e2:	b1 f7       	brne	.-20     	; 0x17d0 <skip_spaces+0xa>
    17e4:	b8 01       	movw	r22, r16
    17e6:	ce 01       	movw	r24, r28
    17e8:	0e 94 33 11 	call	0x2266	; 0x2266 <ungetc>
    17ec:	ce 01       	movw	r24, r28
    17ee:	df 91       	pop	r29
    17f0:	cf 91       	pop	r28
    17f2:	1f 91       	pop	r17
    17f4:	0f 91       	pop	r16
    17f6:	08 95       	ret

000017f8 <conv_int>:
    17f8:	8f 92       	push	r8
    17fa:	9f 92       	push	r9
    17fc:	af 92       	push	r10
    17fe:	bf 92       	push	r11
    1800:	ef 92       	push	r14
    1802:	ff 92       	push	r15
    1804:	0f 93       	push	r16
    1806:	1f 93       	push	r17
    1808:	cf 93       	push	r28
    180a:	df 93       	push	r29
    180c:	8c 01       	movw	r16, r24
    180e:	d6 2f       	mov	r29, r22
    1810:	7a 01       	movw	r14, r20
    1812:	b2 2e       	mov	r11, r18
    1814:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    1818:	9c 01       	movw	r18, r24
    181a:	33 27       	eor	r19, r19
    181c:	2b 32       	cpi	r18, 0x2B	; 43
    181e:	31 05       	cpc	r19, r1
    1820:	31 f0       	breq	.+12     	; 0x182e <conv_int+0x36>
    1822:	2d 32       	cpi	r18, 0x2D	; 45
    1824:	31 05       	cpc	r19, r1
    1826:	61 f4       	brne	.+24     	; 0x1840 <conv_int+0x48>
    1828:	8b 2d       	mov	r24, r11
    182a:	80 68       	ori	r24, 0x80	; 128
    182c:	b8 2e       	mov	r11, r24
    182e:	d1 50       	subi	r29, 0x01	; 1
    1830:	11 f4       	brne	.+4      	; 0x1836 <conv_int+0x3e>
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	68 c0       	rjmp	.+208    	; 0x1906 <conv_int+0x10e>
    1836:	c8 01       	movw	r24, r16
    1838:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    183c:	97 fd       	sbrc	r25, 7
    183e:	f9 cf       	rjmp	.-14     	; 0x1832 <conv_int+0x3a>
    1840:	cb 2d       	mov	r28, r11
    1842:	cd 7f       	andi	r28, 0xFD	; 253
    1844:	2b 2d       	mov	r18, r11
    1846:	20 73       	andi	r18, 0x30	; 48
    1848:	09 f5       	brne	.+66     	; 0x188c <conv_int+0x94>
    184a:	80 33       	cpi	r24, 0x30	; 48
    184c:	f9 f4       	brne	.+62     	; 0x188c <conv_int+0x94>
    184e:	aa 24       	eor	r10, r10
    1850:	aa 94       	dec	r10
    1852:	ad 0e       	add	r10, r29
    1854:	09 f4       	brne	.+2      	; 0x1858 <conv_int+0x60>
    1856:	43 c0       	rjmp	.+134    	; 0x18de <conv_int+0xe6>
    1858:	c8 01       	movw	r24, r16
    185a:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    185e:	97 fd       	sbrc	r25, 7
    1860:	3e c0       	rjmp	.+124    	; 0x18de <conv_int+0xe6>
    1862:	9c 01       	movw	r18, r24
    1864:	2f 7d       	andi	r18, 0xDF	; 223
    1866:	33 27       	eor	r19, r19
    1868:	28 35       	cpi	r18, 0x58	; 88
    186a:	31 05       	cpc	r19, r1
    186c:	49 f4       	brne	.+18     	; 0x1880 <conv_int+0x88>
    186e:	c2 64       	ori	r28, 0x42	; 66
    1870:	d2 50       	subi	r29, 0x02	; 2
    1872:	a9 f1       	breq	.+106    	; 0x18de <conv_int+0xe6>
    1874:	c8 01       	movw	r24, r16
    1876:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    187a:	97 ff       	sbrs	r25, 7
    187c:	07 c0       	rjmp	.+14     	; 0x188c <conv_int+0x94>
    187e:	2f c0       	rjmp	.+94     	; 0x18de <conv_int+0xe6>
    1880:	b6 fe       	sbrs	r11, 6
    1882:	02 c0       	rjmp	.+4      	; 0x1888 <conv_int+0x90>
    1884:	c2 60       	ori	r28, 0x02	; 2
    1886:	01 c0       	rjmp	.+2      	; 0x188a <conv_int+0x92>
    1888:	c2 61       	ori	r28, 0x12	; 18
    188a:	da 2d       	mov	r29, r10
    188c:	81 2c       	mov	r8, r1
    188e:	91 2c       	mov	r9, r1
    1890:	54 01       	movw	r10, r8
    1892:	20 ed       	ldi	r18, 0xD0	; 208
    1894:	28 0f       	add	r18, r24
    1896:	28 30       	cpi	r18, 0x08	; 8
    1898:	80 f0       	brcs	.+32     	; 0x18ba <conv_int+0xc2>
    189a:	c4 ff       	sbrs	r28, 4
    189c:	04 c0       	rjmp	.+8      	; 0x18a6 <conv_int+0xae>
    189e:	b8 01       	movw	r22, r16
    18a0:	0e 94 33 11 	call	0x2266	; 0x2266 <ungetc>
    18a4:	19 c0       	rjmp	.+50     	; 0x18d8 <conv_int+0xe0>
    18a6:	2a 30       	cpi	r18, 0x0A	; 10
    18a8:	40 f0       	brcs	.+16     	; 0x18ba <conv_int+0xc2>
    18aa:	c6 ff       	sbrs	r28, 6
    18ac:	f8 cf       	rjmp	.-16     	; 0x189e <conv_int+0xa6>
    18ae:	2f 7d       	andi	r18, 0xDF	; 223
    18b0:	3f ee       	ldi	r19, 0xEF	; 239
    18b2:	32 0f       	add	r19, r18
    18b4:	36 30       	cpi	r19, 0x06	; 6
    18b6:	98 f7       	brcc	.-26     	; 0x189e <conv_int+0xa6>
    18b8:	27 50       	subi	r18, 0x07	; 7
    18ba:	4c 2f       	mov	r20, r28
    18bc:	c5 01       	movw	r24, r10
    18be:	b4 01       	movw	r22, r8
    18c0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <mulacc>
    18c4:	4b 01       	movw	r8, r22
    18c6:	5c 01       	movw	r10, r24
    18c8:	c2 60       	ori	r28, 0x02	; 2
    18ca:	d1 50       	subi	r29, 0x01	; 1
    18cc:	59 f0       	breq	.+22     	; 0x18e4 <conv_int+0xec>
    18ce:	c8 01       	movw	r24, r16
    18d0:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    18d4:	97 ff       	sbrs	r25, 7
    18d6:	dd cf       	rjmp	.-70     	; 0x1892 <conv_int+0x9a>
    18d8:	c1 fd       	sbrc	r28, 1
    18da:	04 c0       	rjmp	.+8      	; 0x18e4 <conv_int+0xec>
    18dc:	aa cf       	rjmp	.-172    	; 0x1832 <conv_int+0x3a>
    18de:	81 2c       	mov	r8, r1
    18e0:	91 2c       	mov	r9, r1
    18e2:	54 01       	movw	r10, r8
    18e4:	c7 ff       	sbrs	r28, 7
    18e6:	08 c0       	rjmp	.+16     	; 0x18f8 <conv_int+0x100>
    18e8:	b0 94       	com	r11
    18ea:	a0 94       	com	r10
    18ec:	90 94       	com	r9
    18ee:	80 94       	com	r8
    18f0:	81 1c       	adc	r8, r1
    18f2:	91 1c       	adc	r9, r1
    18f4:	a1 1c       	adc	r10, r1
    18f6:	b1 1c       	adc	r11, r1
    18f8:	2c 2f       	mov	r18, r28
    18fa:	b5 01       	movw	r22, r10
    18fc:	a4 01       	movw	r20, r8
    18fe:	c7 01       	movw	r24, r14
    1900:	0e 94 b0 0b 	call	0x1760	; 0x1760 <putval>
    1904:	81 e0       	ldi	r24, 0x01	; 1
    1906:	df 91       	pop	r29
    1908:	cf 91       	pop	r28
    190a:	1f 91       	pop	r17
    190c:	0f 91       	pop	r16
    190e:	ff 90       	pop	r15
    1910:	ef 90       	pop	r14
    1912:	bf 90       	pop	r11
    1914:	af 90       	pop	r10
    1916:	9f 90       	pop	r9
    1918:	8f 90       	pop	r8
    191a:	08 95       	ret

0000191c <conv_brk>:
    191c:	a0 e2       	ldi	r26, 0x20	; 32
    191e:	b0 e0       	ldi	r27, 0x00	; 0
    1920:	e4 e9       	ldi	r30, 0x94	; 148
    1922:	fc e0       	ldi	r31, 0x0C	; 12
    1924:	0c 94 b0 11 	jmp	0x2360	; 0x2360 <__prologue_saves__+0x6>
    1928:	5c 01       	movw	r10, r24
    192a:	96 2e       	mov	r9, r22
    192c:	7a 01       	movw	r14, r20
    192e:	f9 01       	movw	r30, r18
    1930:	8e 01       	movw	r16, r28
    1932:	0f 5f       	subi	r16, 0xFF	; 255
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	68 01       	movw	r12, r16
    1938:	80 e2       	ldi	r24, 0x20	; 32
    193a:	d8 01       	movw	r26, r16
    193c:	1d 92       	st	X+, r1
    193e:	8a 95       	dec	r24
    1940:	e9 f7       	brne	.-6      	; 0x193c <conv_brk+0x20>
    1942:	d5 01       	movw	r26, r10
    1944:	13 96       	adiw	r26, 0x03	; 3
    1946:	8c 90       	ld	r8, X
    1948:	80 e0       	ldi	r24, 0x00	; 0
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	61 2c       	mov	r6, r1
    194e:	71 2c       	mov	r7, r1
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	61 e0       	ldi	r22, 0x01	; 1
    1954:	70 e0       	ldi	r23, 0x00	; 0
    1956:	83 fc       	sbrc	r8, 3
    1958:	25 91       	lpm	r18, Z+
    195a:	83 fe       	sbrs	r8, 3
    195c:	21 91       	ld	r18, Z+
    195e:	8f 01       	movw	r16, r30
    1960:	52 2e       	mov	r5, r18
    1962:	21 11       	cpse	r18, r1
    1964:	03 c0       	rjmp	.+6      	; 0x196c <conv_brk+0x50>
    1966:	80 e0       	ldi	r24, 0x00	; 0
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	92 c0       	rjmp	.+292    	; 0x1a90 <conv_brk+0x174>
    196c:	2e 35       	cpi	r18, 0x5E	; 94
    196e:	11 f4       	brne	.+4      	; 0x1974 <conv_brk+0x58>
    1970:	00 97       	sbiw	r24, 0x00	; 0
    1972:	51 f1       	breq	.+84     	; 0x19c8 <conv_brk+0xac>
    1974:	43 2f       	mov	r20, r19
    1976:	50 e0       	ldi	r21, 0x00	; 0
    1978:	48 17       	cp	r20, r24
    197a:	59 07       	cpc	r21, r25
    197c:	3c f4       	brge	.+14     	; 0x198c <conv_brk+0x70>
    197e:	2d 35       	cpi	r18, 0x5D	; 93
    1980:	59 f1       	breq	.+86     	; 0x19d8 <conv_brk+0xbc>
    1982:	2d 32       	cpi	r18, 0x2D	; 45
    1984:	19 f4       	brne	.+6      	; 0x198c <conv_brk+0x70>
    1986:	77 20       	and	r7, r7
    1988:	09 f1       	breq	.+66     	; 0x19cc <conv_brk+0xb0>
    198a:	03 c0       	rjmp	.+6      	; 0x1992 <conv_brk+0x76>
    198c:	77 20       	and	r7, r7
    198e:	09 f4       	brne	.+2      	; 0x1992 <conv_brk+0x76>
    1990:	6a c0       	rjmp	.+212    	; 0x1a66 <conv_brk+0x14a>
    1992:	45 2d       	mov	r20, r5
    1994:	46 95       	lsr	r20
    1996:	46 95       	lsr	r20
    1998:	46 95       	lsr	r20
    199a:	d6 01       	movw	r26, r12
    199c:	a4 0f       	add	r26, r20
    199e:	b1 1d       	adc	r27, r1
    19a0:	45 2d       	mov	r20, r5
    19a2:	47 70       	andi	r20, 0x07	; 7
    19a4:	8b 01       	movw	r16, r22
    19a6:	02 c0       	rjmp	.+4      	; 0x19ac <conv_brk+0x90>
    19a8:	00 0f       	add	r16, r16
    19aa:	11 1f       	adc	r17, r17
    19ac:	4a 95       	dec	r20
    19ae:	e2 f7       	brpl	.-8      	; 0x19a8 <conv_brk+0x8c>
    19b0:	a8 01       	movw	r20, r16
    19b2:	5c 91       	ld	r21, X
    19b4:	45 2b       	or	r20, r21
    19b6:	4c 93       	st	X, r20
    19b8:	65 14       	cp	r6, r5
    19ba:	59 f0       	breq	.+22     	; 0x19d2 <conv_brk+0xb6>
    19bc:	56 14       	cp	r5, r6
    19be:	10 f4       	brcc	.+4      	; 0x19c4 <conv_brk+0xa8>
    19c0:	53 94       	inc	r5
    19c2:	e7 cf       	rjmp	.-50     	; 0x1992 <conv_brk+0x76>
    19c4:	5a 94       	dec	r5
    19c6:	e5 cf       	rjmp	.-54     	; 0x1992 <conv_brk+0x76>
    19c8:	31 e0       	ldi	r19, 0x01	; 1
    19ca:	04 c0       	rjmp	.+8      	; 0x19d4 <conv_brk+0xb8>
    19cc:	77 24       	eor	r7, r7
    19ce:	73 94       	inc	r7
    19d0:	01 c0       	rjmp	.+2      	; 0x19d4 <conv_brk+0xb8>
    19d2:	71 2c       	mov	r7, r1
    19d4:	01 96       	adiw	r24, 0x01	; 1
    19d6:	bf cf       	rjmp	.-130    	; 0x1956 <conv_brk+0x3a>
    19d8:	77 20       	and	r7, r7
    19da:	19 f0       	breq	.+6      	; 0x19e2 <conv_brk+0xc6>
    19dc:	8e 81       	ldd	r24, Y+6	; 0x06
    19de:	80 62       	ori	r24, 0x20	; 32
    19e0:	8e 83       	std	Y+6, r24	; 0x06
    19e2:	31 11       	cpse	r19, r1
    19e4:	03 c0       	rjmp	.+6      	; 0x19ec <conv_brk+0xd0>
    19e6:	88 24       	eor	r8, r8
    19e8:	83 94       	inc	r8
    19ea:	17 c0       	rjmp	.+46     	; 0x1a1a <conv_brk+0xfe>
    19ec:	f6 01       	movw	r30, r12
    19ee:	9e 01       	movw	r18, r28
    19f0:	2f 5d       	subi	r18, 0xDF	; 223
    19f2:	3f 4f       	sbci	r19, 0xFF	; 255
    19f4:	80 81       	ld	r24, Z
    19f6:	80 95       	com	r24
    19f8:	81 93       	st	Z+, r24
    19fa:	2e 17       	cp	r18, r30
    19fc:	3f 07       	cpc	r19, r31
    19fe:	d1 f7       	brne	.-12     	; 0x19f4 <conv_brk+0xd8>
    1a00:	f2 cf       	rjmp	.-28     	; 0x19e6 <conv_brk+0xca>
    1a02:	e1 14       	cp	r14, r1
    1a04:	f1 04       	cpc	r15, r1
    1a06:	29 f0       	breq	.+10     	; 0x1a12 <conv_brk+0xf6>
    1a08:	d7 01       	movw	r26, r14
    1a0a:	8c 93       	st	X, r24
    1a0c:	f7 01       	movw	r30, r14
    1a0e:	31 96       	adiw	r30, 0x01	; 1
    1a10:	7f 01       	movw	r14, r30
    1a12:	9a 94       	dec	r9
    1a14:	81 2c       	mov	r8, r1
    1a16:	99 20       	and	r9, r9
    1a18:	f9 f0       	breq	.+62     	; 0x1a58 <conv_brk+0x13c>
    1a1a:	c5 01       	movw	r24, r10
    1a1c:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    1a20:	97 fd       	sbrc	r25, 7
    1a22:	18 c0       	rjmp	.+48     	; 0x1a54 <conv_brk+0x138>
    1a24:	fc 01       	movw	r30, r24
    1a26:	ff 27       	eor	r31, r31
    1a28:	23 e0       	ldi	r18, 0x03	; 3
    1a2a:	f5 95       	asr	r31
    1a2c:	e7 95       	ror	r30
    1a2e:	2a 95       	dec	r18
    1a30:	e1 f7       	brne	.-8      	; 0x1a2a <conv_brk+0x10e>
    1a32:	ec 0d       	add	r30, r12
    1a34:	fd 1d       	adc	r31, r13
    1a36:	20 81       	ld	r18, Z
    1a38:	30 e0       	ldi	r19, 0x00	; 0
    1a3a:	ac 01       	movw	r20, r24
    1a3c:	47 70       	andi	r20, 0x07	; 7
    1a3e:	55 27       	eor	r21, r21
    1a40:	02 c0       	rjmp	.+4      	; 0x1a46 <conv_brk+0x12a>
    1a42:	35 95       	asr	r19
    1a44:	27 95       	ror	r18
    1a46:	4a 95       	dec	r20
    1a48:	e2 f7       	brpl	.-8      	; 0x1a42 <conv_brk+0x126>
    1a4a:	20 fd       	sbrc	r18, 0
    1a4c:	da cf       	rjmp	.-76     	; 0x1a02 <conv_brk+0xe6>
    1a4e:	b5 01       	movw	r22, r10
    1a50:	0e 94 33 11 	call	0x2266	; 0x2266 <ungetc>
    1a54:	81 10       	cpse	r8, r1
    1a56:	87 cf       	rjmp	.-242    	; 0x1966 <conv_brk+0x4a>
    1a58:	e1 14       	cp	r14, r1
    1a5a:	f1 04       	cpc	r15, r1
    1a5c:	11 f0       	breq	.+4      	; 0x1a62 <conv_brk+0x146>
    1a5e:	d7 01       	movw	r26, r14
    1a60:	1c 92       	st	X, r1
    1a62:	c8 01       	movw	r24, r16
    1a64:	15 c0       	rjmp	.+42     	; 0x1a90 <conv_brk+0x174>
    1a66:	42 2f       	mov	r20, r18
    1a68:	46 95       	lsr	r20
    1a6a:	46 95       	lsr	r20
    1a6c:	46 95       	lsr	r20
    1a6e:	d6 01       	movw	r26, r12
    1a70:	a4 0f       	add	r26, r20
    1a72:	b1 1d       	adc	r27, r1
    1a74:	42 2f       	mov	r20, r18
    1a76:	47 70       	andi	r20, 0x07	; 7
    1a78:	8b 01       	movw	r16, r22
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <conv_brk+0x164>
    1a7c:	00 0f       	add	r16, r16
    1a7e:	11 1f       	adc	r17, r17
    1a80:	4a 95       	dec	r20
    1a82:	e2 f7       	brpl	.-8      	; 0x1a7c <conv_brk+0x160>
    1a84:	a8 01       	movw	r20, r16
    1a86:	5c 91       	ld	r21, X
    1a88:	45 2b       	or	r20, r21
    1a8a:	4c 93       	st	X, r20
    1a8c:	62 2e       	mov	r6, r18
    1a8e:	a2 cf       	rjmp	.-188    	; 0x19d4 <conv_brk+0xb8>
    1a90:	a0 96       	adiw	r28, 0x20	; 32
    1a92:	ef e0       	ldi	r30, 0x0F	; 15
    1a94:	0c 94 cc 11 	jmp	0x2398	; 0x2398 <__epilogue_restores__+0x6>

00001a98 <vfscanf>:
    1a98:	a0 e0       	ldi	r26, 0x00	; 0
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	e2 e5       	ldi	r30, 0x52	; 82
    1a9e:	fd e0       	ldi	r31, 0x0D	; 13
    1aa0:	0c 94 b0 11 	jmp	0x2360	; 0x2360 <__prologue_saves__+0x6>
    1aa4:	6c 01       	movw	r12, r24
    1aa6:	eb 01       	movw	r28, r22
    1aa8:	5a 01       	movw	r10, r20
    1aaa:	fc 01       	movw	r30, r24
    1aac:	17 82       	std	Z+7, r1	; 0x07
    1aae:	16 82       	std	Z+6, r1	; 0x06
    1ab0:	51 2c       	mov	r5, r1
    1ab2:	f6 01       	movw	r30, r12
    1ab4:	e3 80       	ldd	r14, Z+3	; 0x03
    1ab6:	fe 01       	movw	r30, r28
    1ab8:	e3 fc       	sbrc	r14, 3
    1aba:	85 91       	lpm	r24, Z+
    1abc:	e3 fe       	sbrs	r14, 3
    1abe:	81 91       	ld	r24, Z+
    1ac0:	18 2f       	mov	r17, r24
    1ac2:	ef 01       	movw	r28, r30
    1ac4:	88 23       	and	r24, r24
    1ac6:	09 f4       	brne	.+2      	; 0x1aca <vfscanf+0x32>
    1ac8:	ee c0       	rjmp	.+476    	; 0x1ca6 <vfscanf+0x20e>
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	0e 94 8f 10 	call	0x211e	; 0x211e <isspace>
    1ad0:	89 2b       	or	r24, r25
    1ad2:	21 f0       	breq	.+8      	; 0x1adc <vfscanf+0x44>
    1ad4:	c6 01       	movw	r24, r12
    1ad6:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <skip_spaces>
    1ada:	eb cf       	rjmp	.-42     	; 0x1ab2 <vfscanf+0x1a>
    1adc:	15 32       	cpi	r17, 0x25	; 37
    1ade:	41 f4       	brne	.+16     	; 0x1af0 <vfscanf+0x58>
    1ae0:	fe 01       	movw	r30, r28
    1ae2:	e3 fc       	sbrc	r14, 3
    1ae4:	15 91       	lpm	r17, Z+
    1ae6:	e3 fe       	sbrs	r14, 3
    1ae8:	11 91       	ld	r17, Z+
    1aea:	ef 01       	movw	r28, r30
    1aec:	15 32       	cpi	r17, 0x25	; 37
    1aee:	81 f4       	brne	.+32     	; 0x1b10 <vfscanf+0x78>
    1af0:	c6 01       	movw	r24, r12
    1af2:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    1af6:	97 fd       	sbrc	r25, 7
    1af8:	d4 c0       	rjmp	.+424    	; 0x1ca2 <vfscanf+0x20a>
    1afa:	41 2f       	mov	r20, r17
    1afc:	50 e0       	ldi	r21, 0x00	; 0
    1afe:	9c 01       	movw	r18, r24
    1b00:	33 27       	eor	r19, r19
    1b02:	24 17       	cp	r18, r20
    1b04:	35 07       	cpc	r19, r21
    1b06:	a9 f2       	breq	.-86     	; 0x1ab2 <vfscanf+0x1a>
    1b08:	b6 01       	movw	r22, r12
    1b0a:	0e 94 33 11 	call	0x2266	; 0x2266 <ungetc>
    1b0e:	cb c0       	rjmp	.+406    	; 0x1ca6 <vfscanf+0x20e>
    1b10:	1a 32       	cpi	r17, 0x2A	; 42
    1b12:	39 f4       	brne	.+14     	; 0x1b22 <vfscanf+0x8a>
    1b14:	e3 fc       	sbrc	r14, 3
    1b16:	15 91       	lpm	r17, Z+
    1b18:	e3 fe       	sbrs	r14, 3
    1b1a:	11 91       	ld	r17, Z+
    1b1c:	ef 01       	movw	r28, r30
    1b1e:	01 e0       	ldi	r16, 0x01	; 1
    1b20:	01 c0       	rjmp	.+2      	; 0x1b24 <vfscanf+0x8c>
    1b22:	00 e0       	ldi	r16, 0x00	; 0
    1b24:	f1 2c       	mov	r15, r1
    1b26:	20 ed       	ldi	r18, 0xD0	; 208
    1b28:	21 0f       	add	r18, r17
    1b2a:	2a 30       	cpi	r18, 0x0A	; 10
    1b2c:	80 f4       	brcc	.+32     	; 0x1b4e <vfscanf+0xb6>
    1b2e:	02 60       	ori	r16, 0x02	; 2
    1b30:	6f 2d       	mov	r22, r15
    1b32:	70 e0       	ldi	r23, 0x00	; 0
    1b34:	80 e0       	ldi	r24, 0x00	; 0
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	40 e2       	ldi	r20, 0x20	; 32
    1b3a:	0e 94 bc 0b 	call	0x1778	; 0x1778 <mulacc>
    1b3e:	f6 2e       	mov	r15, r22
    1b40:	fe 01       	movw	r30, r28
    1b42:	e3 fc       	sbrc	r14, 3
    1b44:	15 91       	lpm	r17, Z+
    1b46:	e3 fe       	sbrs	r14, 3
    1b48:	11 91       	ld	r17, Z+
    1b4a:	ef 01       	movw	r28, r30
    1b4c:	ec cf       	rjmp	.-40     	; 0x1b26 <vfscanf+0x8e>
    1b4e:	01 ff       	sbrs	r16, 1
    1b50:	03 c0       	rjmp	.+6      	; 0x1b58 <vfscanf+0xc0>
    1b52:	f1 10       	cpse	r15, r1
    1b54:	03 c0       	rjmp	.+6      	; 0x1b5c <vfscanf+0xc4>
    1b56:	a7 c0       	rjmp	.+334    	; 0x1ca6 <vfscanf+0x20e>
    1b58:	ff 24       	eor	r15, r15
    1b5a:	fa 94       	dec	r15
    1b5c:	18 36       	cpi	r17, 0x68	; 104
    1b5e:	19 f0       	breq	.+6      	; 0x1b66 <vfscanf+0xce>
    1b60:	1c 36       	cpi	r17, 0x6C	; 108
    1b62:	51 f0       	breq	.+20     	; 0x1b78 <vfscanf+0xe0>
    1b64:	10 c0       	rjmp	.+32     	; 0x1b86 <vfscanf+0xee>
    1b66:	fe 01       	movw	r30, r28
    1b68:	e3 fc       	sbrc	r14, 3
    1b6a:	15 91       	lpm	r17, Z+
    1b6c:	e3 fe       	sbrs	r14, 3
    1b6e:	11 91       	ld	r17, Z+
    1b70:	ef 01       	movw	r28, r30
    1b72:	18 36       	cpi	r17, 0x68	; 104
    1b74:	41 f4       	brne	.+16     	; 0x1b86 <vfscanf+0xee>
    1b76:	08 60       	ori	r16, 0x08	; 8
    1b78:	04 60       	ori	r16, 0x04	; 4
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	e3 fc       	sbrc	r14, 3
    1b7e:	15 91       	lpm	r17, Z+
    1b80:	e3 fe       	sbrs	r14, 3
    1b82:	11 91       	ld	r17, Z+
    1b84:	ef 01       	movw	r28, r30
    1b86:	11 23       	and	r17, r17
    1b88:	09 f4       	brne	.+2      	; 0x1b8c <vfscanf+0xf4>
    1b8a:	8d c0       	rjmp	.+282    	; 0x1ca6 <vfscanf+0x20e>
    1b8c:	61 2f       	mov	r22, r17
    1b8e:	70 e0       	ldi	r23, 0x00	; 0
    1b90:	84 e5       	ldi	r24, 0x54	; 84
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	0e 94 98 10 	call	0x2130	; 0x2130 <strchr_P>
    1b98:	89 2b       	or	r24, r25
    1b9a:	09 f4       	brne	.+2      	; 0x1b9e <vfscanf+0x106>
    1b9c:	84 c0       	rjmp	.+264    	; 0x1ca6 <vfscanf+0x20e>
    1b9e:	00 fd       	sbrc	r16, 0
    1ba0:	07 c0       	rjmp	.+14     	; 0x1bb0 <vfscanf+0x118>
    1ba2:	f5 01       	movw	r30, r10
    1ba4:	80 80       	ld	r8, Z
    1ba6:	91 80       	ldd	r9, Z+1	; 0x01
    1ba8:	c5 01       	movw	r24, r10
    1baa:	02 96       	adiw	r24, 0x02	; 2
    1bac:	5c 01       	movw	r10, r24
    1bae:	02 c0       	rjmp	.+4      	; 0x1bb4 <vfscanf+0x11c>
    1bb0:	81 2c       	mov	r8, r1
    1bb2:	91 2c       	mov	r9, r1
    1bb4:	1e 36       	cpi	r17, 0x6E	; 110
    1bb6:	51 f4       	brne	.+20     	; 0x1bcc <vfscanf+0x134>
    1bb8:	f6 01       	movw	r30, r12
    1bba:	46 81       	ldd	r20, Z+6	; 0x06
    1bbc:	57 81       	ldd	r21, Z+7	; 0x07
    1bbe:	60 e0       	ldi	r22, 0x00	; 0
    1bc0:	70 e0       	ldi	r23, 0x00	; 0
    1bc2:	20 2f       	mov	r18, r16
    1bc4:	c4 01       	movw	r24, r8
    1bc6:	0e 94 b0 0b 	call	0x1760	; 0x1760 <putval>
    1bca:	73 cf       	rjmp	.-282    	; 0x1ab2 <vfscanf+0x1a>
    1bcc:	13 36       	cpi	r17, 0x63	; 99
    1bce:	a9 f4       	brne	.+42     	; 0x1bfa <vfscanf+0x162>
    1bd0:	01 fd       	sbrc	r16, 1
    1bd2:	02 c0       	rjmp	.+4      	; 0x1bd8 <vfscanf+0x140>
    1bd4:	ff 24       	eor	r15, r15
    1bd6:	f3 94       	inc	r15
    1bd8:	c6 01       	movw	r24, r12
    1bda:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    1bde:	97 fd       	sbrc	r25, 7
    1be0:	60 c0       	rjmp	.+192    	; 0x1ca2 <vfscanf+0x20a>
    1be2:	81 14       	cp	r8, r1
    1be4:	91 04       	cpc	r9, r1
    1be6:	29 f0       	breq	.+10     	; 0x1bf2 <vfscanf+0x15a>
    1be8:	f4 01       	movw	r30, r8
    1bea:	80 83       	st	Z, r24
    1bec:	c4 01       	movw	r24, r8
    1bee:	01 96       	adiw	r24, 0x01	; 1
    1bf0:	4c 01       	movw	r8, r24
    1bf2:	fa 94       	dec	r15
    1bf4:	f1 10       	cpse	r15, r1
    1bf6:	f0 cf       	rjmp	.-32     	; 0x1bd8 <vfscanf+0x140>
    1bf8:	50 c0       	rjmp	.+160    	; 0x1c9a <vfscanf+0x202>
    1bfa:	1b 35       	cpi	r17, 0x5B	; 91
    1bfc:	59 f4       	brne	.+22     	; 0x1c14 <vfscanf+0x17c>
    1bfe:	9e 01       	movw	r18, r28
    1c00:	a4 01       	movw	r20, r8
    1c02:	6f 2d       	mov	r22, r15
    1c04:	c6 01       	movw	r24, r12
    1c06:	0e 94 8e 0c 	call	0x191c	; 0x191c <conv_brk>
    1c0a:	ec 01       	movw	r28, r24
    1c0c:	89 2b       	or	r24, r25
    1c0e:	09 f0       	breq	.+2      	; 0x1c12 <vfscanf+0x17a>
    1c10:	44 c0       	rjmp	.+136    	; 0x1c9a <vfscanf+0x202>
    1c12:	3e c0       	rjmp	.+124    	; 0x1c90 <vfscanf+0x1f8>
    1c14:	c6 01       	movw	r24, r12
    1c16:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <skip_spaces>
    1c1a:	97 fd       	sbrc	r25, 7
    1c1c:	42 c0       	rjmp	.+132    	; 0x1ca2 <vfscanf+0x20a>
    1c1e:	1f 36       	cpi	r17, 0x6F	; 111
    1c20:	61 f1       	breq	.+88     	; 0x1c7a <vfscanf+0x1e2>
    1c22:	28 f4       	brcc	.+10     	; 0x1c2e <vfscanf+0x196>
    1c24:	14 36       	cpi	r17, 0x64	; 100
    1c26:	39 f1       	breq	.+78     	; 0x1c76 <vfscanf+0x1de>
    1c28:	19 36       	cpi	r17, 0x69	; 105
    1c2a:	51 f1       	breq	.+84     	; 0x1c80 <vfscanf+0x1e8>
    1c2c:	28 c0       	rjmp	.+80     	; 0x1c7e <vfscanf+0x1e6>
    1c2e:	13 37       	cpi	r17, 0x73	; 115
    1c30:	71 f0       	breq	.+28     	; 0x1c4e <vfscanf+0x1b6>
    1c32:	15 37       	cpi	r17, 0x75	; 117
    1c34:	01 f1       	breq	.+64     	; 0x1c76 <vfscanf+0x1de>
    1c36:	23 c0       	rjmp	.+70     	; 0x1c7e <vfscanf+0x1e6>
    1c38:	81 14       	cp	r8, r1
    1c3a:	91 04       	cpc	r9, r1
    1c3c:	29 f0       	breq	.+10     	; 0x1c48 <vfscanf+0x1b0>
    1c3e:	f4 01       	movw	r30, r8
    1c40:	60 82       	st	Z, r6
    1c42:	c4 01       	movw	r24, r8
    1c44:	01 96       	adiw	r24, 0x01	; 1
    1c46:	4c 01       	movw	r8, r24
    1c48:	fa 94       	dec	r15
    1c4a:	ff 20       	and	r15, r15
    1c4c:	71 f0       	breq	.+28     	; 0x1c6a <vfscanf+0x1d2>
    1c4e:	c6 01       	movw	r24, r12
    1c50:	0e 94 b9 10 	call	0x2172	; 0x2172 <fgetc>
    1c54:	3c 01       	movw	r6, r24
    1c56:	97 fd       	sbrc	r25, 7
    1c58:	08 c0       	rjmp	.+16     	; 0x1c6a <vfscanf+0x1d2>
    1c5a:	0e 94 8f 10 	call	0x211e	; 0x211e <isspace>
    1c5e:	89 2b       	or	r24, r25
    1c60:	59 f3       	breq	.-42     	; 0x1c38 <vfscanf+0x1a0>
    1c62:	b6 01       	movw	r22, r12
    1c64:	c3 01       	movw	r24, r6
    1c66:	0e 94 33 11 	call	0x2266	; 0x2266 <ungetc>
    1c6a:	81 14       	cp	r8, r1
    1c6c:	91 04       	cpc	r9, r1
    1c6e:	a9 f0       	breq	.+42     	; 0x1c9a <vfscanf+0x202>
    1c70:	f4 01       	movw	r30, r8
    1c72:	10 82       	st	Z, r1
    1c74:	12 c0       	rjmp	.+36     	; 0x1c9a <vfscanf+0x202>
    1c76:	00 62       	ori	r16, 0x20	; 32
    1c78:	03 c0       	rjmp	.+6      	; 0x1c80 <vfscanf+0x1e8>
    1c7a:	00 61       	ori	r16, 0x10	; 16
    1c7c:	01 c0       	rjmp	.+2      	; 0x1c80 <vfscanf+0x1e8>
    1c7e:	00 64       	ori	r16, 0x40	; 64
    1c80:	20 2f       	mov	r18, r16
    1c82:	a4 01       	movw	r20, r8
    1c84:	6f 2d       	mov	r22, r15
    1c86:	c6 01       	movw	r24, r12
    1c88:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <conv_int>
    1c8c:	81 11       	cpse	r24, r1
    1c8e:	05 c0       	rjmp	.+10     	; 0x1c9a <vfscanf+0x202>
    1c90:	f6 01       	movw	r30, r12
    1c92:	83 81       	ldd	r24, Z+3	; 0x03
    1c94:	80 73       	andi	r24, 0x30	; 48
    1c96:	29 f4       	brne	.+10     	; 0x1ca2 <vfscanf+0x20a>
    1c98:	06 c0       	rjmp	.+12     	; 0x1ca6 <vfscanf+0x20e>
    1c9a:	00 fd       	sbrc	r16, 0
    1c9c:	0a cf       	rjmp	.-492    	; 0x1ab2 <vfscanf+0x1a>
    1c9e:	53 94       	inc	r5
    1ca0:	08 cf       	rjmp	.-496    	; 0x1ab2 <vfscanf+0x1a>
    1ca2:	55 20       	and	r5, r5
    1ca4:	19 f0       	breq	.+6      	; 0x1cac <vfscanf+0x214>
    1ca6:	85 2d       	mov	r24, r5
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	02 c0       	rjmp	.+4      	; 0x1cb0 <vfscanf+0x218>
    1cac:	8f ef       	ldi	r24, 0xFF	; 255
    1cae:	9f ef       	ldi	r25, 0xFF	; 255
    1cb0:	cd b7       	in	r28, 0x3d	; 61
    1cb2:	de b7       	in	r29, 0x3e	; 62
    1cb4:	ef e0       	ldi	r30, 0x0F	; 15
    1cb6:	0c 94 cc 11 	jmp	0x2398	; 0x2398 <__epilogue_restores__+0x6>

00001cba <dtoa_prf>:
    1cba:	a9 e0       	ldi	r26, 0x09	; 9
    1cbc:	b0 e0       	ldi	r27, 0x00	; 0
    1cbe:	e3 e6       	ldi	r30, 0x63	; 99
    1cc0:	fe e0       	ldi	r31, 0x0E	; 14
    1cc2:	0c 94 b3 11 	jmp	0x2366	; 0x2366 <__prologue_saves__+0xc>
    1cc6:	6a 01       	movw	r12, r20
    1cc8:	12 2f       	mov	r17, r18
    1cca:	b0 2e       	mov	r11, r16
    1ccc:	2b e3       	ldi	r18, 0x3B	; 59
    1cce:	20 17       	cp	r18, r16
    1cd0:	20 f0       	brcs	.+8      	; 0x1cda <dtoa_prf+0x20>
    1cd2:	ff 24       	eor	r15, r15
    1cd4:	f3 94       	inc	r15
    1cd6:	f0 0e       	add	r15, r16
    1cd8:	02 c0       	rjmp	.+4      	; 0x1cde <dtoa_prf+0x24>
    1cda:	2c e3       	ldi	r18, 0x3C	; 60
    1cdc:	f2 2e       	mov	r15, r18
    1cde:	0f 2d       	mov	r16, r15
    1ce0:	27 e0       	ldi	r18, 0x07	; 7
    1ce2:	ae 01       	movw	r20, r28
    1ce4:	4f 5f       	subi	r20, 0xFF	; 255
    1ce6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce8:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__ftoa_engine>
    1cec:	bc 01       	movw	r22, r24
    1cee:	49 81       	ldd	r20, Y+1	; 0x01
    1cf0:	84 2f       	mov	r24, r20
    1cf2:	89 70       	andi	r24, 0x09	; 9
    1cf4:	81 30       	cpi	r24, 0x01	; 1
    1cf6:	31 f0       	breq	.+12     	; 0x1d04 <dtoa_prf+0x4a>
    1cf8:	e1 fc       	sbrc	r14, 1
    1cfa:	06 c0       	rjmp	.+12     	; 0x1d08 <dtoa_prf+0x4e>
    1cfc:	e0 fe       	sbrs	r14, 0
    1cfe:	06 c0       	rjmp	.+12     	; 0x1d0c <dtoa_prf+0x52>
    1d00:	90 e2       	ldi	r25, 0x20	; 32
    1d02:	05 c0       	rjmp	.+10     	; 0x1d0e <dtoa_prf+0x54>
    1d04:	9d e2       	ldi	r25, 0x2D	; 45
    1d06:	03 c0       	rjmp	.+6      	; 0x1d0e <dtoa_prf+0x54>
    1d08:	9b e2       	ldi	r25, 0x2B	; 43
    1d0a:	01 c0       	rjmp	.+2      	; 0x1d0e <dtoa_prf+0x54>
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	5e 2d       	mov	r21, r14
    1d10:	50 71       	andi	r21, 0x10	; 16
    1d12:	43 ff       	sbrs	r20, 3
    1d14:	3c c0       	rjmp	.+120    	; 0x1d8e <dtoa_prf+0xd4>
    1d16:	91 11       	cpse	r25, r1
    1d18:	02 c0       	rjmp	.+4      	; 0x1d1e <dtoa_prf+0x64>
    1d1a:	83 e0       	ldi	r24, 0x03	; 3
    1d1c:	01 c0       	rjmp	.+2      	; 0x1d20 <dtoa_prf+0x66>
    1d1e:	84 e0       	ldi	r24, 0x04	; 4
    1d20:	81 17       	cp	r24, r17
    1d22:	18 f4       	brcc	.+6      	; 0x1d2a <dtoa_prf+0x70>
    1d24:	21 2f       	mov	r18, r17
    1d26:	28 1b       	sub	r18, r24
    1d28:	01 c0       	rjmp	.+2      	; 0x1d2c <dtoa_prf+0x72>
    1d2a:	20 e0       	ldi	r18, 0x00	; 0
    1d2c:	51 11       	cpse	r21, r1
    1d2e:	0b c0       	rjmp	.+22     	; 0x1d46 <dtoa_prf+0x8c>
    1d30:	f6 01       	movw	r30, r12
    1d32:	82 2f       	mov	r24, r18
    1d34:	30 e2       	ldi	r19, 0x20	; 32
    1d36:	88 23       	and	r24, r24
    1d38:	19 f0       	breq	.+6      	; 0x1d40 <dtoa_prf+0x86>
    1d3a:	31 93       	st	Z+, r19
    1d3c:	81 50       	subi	r24, 0x01	; 1
    1d3e:	fb cf       	rjmp	.-10     	; 0x1d36 <dtoa_prf+0x7c>
    1d40:	c2 0e       	add	r12, r18
    1d42:	d1 1c       	adc	r13, r1
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	99 23       	and	r25, r25
    1d48:	29 f0       	breq	.+10     	; 0x1d54 <dtoa_prf+0x9a>
    1d4a:	d6 01       	movw	r26, r12
    1d4c:	9c 93       	st	X, r25
    1d4e:	f6 01       	movw	r30, r12
    1d50:	31 96       	adiw	r30, 0x01	; 1
    1d52:	6f 01       	movw	r12, r30
    1d54:	c6 01       	movw	r24, r12
    1d56:	03 96       	adiw	r24, 0x03	; 3
    1d58:	e2 fe       	sbrs	r14, 2
    1d5a:	0a c0       	rjmp	.+20     	; 0x1d70 <dtoa_prf+0xb6>
    1d5c:	3e e4       	ldi	r19, 0x4E	; 78
    1d5e:	d6 01       	movw	r26, r12
    1d60:	3c 93       	st	X, r19
    1d62:	41 e4       	ldi	r20, 0x41	; 65
    1d64:	11 96       	adiw	r26, 0x01	; 1
    1d66:	4c 93       	st	X, r20
    1d68:	11 97       	sbiw	r26, 0x01	; 1
    1d6a:	12 96       	adiw	r26, 0x02	; 2
    1d6c:	3c 93       	st	X, r19
    1d6e:	06 c0       	rjmp	.+12     	; 0x1d7c <dtoa_prf+0xc2>
    1d70:	3e e6       	ldi	r19, 0x6E	; 110
    1d72:	f6 01       	movw	r30, r12
    1d74:	30 83       	st	Z, r19
    1d76:	41 e6       	ldi	r20, 0x61	; 97
    1d78:	41 83       	std	Z+1, r20	; 0x01
    1d7a:	32 83       	std	Z+2, r19	; 0x02
    1d7c:	fc 01       	movw	r30, r24
    1d7e:	32 2f       	mov	r19, r18
    1d80:	40 e2       	ldi	r20, 0x20	; 32
    1d82:	33 23       	and	r19, r19
    1d84:	09 f4       	brne	.+2      	; 0x1d88 <dtoa_prf+0xce>
    1d86:	42 c0       	rjmp	.+132    	; 0x1e0c <dtoa_prf+0x152>
    1d88:	41 93       	st	Z+, r20
    1d8a:	31 50       	subi	r19, 0x01	; 1
    1d8c:	fa cf       	rjmp	.-12     	; 0x1d82 <dtoa_prf+0xc8>
    1d8e:	42 ff       	sbrs	r20, 2
    1d90:	44 c0       	rjmp	.+136    	; 0x1e1a <dtoa_prf+0x160>
    1d92:	91 11       	cpse	r25, r1
    1d94:	02 c0       	rjmp	.+4      	; 0x1d9a <dtoa_prf+0xe0>
    1d96:	83 e0       	ldi	r24, 0x03	; 3
    1d98:	01 c0       	rjmp	.+2      	; 0x1d9c <dtoa_prf+0xe2>
    1d9a:	84 e0       	ldi	r24, 0x04	; 4
    1d9c:	81 17       	cp	r24, r17
    1d9e:	18 f4       	brcc	.+6      	; 0x1da6 <dtoa_prf+0xec>
    1da0:	21 2f       	mov	r18, r17
    1da2:	28 1b       	sub	r18, r24
    1da4:	01 c0       	rjmp	.+2      	; 0x1da8 <dtoa_prf+0xee>
    1da6:	20 e0       	ldi	r18, 0x00	; 0
    1da8:	51 11       	cpse	r21, r1
    1daa:	0b c0       	rjmp	.+22     	; 0x1dc2 <dtoa_prf+0x108>
    1dac:	f6 01       	movw	r30, r12
    1dae:	82 2f       	mov	r24, r18
    1db0:	30 e2       	ldi	r19, 0x20	; 32
    1db2:	88 23       	and	r24, r24
    1db4:	19 f0       	breq	.+6      	; 0x1dbc <dtoa_prf+0x102>
    1db6:	31 93       	st	Z+, r19
    1db8:	81 50       	subi	r24, 0x01	; 1
    1dba:	fb cf       	rjmp	.-10     	; 0x1db2 <dtoa_prf+0xf8>
    1dbc:	c2 0e       	add	r12, r18
    1dbe:	d1 1c       	adc	r13, r1
    1dc0:	20 e0       	ldi	r18, 0x00	; 0
    1dc2:	99 23       	and	r25, r25
    1dc4:	29 f0       	breq	.+10     	; 0x1dd0 <dtoa_prf+0x116>
    1dc6:	d6 01       	movw	r26, r12
    1dc8:	9c 93       	st	X, r25
    1dca:	f6 01       	movw	r30, r12
    1dcc:	31 96       	adiw	r30, 0x01	; 1
    1dce:	6f 01       	movw	r12, r30
    1dd0:	c6 01       	movw	r24, r12
    1dd2:	03 96       	adiw	r24, 0x03	; 3
    1dd4:	e2 fe       	sbrs	r14, 2
    1dd6:	0b c0       	rjmp	.+22     	; 0x1dee <dtoa_prf+0x134>
    1dd8:	39 e4       	ldi	r19, 0x49	; 73
    1dda:	d6 01       	movw	r26, r12
    1ddc:	3c 93       	st	X, r19
    1dde:	3e e4       	ldi	r19, 0x4E	; 78
    1de0:	11 96       	adiw	r26, 0x01	; 1
    1de2:	3c 93       	st	X, r19
    1de4:	11 97       	sbiw	r26, 0x01	; 1
    1de6:	36 e4       	ldi	r19, 0x46	; 70
    1de8:	12 96       	adiw	r26, 0x02	; 2
    1dea:	3c 93       	st	X, r19
    1dec:	07 c0       	rjmp	.+14     	; 0x1dfc <dtoa_prf+0x142>
    1dee:	39 e6       	ldi	r19, 0x69	; 105
    1df0:	f6 01       	movw	r30, r12
    1df2:	30 83       	st	Z, r19
    1df4:	3e e6       	ldi	r19, 0x6E	; 110
    1df6:	31 83       	std	Z+1, r19	; 0x01
    1df8:	36 e6       	ldi	r19, 0x66	; 102
    1dfa:	32 83       	std	Z+2, r19	; 0x02
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	32 2f       	mov	r19, r18
    1e00:	40 e2       	ldi	r20, 0x20	; 32
    1e02:	33 23       	and	r19, r19
    1e04:	19 f0       	breq	.+6      	; 0x1e0c <dtoa_prf+0x152>
    1e06:	41 93       	st	Z+, r20
    1e08:	31 50       	subi	r19, 0x01	; 1
    1e0a:	fb cf       	rjmp	.-10     	; 0x1e02 <dtoa_prf+0x148>
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	e2 0f       	add	r30, r18
    1e10:	f1 1d       	adc	r31, r1
    1e12:	10 82       	st	Z, r1
    1e14:	8e ef       	ldi	r24, 0xFE	; 254
    1e16:	9f ef       	ldi	r25, 0xFF	; 255
    1e18:	a6 c0       	rjmp	.+332    	; 0x1f66 <dtoa_prf+0x2ac>
    1e1a:	21 e0       	ldi	r18, 0x01	; 1
    1e1c:	30 e0       	ldi	r19, 0x00	; 0
    1e1e:	91 11       	cpse	r25, r1
    1e20:	02 c0       	rjmp	.+4      	; 0x1e26 <dtoa_prf+0x16c>
    1e22:	20 e0       	ldi	r18, 0x00	; 0
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	16 16       	cp	r1, r22
    1e28:	17 06       	cpc	r1, r23
    1e2a:	1c f4       	brge	.+6      	; 0x1e32 <dtoa_prf+0x178>
    1e2c:	fb 01       	movw	r30, r22
    1e2e:	31 96       	adiw	r30, 0x01	; 1
    1e30:	02 c0       	rjmp	.+4      	; 0x1e36 <dtoa_prf+0x17c>
    1e32:	e1 e0       	ldi	r30, 0x01	; 1
    1e34:	f0 e0       	ldi	r31, 0x00	; 0
    1e36:	2e 0f       	add	r18, r30
    1e38:	3f 1f       	adc	r19, r31
    1e3a:	bb 20       	and	r11, r11
    1e3c:	21 f0       	breq	.+8      	; 0x1e46 <dtoa_prf+0x18c>
    1e3e:	eb 2d       	mov	r30, r11
    1e40:	f0 e0       	ldi	r31, 0x00	; 0
    1e42:	31 96       	adiw	r30, 0x01	; 1
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <dtoa_prf+0x190>
    1e46:	e0 e0       	ldi	r30, 0x00	; 0
    1e48:	f0 e0       	ldi	r31, 0x00	; 0
    1e4a:	2e 0f       	add	r18, r30
    1e4c:	3f 1f       	adc	r19, r31
    1e4e:	e1 2f       	mov	r30, r17
    1e50:	f0 e0       	ldi	r31, 0x00	; 0
    1e52:	2e 17       	cp	r18, r30
    1e54:	3f 07       	cpc	r19, r31
    1e56:	1c f4       	brge	.+6      	; 0x1e5e <dtoa_prf+0x1a4>
    1e58:	12 1b       	sub	r17, r18
    1e5a:	21 2f       	mov	r18, r17
    1e5c:	01 c0       	rjmp	.+2      	; 0x1e60 <dtoa_prf+0x1a6>
    1e5e:	20 e0       	ldi	r18, 0x00	; 0
    1e60:	8e 2d       	mov	r24, r14
    1e62:	88 71       	andi	r24, 0x18	; 24
    1e64:	59 f4       	brne	.+22     	; 0x1e7c <dtoa_prf+0x1c2>
    1e66:	f6 01       	movw	r30, r12
    1e68:	82 2f       	mov	r24, r18
    1e6a:	30 e2       	ldi	r19, 0x20	; 32
    1e6c:	88 23       	and	r24, r24
    1e6e:	19 f0       	breq	.+6      	; 0x1e76 <dtoa_prf+0x1bc>
    1e70:	31 93       	st	Z+, r19
    1e72:	81 50       	subi	r24, 0x01	; 1
    1e74:	fb cf       	rjmp	.-10     	; 0x1e6c <dtoa_prf+0x1b2>
    1e76:	c2 0e       	add	r12, r18
    1e78:	d1 1c       	adc	r13, r1
    1e7a:	20 e0       	ldi	r18, 0x00	; 0
    1e7c:	99 23       	and	r25, r25
    1e7e:	29 f0       	breq	.+10     	; 0x1e8a <dtoa_prf+0x1d0>
    1e80:	d6 01       	movw	r26, r12
    1e82:	9c 93       	st	X, r25
    1e84:	f6 01       	movw	r30, r12
    1e86:	31 96       	adiw	r30, 0x01	; 1
    1e88:	6f 01       	movw	r12, r30
    1e8a:	51 11       	cpse	r21, r1
    1e8c:	0b c0       	rjmp	.+22     	; 0x1ea4 <dtoa_prf+0x1ea>
    1e8e:	f6 01       	movw	r30, r12
    1e90:	82 2f       	mov	r24, r18
    1e92:	90 e3       	ldi	r25, 0x30	; 48
    1e94:	88 23       	and	r24, r24
    1e96:	19 f0       	breq	.+6      	; 0x1e9e <dtoa_prf+0x1e4>
    1e98:	91 93       	st	Z+, r25
    1e9a:	81 50       	subi	r24, 0x01	; 1
    1e9c:	fb cf       	rjmp	.-10     	; 0x1e94 <dtoa_prf+0x1da>
    1e9e:	c2 0e       	add	r12, r18
    1ea0:	d1 1c       	adc	r13, r1
    1ea2:	20 e0       	ldi	r18, 0x00	; 0
    1ea4:	0f 2d       	mov	r16, r15
    1ea6:	06 0f       	add	r16, r22
    1ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    1eaa:	34 2f       	mov	r19, r20
    1eac:	30 71       	andi	r19, 0x10	; 16
    1eae:	44 ff       	sbrs	r20, 4
    1eb0:	03 c0       	rjmp	.+6      	; 0x1eb8 <dtoa_prf+0x1fe>
    1eb2:	91 33       	cpi	r25, 0x31	; 49
    1eb4:	09 f4       	brne	.+2      	; 0x1eb8 <dtoa_prf+0x1fe>
    1eb6:	01 50       	subi	r16, 0x01	; 1
    1eb8:	10 16       	cp	r1, r16
    1eba:	24 f4       	brge	.+8      	; 0x1ec4 <dtoa_prf+0x20a>
    1ebc:	09 30       	cpi	r16, 0x09	; 9
    1ebe:	18 f0       	brcs	.+6      	; 0x1ec6 <dtoa_prf+0x20c>
    1ec0:	08 e0       	ldi	r16, 0x08	; 8
    1ec2:	01 c0       	rjmp	.+2      	; 0x1ec6 <dtoa_prf+0x20c>
    1ec4:	01 e0       	ldi	r16, 0x01	; 1
    1ec6:	ab 01       	movw	r20, r22
    1ec8:	77 ff       	sbrs	r23, 7
    1eca:	02 c0       	rjmp	.+4      	; 0x1ed0 <dtoa_prf+0x216>
    1ecc:	40 e0       	ldi	r20, 0x00	; 0
    1ece:	50 e0       	ldi	r21, 0x00	; 0
    1ed0:	fb 01       	movw	r30, r22
    1ed2:	e4 1b       	sub	r30, r20
    1ed4:	f5 0b       	sbc	r31, r21
    1ed6:	a1 e0       	ldi	r26, 0x01	; 1
    1ed8:	b0 e0       	ldi	r27, 0x00	; 0
    1eda:	ac 0f       	add	r26, r28
    1edc:	bd 1f       	adc	r27, r29
    1ede:	ea 0f       	add	r30, r26
    1ee0:	fb 1f       	adc	r31, r27
    1ee2:	8e e2       	ldi	r24, 0x2E	; 46
    1ee4:	a8 2e       	mov	r10, r24
    1ee6:	4b 01       	movw	r8, r22
    1ee8:	80 1a       	sub	r8, r16
    1eea:	91 08       	sbc	r9, r1
    1eec:	0b 2d       	mov	r16, r11
    1eee:	10 e0       	ldi	r17, 0x00	; 0
    1ef0:	11 95       	neg	r17
    1ef2:	01 95       	neg	r16
    1ef4:	11 09       	sbc	r17, r1
    1ef6:	4f 3f       	cpi	r20, 0xFF	; 255
    1ef8:	bf ef       	ldi	r27, 0xFF	; 255
    1efa:	5b 07       	cpc	r21, r27
    1efc:	21 f4       	brne	.+8      	; 0x1f06 <dtoa_prf+0x24c>
    1efe:	d6 01       	movw	r26, r12
    1f00:	ac 92       	st	X, r10
    1f02:	11 96       	adiw	r26, 0x01	; 1
    1f04:	6d 01       	movw	r12, r26
    1f06:	64 17       	cp	r22, r20
    1f08:	75 07       	cpc	r23, r21
    1f0a:	2c f0       	brlt	.+10     	; 0x1f16 <dtoa_prf+0x25c>
    1f0c:	84 16       	cp	r8, r20
    1f0e:	95 06       	cpc	r9, r21
    1f10:	14 f4       	brge	.+4      	; 0x1f16 <dtoa_prf+0x25c>
    1f12:	81 81       	ldd	r24, Z+1	; 0x01
    1f14:	01 c0       	rjmp	.+2      	; 0x1f18 <dtoa_prf+0x25e>
    1f16:	80 e3       	ldi	r24, 0x30	; 48
    1f18:	41 50       	subi	r20, 0x01	; 1
    1f1a:	51 09       	sbc	r21, r1
    1f1c:	31 96       	adiw	r30, 0x01	; 1
    1f1e:	d6 01       	movw	r26, r12
    1f20:	11 96       	adiw	r26, 0x01	; 1
    1f22:	7d 01       	movw	r14, r26
    1f24:	40 17       	cp	r20, r16
    1f26:	51 07       	cpc	r21, r17
    1f28:	24 f0       	brlt	.+8      	; 0x1f32 <dtoa_prf+0x278>
    1f2a:	d6 01       	movw	r26, r12
    1f2c:	8c 93       	st	X, r24
    1f2e:	67 01       	movw	r12, r14
    1f30:	e2 cf       	rjmp	.-60     	; 0x1ef6 <dtoa_prf+0x23c>
    1f32:	64 17       	cp	r22, r20
    1f34:	75 07       	cpc	r23, r21
    1f36:	39 f4       	brne	.+14     	; 0x1f46 <dtoa_prf+0x28c>
    1f38:	96 33       	cpi	r25, 0x36	; 54
    1f3a:	20 f4       	brcc	.+8      	; 0x1f44 <dtoa_prf+0x28a>
    1f3c:	95 33       	cpi	r25, 0x35	; 53
    1f3e:	19 f4       	brne	.+6      	; 0x1f46 <dtoa_prf+0x28c>
    1f40:	31 11       	cpse	r19, r1
    1f42:	01 c0       	rjmp	.+2      	; 0x1f46 <dtoa_prf+0x28c>
    1f44:	81 e3       	ldi	r24, 0x31	; 49
    1f46:	f6 01       	movw	r30, r12
    1f48:	80 83       	st	Z, r24
    1f4a:	f7 01       	movw	r30, r14
    1f4c:	82 2f       	mov	r24, r18
    1f4e:	90 e2       	ldi	r25, 0x20	; 32
    1f50:	88 23       	and	r24, r24
    1f52:	19 f0       	breq	.+6      	; 0x1f5a <dtoa_prf+0x2a0>
    1f54:	91 93       	st	Z+, r25
    1f56:	81 50       	subi	r24, 0x01	; 1
    1f58:	fb cf       	rjmp	.-10     	; 0x1f50 <dtoa_prf+0x296>
    1f5a:	f7 01       	movw	r30, r14
    1f5c:	e2 0f       	add	r30, r18
    1f5e:	f1 1d       	adc	r31, r1
    1f60:	10 82       	st	Z, r1
    1f62:	80 e0       	ldi	r24, 0x00	; 0
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	29 96       	adiw	r28, 0x09	; 9
    1f68:	ec e0       	ldi	r30, 0x0C	; 12
    1f6a:	0c 94 cf 11 	jmp	0x239e	; 0x239e <__epilogue_restores__+0xc>

00001f6e <__ftoa_engine>:
    1f6e:	28 30       	cpi	r18, 0x08	; 8
    1f70:	08 f0       	brcs	.+2      	; 0x1f74 <__ftoa_engine+0x6>
    1f72:	27 e0       	ldi	r18, 0x07	; 7
    1f74:	33 27       	eor	r19, r19
    1f76:	da 01       	movw	r26, r20
    1f78:	99 0f       	add	r25, r25
    1f7a:	31 1d       	adc	r19, r1
    1f7c:	87 fd       	sbrc	r24, 7
    1f7e:	91 60       	ori	r25, 0x01	; 1
    1f80:	00 96       	adiw	r24, 0x00	; 0
    1f82:	61 05       	cpc	r22, r1
    1f84:	71 05       	cpc	r23, r1
    1f86:	39 f4       	brne	.+14     	; 0x1f96 <__ftoa_engine+0x28>
    1f88:	32 60       	ori	r19, 0x02	; 2
    1f8a:	2e 5f       	subi	r18, 0xFE	; 254
    1f8c:	3d 93       	st	X+, r19
    1f8e:	30 e3       	ldi	r19, 0x30	; 48
    1f90:	2a 95       	dec	r18
    1f92:	e1 f7       	brne	.-8      	; 0x1f8c <__ftoa_engine+0x1e>
    1f94:	08 95       	ret
    1f96:	9f 3f       	cpi	r25, 0xFF	; 255
    1f98:	30 f0       	brcs	.+12     	; 0x1fa6 <__ftoa_engine+0x38>
    1f9a:	80 38       	cpi	r24, 0x80	; 128
    1f9c:	71 05       	cpc	r23, r1
    1f9e:	61 05       	cpc	r22, r1
    1fa0:	09 f0       	breq	.+2      	; 0x1fa4 <__ftoa_engine+0x36>
    1fa2:	3c 5f       	subi	r19, 0xFC	; 252
    1fa4:	3c 5f       	subi	r19, 0xFC	; 252
    1fa6:	3d 93       	st	X+, r19
    1fa8:	91 30       	cpi	r25, 0x01	; 1
    1faa:	08 f0       	brcs	.+2      	; 0x1fae <__ftoa_engine+0x40>
    1fac:	80 68       	ori	r24, 0x80	; 128
    1fae:	91 1d       	adc	r25, r1
    1fb0:	df 93       	push	r29
    1fb2:	cf 93       	push	r28
    1fb4:	1f 93       	push	r17
    1fb6:	0f 93       	push	r16
    1fb8:	ff 92       	push	r15
    1fba:	ef 92       	push	r14
    1fbc:	19 2f       	mov	r17, r25
    1fbe:	98 7f       	andi	r25, 0xF8	; 248
    1fc0:	96 95       	lsr	r25
    1fc2:	e9 2f       	mov	r30, r25
    1fc4:	96 95       	lsr	r25
    1fc6:	96 95       	lsr	r25
    1fc8:	e9 0f       	add	r30, r25
    1fca:	ff 27       	eor	r31, r31
    1fcc:	e6 54       	subi	r30, 0x46	; 70
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	99 27       	eor	r25, r25
    1fd2:	33 27       	eor	r19, r19
    1fd4:	ee 24       	eor	r14, r14
    1fd6:	ff 24       	eor	r15, r15
    1fd8:	a7 01       	movw	r20, r14
    1fda:	e7 01       	movw	r28, r14
    1fdc:	05 90       	lpm	r0, Z+
    1fde:	08 94       	sec
    1fe0:	07 94       	ror	r0
    1fe2:	28 f4       	brcc	.+10     	; 0x1fee <__ftoa_engine+0x80>
    1fe4:	36 0f       	add	r19, r22
    1fe6:	e7 1e       	adc	r14, r23
    1fe8:	f8 1e       	adc	r15, r24
    1fea:	49 1f       	adc	r20, r25
    1fec:	51 1d       	adc	r21, r1
    1fee:	66 0f       	add	r22, r22
    1ff0:	77 1f       	adc	r23, r23
    1ff2:	88 1f       	adc	r24, r24
    1ff4:	99 1f       	adc	r25, r25
    1ff6:	06 94       	lsr	r0
    1ff8:	a1 f7       	brne	.-24     	; 0x1fe2 <__ftoa_engine+0x74>
    1ffa:	05 90       	lpm	r0, Z+
    1ffc:	07 94       	ror	r0
    1ffe:	28 f4       	brcc	.+10     	; 0x200a <__ftoa_engine+0x9c>
    2000:	e7 0e       	add	r14, r23
    2002:	f8 1e       	adc	r15, r24
    2004:	49 1f       	adc	r20, r25
    2006:	56 1f       	adc	r21, r22
    2008:	c1 1d       	adc	r28, r1
    200a:	77 0f       	add	r23, r23
    200c:	88 1f       	adc	r24, r24
    200e:	99 1f       	adc	r25, r25
    2010:	66 1f       	adc	r22, r22
    2012:	06 94       	lsr	r0
    2014:	a1 f7       	brne	.-24     	; 0x1ffe <__ftoa_engine+0x90>
    2016:	05 90       	lpm	r0, Z+
    2018:	07 94       	ror	r0
    201a:	28 f4       	brcc	.+10     	; 0x2026 <__ftoa_engine+0xb8>
    201c:	f8 0e       	add	r15, r24
    201e:	49 1f       	adc	r20, r25
    2020:	56 1f       	adc	r21, r22
    2022:	c7 1f       	adc	r28, r23
    2024:	d1 1d       	adc	r29, r1
    2026:	88 0f       	add	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	66 1f       	adc	r22, r22
    202c:	77 1f       	adc	r23, r23
    202e:	06 94       	lsr	r0
    2030:	a1 f7       	brne	.-24     	; 0x201a <__ftoa_engine+0xac>
    2032:	05 90       	lpm	r0, Z+
    2034:	07 94       	ror	r0
    2036:	20 f4       	brcc	.+8      	; 0x2040 <__ftoa_engine+0xd2>
    2038:	49 0f       	add	r20, r25
    203a:	56 1f       	adc	r21, r22
    203c:	c7 1f       	adc	r28, r23
    203e:	d8 1f       	adc	r29, r24
    2040:	99 0f       	add	r25, r25
    2042:	66 1f       	adc	r22, r22
    2044:	77 1f       	adc	r23, r23
    2046:	88 1f       	adc	r24, r24
    2048:	06 94       	lsr	r0
    204a:	a9 f7       	brne	.-22     	; 0x2036 <__ftoa_engine+0xc8>
    204c:	84 91       	lpm	r24, Z
    204e:	10 95       	com	r17
    2050:	17 70       	andi	r17, 0x07	; 7
    2052:	41 f0       	breq	.+16     	; 0x2064 <__ftoa_engine+0xf6>
    2054:	d6 95       	lsr	r29
    2056:	c7 95       	ror	r28
    2058:	57 95       	ror	r21
    205a:	47 95       	ror	r20
    205c:	f7 94       	ror	r15
    205e:	e7 94       	ror	r14
    2060:	1a 95       	dec	r17
    2062:	c1 f7       	brne	.-16     	; 0x2054 <__ftoa_engine+0xe6>
    2064:	e0 e6       	ldi	r30, 0x60	; 96
    2066:	f0 e0       	ldi	r31, 0x00	; 0
    2068:	68 94       	set
    206a:	15 90       	lpm	r1, Z+
    206c:	15 91       	lpm	r17, Z+
    206e:	35 91       	lpm	r19, Z+
    2070:	65 91       	lpm	r22, Z+
    2072:	95 91       	lpm	r25, Z+
    2074:	05 90       	lpm	r0, Z+
    2076:	7f e2       	ldi	r23, 0x2F	; 47
    2078:	73 95       	inc	r23
    207a:	e1 18       	sub	r14, r1
    207c:	f1 0a       	sbc	r15, r17
    207e:	43 0b       	sbc	r20, r19
    2080:	56 0b       	sbc	r21, r22
    2082:	c9 0b       	sbc	r28, r25
    2084:	d0 09       	sbc	r29, r0
    2086:	c0 f7       	brcc	.-16     	; 0x2078 <__ftoa_engine+0x10a>
    2088:	e1 0c       	add	r14, r1
    208a:	f1 1e       	adc	r15, r17
    208c:	43 1f       	adc	r20, r19
    208e:	56 1f       	adc	r21, r22
    2090:	c9 1f       	adc	r28, r25
    2092:	d0 1d       	adc	r29, r0
    2094:	7e f4       	brtc	.+30     	; 0x20b4 <__ftoa_engine+0x146>
    2096:	70 33       	cpi	r23, 0x30	; 48
    2098:	11 f4       	brne	.+4      	; 0x209e <__ftoa_engine+0x130>
    209a:	8a 95       	dec	r24
    209c:	e6 cf       	rjmp	.-52     	; 0x206a <__ftoa_engine+0xfc>
    209e:	e8 94       	clt
    20a0:	01 50       	subi	r16, 0x01	; 1
    20a2:	30 f0       	brcs	.+12     	; 0x20b0 <__ftoa_engine+0x142>
    20a4:	08 0f       	add	r16, r24
    20a6:	0a f4       	brpl	.+2      	; 0x20aa <__ftoa_engine+0x13c>
    20a8:	00 27       	eor	r16, r16
    20aa:	02 17       	cp	r16, r18
    20ac:	08 f4       	brcc	.+2      	; 0x20b0 <__ftoa_engine+0x142>
    20ae:	20 2f       	mov	r18, r16
    20b0:	23 95       	inc	r18
    20b2:	02 2f       	mov	r16, r18
    20b4:	7a 33       	cpi	r23, 0x3A	; 58
    20b6:	28 f0       	brcs	.+10     	; 0x20c2 <__ftoa_engine+0x154>
    20b8:	79 e3       	ldi	r23, 0x39	; 57
    20ba:	7d 93       	st	X+, r23
    20bc:	2a 95       	dec	r18
    20be:	e9 f7       	brne	.-6      	; 0x20ba <__ftoa_engine+0x14c>
    20c0:	10 c0       	rjmp	.+32     	; 0x20e2 <__ftoa_engine+0x174>
    20c2:	7d 93       	st	X+, r23
    20c4:	2a 95       	dec	r18
    20c6:	89 f6       	brne	.-94     	; 0x206a <__ftoa_engine+0xfc>
    20c8:	06 94       	lsr	r0
    20ca:	97 95       	ror	r25
    20cc:	67 95       	ror	r22
    20ce:	37 95       	ror	r19
    20d0:	17 95       	ror	r17
    20d2:	17 94       	ror	r1
    20d4:	e1 18       	sub	r14, r1
    20d6:	f1 0a       	sbc	r15, r17
    20d8:	43 0b       	sbc	r20, r19
    20da:	56 0b       	sbc	r21, r22
    20dc:	c9 0b       	sbc	r28, r25
    20de:	d0 09       	sbc	r29, r0
    20e0:	98 f0       	brcs	.+38     	; 0x2108 <__ftoa_engine+0x19a>
    20e2:	23 95       	inc	r18
    20e4:	7e 91       	ld	r23, -X
    20e6:	73 95       	inc	r23
    20e8:	7a 33       	cpi	r23, 0x3A	; 58
    20ea:	08 f0       	brcs	.+2      	; 0x20ee <__ftoa_engine+0x180>
    20ec:	70 e3       	ldi	r23, 0x30	; 48
    20ee:	7c 93       	st	X, r23
    20f0:	20 13       	cpse	r18, r16
    20f2:	b8 f7       	brcc	.-18     	; 0x20e2 <__ftoa_engine+0x174>
    20f4:	7e 91       	ld	r23, -X
    20f6:	70 61       	ori	r23, 0x10	; 16
    20f8:	7d 93       	st	X+, r23
    20fa:	30 f0       	brcs	.+12     	; 0x2108 <__ftoa_engine+0x19a>
    20fc:	83 95       	inc	r24
    20fe:	71 e3       	ldi	r23, 0x31	; 49
    2100:	7d 93       	st	X+, r23
    2102:	70 e3       	ldi	r23, 0x30	; 48
    2104:	2a 95       	dec	r18
    2106:	e1 f7       	brne	.-8      	; 0x2100 <__ftoa_engine+0x192>
    2108:	11 24       	eor	r1, r1
    210a:	ef 90       	pop	r14
    210c:	ff 90       	pop	r15
    210e:	0f 91       	pop	r16
    2110:	1f 91       	pop	r17
    2112:	cf 91       	pop	r28
    2114:	df 91       	pop	r29
    2116:	99 27       	eor	r25, r25
    2118:	87 fd       	sbrc	r24, 7
    211a:	90 95       	com	r25
    211c:	08 95       	ret

0000211e <isspace>:
    211e:	91 11       	cpse	r25, r1
    2120:	0c 94 aa 11 	jmp	0x2354	; 0x2354 <__ctype_isfalse>
    2124:	80 32       	cpi	r24, 0x20	; 32
    2126:	19 f0       	breq	.+6      	; 0x212e <isspace+0x10>
    2128:	89 50       	subi	r24, 0x09	; 9
    212a:	85 50       	subi	r24, 0x05	; 5
    212c:	c8 f7       	brcc	.-14     	; 0x2120 <isspace+0x2>
    212e:	08 95       	ret

00002130 <strchr_P>:
    2130:	fc 01       	movw	r30, r24
    2132:	05 90       	lpm	r0, Z+
    2134:	06 16       	cp	r0, r22
    2136:	21 f0       	breq	.+8      	; 0x2140 <strchr_P+0x10>
    2138:	00 20       	and	r0, r0
    213a:	d9 f7       	brne	.-10     	; 0x2132 <strchr_P+0x2>
    213c:	c0 01       	movw	r24, r0
    213e:	08 95       	ret
    2140:	31 97       	sbiw	r30, 0x01	; 1
    2142:	cf 01       	movw	r24, r30
    2144:	08 95       	ret

00002146 <strnlen_P>:
    2146:	fc 01       	movw	r30, r24
    2148:	05 90       	lpm	r0, Z+
    214a:	61 50       	subi	r22, 0x01	; 1
    214c:	70 40       	sbci	r23, 0x00	; 0
    214e:	01 10       	cpse	r0, r1
    2150:	d8 f7       	brcc	.-10     	; 0x2148 <strnlen_P+0x2>
    2152:	80 95       	com	r24
    2154:	90 95       	com	r25
    2156:	8e 0f       	add	r24, r30
    2158:	9f 1f       	adc	r25, r31
    215a:	08 95       	ret

0000215c <strnlen>:
    215c:	fc 01       	movw	r30, r24
    215e:	61 50       	subi	r22, 0x01	; 1
    2160:	70 40       	sbci	r23, 0x00	; 0
    2162:	01 90       	ld	r0, Z+
    2164:	01 10       	cpse	r0, r1
    2166:	d8 f7       	brcc	.-10     	; 0x215e <strnlen+0x2>
    2168:	80 95       	com	r24
    216a:	90 95       	com	r25
    216c:	8e 0f       	add	r24, r30
    216e:	9f 1f       	adc	r25, r31
    2170:	08 95       	ret

00002172 <fgetc>:
    2172:	cf 93       	push	r28
    2174:	df 93       	push	r29
    2176:	ec 01       	movw	r28, r24
    2178:	2b 81       	ldd	r18, Y+3	; 0x03
    217a:	20 ff       	sbrs	r18, 0
    217c:	33 c0       	rjmp	.+102    	; 0x21e4 <fgetc+0x72>
    217e:	26 ff       	sbrs	r18, 6
    2180:	0a c0       	rjmp	.+20     	; 0x2196 <fgetc+0x24>
    2182:	2f 7b       	andi	r18, 0xBF	; 191
    2184:	2b 83       	std	Y+3, r18	; 0x03
    2186:	8e 81       	ldd	r24, Y+6	; 0x06
    2188:	9f 81       	ldd	r25, Y+7	; 0x07
    218a:	01 96       	adiw	r24, 0x01	; 1
    218c:	9f 83       	std	Y+7, r25	; 0x07
    218e:	8e 83       	std	Y+6, r24	; 0x06
    2190:	8a 81       	ldd	r24, Y+2	; 0x02
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	29 c0       	rjmp	.+82     	; 0x21e8 <fgetc+0x76>
    2196:	22 ff       	sbrs	r18, 2
    2198:	0f c0       	rjmp	.+30     	; 0x21b8 <fgetc+0x46>
    219a:	e8 81       	ld	r30, Y
    219c:	f9 81       	ldd	r31, Y+1	; 0x01
    219e:	80 81       	ld	r24, Z
    21a0:	08 2e       	mov	r0, r24
    21a2:	00 0c       	add	r0, r0
    21a4:	99 0b       	sbc	r25, r25
    21a6:	00 97       	sbiw	r24, 0x00	; 0
    21a8:	19 f4       	brne	.+6      	; 0x21b0 <fgetc+0x3e>
    21aa:	20 62       	ori	r18, 0x20	; 32
    21ac:	2b 83       	std	Y+3, r18	; 0x03
    21ae:	1a c0       	rjmp	.+52     	; 0x21e4 <fgetc+0x72>
    21b0:	31 96       	adiw	r30, 0x01	; 1
    21b2:	f9 83       	std	Y+1, r31	; 0x01
    21b4:	e8 83       	st	Y, r30
    21b6:	0e c0       	rjmp	.+28     	; 0x21d4 <fgetc+0x62>
    21b8:	ea 85       	ldd	r30, Y+10	; 0x0a
    21ba:	fb 85       	ldd	r31, Y+11	; 0x0b
    21bc:	09 95       	icall
    21be:	97 ff       	sbrs	r25, 7
    21c0:	09 c0       	rjmp	.+18     	; 0x21d4 <fgetc+0x62>
    21c2:	2b 81       	ldd	r18, Y+3	; 0x03
    21c4:	01 96       	adiw	r24, 0x01	; 1
    21c6:	11 f0       	breq	.+4      	; 0x21cc <fgetc+0x5a>
    21c8:	80 e2       	ldi	r24, 0x20	; 32
    21ca:	01 c0       	rjmp	.+2      	; 0x21ce <fgetc+0x5c>
    21cc:	80 e1       	ldi	r24, 0x10	; 16
    21ce:	82 2b       	or	r24, r18
    21d0:	8b 83       	std	Y+3, r24	; 0x03
    21d2:	08 c0       	rjmp	.+16     	; 0x21e4 <fgetc+0x72>
    21d4:	2e 81       	ldd	r18, Y+6	; 0x06
    21d6:	3f 81       	ldd	r19, Y+7	; 0x07
    21d8:	2f 5f       	subi	r18, 0xFF	; 255
    21da:	3f 4f       	sbci	r19, 0xFF	; 255
    21dc:	3f 83       	std	Y+7, r19	; 0x07
    21de:	2e 83       	std	Y+6, r18	; 0x06
    21e0:	99 27       	eor	r25, r25
    21e2:	02 c0       	rjmp	.+4      	; 0x21e8 <fgetc+0x76>
    21e4:	8f ef       	ldi	r24, 0xFF	; 255
    21e6:	9f ef       	ldi	r25, 0xFF	; 255
    21e8:	df 91       	pop	r29
    21ea:	cf 91       	pop	r28
    21ec:	08 95       	ret

000021ee <fputc>:
    21ee:	0f 93       	push	r16
    21f0:	1f 93       	push	r17
    21f2:	cf 93       	push	r28
    21f4:	df 93       	push	r29
    21f6:	fb 01       	movw	r30, r22
    21f8:	23 81       	ldd	r18, Z+3	; 0x03
    21fa:	21 fd       	sbrc	r18, 1
    21fc:	03 c0       	rjmp	.+6      	; 0x2204 <fputc+0x16>
    21fe:	8f ef       	ldi	r24, 0xFF	; 255
    2200:	9f ef       	ldi	r25, 0xFF	; 255
    2202:	2c c0       	rjmp	.+88     	; 0x225c <fputc+0x6e>
    2204:	22 ff       	sbrs	r18, 2
    2206:	16 c0       	rjmp	.+44     	; 0x2234 <fputc+0x46>
    2208:	46 81       	ldd	r20, Z+6	; 0x06
    220a:	57 81       	ldd	r21, Z+7	; 0x07
    220c:	24 81       	ldd	r18, Z+4	; 0x04
    220e:	35 81       	ldd	r19, Z+5	; 0x05
    2210:	42 17       	cp	r20, r18
    2212:	53 07       	cpc	r21, r19
    2214:	44 f4       	brge	.+16     	; 0x2226 <fputc+0x38>
    2216:	a0 81       	ld	r26, Z
    2218:	b1 81       	ldd	r27, Z+1	; 0x01
    221a:	9d 01       	movw	r18, r26
    221c:	2f 5f       	subi	r18, 0xFF	; 255
    221e:	3f 4f       	sbci	r19, 0xFF	; 255
    2220:	31 83       	std	Z+1, r19	; 0x01
    2222:	20 83       	st	Z, r18
    2224:	8c 93       	st	X, r24
    2226:	26 81       	ldd	r18, Z+6	; 0x06
    2228:	37 81       	ldd	r19, Z+7	; 0x07
    222a:	2f 5f       	subi	r18, 0xFF	; 255
    222c:	3f 4f       	sbci	r19, 0xFF	; 255
    222e:	37 83       	std	Z+7, r19	; 0x07
    2230:	26 83       	std	Z+6, r18	; 0x06
    2232:	14 c0       	rjmp	.+40     	; 0x225c <fputc+0x6e>
    2234:	8b 01       	movw	r16, r22
    2236:	ec 01       	movw	r28, r24
    2238:	fb 01       	movw	r30, r22
    223a:	00 84       	ldd	r0, Z+8	; 0x08
    223c:	f1 85       	ldd	r31, Z+9	; 0x09
    223e:	e0 2d       	mov	r30, r0
    2240:	09 95       	icall
    2242:	89 2b       	or	r24, r25
    2244:	e1 f6       	brne	.-72     	; 0x21fe <fputc+0x10>
    2246:	d8 01       	movw	r26, r16
    2248:	16 96       	adiw	r26, 0x06	; 6
    224a:	8d 91       	ld	r24, X+
    224c:	9c 91       	ld	r25, X
    224e:	17 97       	sbiw	r26, 0x07	; 7
    2250:	01 96       	adiw	r24, 0x01	; 1
    2252:	17 96       	adiw	r26, 0x07	; 7
    2254:	9c 93       	st	X, r25
    2256:	8e 93       	st	-X, r24
    2258:	16 97       	sbiw	r26, 0x06	; 6
    225a:	ce 01       	movw	r24, r28
    225c:	df 91       	pop	r29
    225e:	cf 91       	pop	r28
    2260:	1f 91       	pop	r17
    2262:	0f 91       	pop	r16
    2264:	08 95       	ret

00002266 <ungetc>:
    2266:	fb 01       	movw	r30, r22
    2268:	23 81       	ldd	r18, Z+3	; 0x03
    226a:	20 ff       	sbrs	r18, 0
    226c:	12 c0       	rjmp	.+36     	; 0x2292 <ungetc+0x2c>
    226e:	26 fd       	sbrc	r18, 6
    2270:	10 c0       	rjmp	.+32     	; 0x2292 <ungetc+0x2c>
    2272:	8f 3f       	cpi	r24, 0xFF	; 255
    2274:	3f ef       	ldi	r19, 0xFF	; 255
    2276:	93 07       	cpc	r25, r19
    2278:	61 f0       	breq	.+24     	; 0x2292 <ungetc+0x2c>
    227a:	82 83       	std	Z+2, r24	; 0x02
    227c:	2f 7d       	andi	r18, 0xDF	; 223
    227e:	20 64       	ori	r18, 0x40	; 64
    2280:	23 83       	std	Z+3, r18	; 0x03
    2282:	26 81       	ldd	r18, Z+6	; 0x06
    2284:	37 81       	ldd	r19, Z+7	; 0x07
    2286:	21 50       	subi	r18, 0x01	; 1
    2288:	31 09       	sbc	r19, r1
    228a:	37 83       	std	Z+7, r19	; 0x07
    228c:	26 83       	std	Z+6, r18	; 0x06
    228e:	99 27       	eor	r25, r25
    2290:	08 95       	ret
    2292:	8f ef       	ldi	r24, 0xFF	; 255
    2294:	9f ef       	ldi	r25, 0xFF	; 255
    2296:	08 95       	ret

00002298 <__ultoa_invert>:
    2298:	fa 01       	movw	r30, r20
    229a:	aa 27       	eor	r26, r26
    229c:	28 30       	cpi	r18, 0x08	; 8
    229e:	51 f1       	breq	.+84     	; 0x22f4 <__ultoa_invert+0x5c>
    22a0:	20 31       	cpi	r18, 0x10	; 16
    22a2:	81 f1       	breq	.+96     	; 0x2304 <__ultoa_invert+0x6c>
    22a4:	e8 94       	clt
    22a6:	6f 93       	push	r22
    22a8:	6e 7f       	andi	r22, 0xFE	; 254
    22aa:	6e 5f       	subi	r22, 0xFE	; 254
    22ac:	7f 4f       	sbci	r23, 0xFF	; 255
    22ae:	8f 4f       	sbci	r24, 0xFF	; 255
    22b0:	9f 4f       	sbci	r25, 0xFF	; 255
    22b2:	af 4f       	sbci	r26, 0xFF	; 255
    22b4:	b1 e0       	ldi	r27, 0x01	; 1
    22b6:	3e d0       	rcall	.+124    	; 0x2334 <__ultoa_invert+0x9c>
    22b8:	b4 e0       	ldi	r27, 0x04	; 4
    22ba:	3c d0       	rcall	.+120    	; 0x2334 <__ultoa_invert+0x9c>
    22bc:	67 0f       	add	r22, r23
    22be:	78 1f       	adc	r23, r24
    22c0:	89 1f       	adc	r24, r25
    22c2:	9a 1f       	adc	r25, r26
    22c4:	a1 1d       	adc	r26, r1
    22c6:	68 0f       	add	r22, r24
    22c8:	79 1f       	adc	r23, r25
    22ca:	8a 1f       	adc	r24, r26
    22cc:	91 1d       	adc	r25, r1
    22ce:	a1 1d       	adc	r26, r1
    22d0:	6a 0f       	add	r22, r26
    22d2:	71 1d       	adc	r23, r1
    22d4:	81 1d       	adc	r24, r1
    22d6:	91 1d       	adc	r25, r1
    22d8:	a1 1d       	adc	r26, r1
    22da:	20 d0       	rcall	.+64     	; 0x231c <__ultoa_invert+0x84>
    22dc:	09 f4       	brne	.+2      	; 0x22e0 <__ultoa_invert+0x48>
    22de:	68 94       	set
    22e0:	3f 91       	pop	r19
    22e2:	2a e0       	ldi	r18, 0x0A	; 10
    22e4:	26 9f       	mul	r18, r22
    22e6:	11 24       	eor	r1, r1
    22e8:	30 19       	sub	r19, r0
    22ea:	30 5d       	subi	r19, 0xD0	; 208
    22ec:	31 93       	st	Z+, r19
    22ee:	de f6       	brtc	.-74     	; 0x22a6 <__ultoa_invert+0xe>
    22f0:	cf 01       	movw	r24, r30
    22f2:	08 95       	ret
    22f4:	46 2f       	mov	r20, r22
    22f6:	47 70       	andi	r20, 0x07	; 7
    22f8:	40 5d       	subi	r20, 0xD0	; 208
    22fa:	41 93       	st	Z+, r20
    22fc:	b3 e0       	ldi	r27, 0x03	; 3
    22fe:	0f d0       	rcall	.+30     	; 0x231e <__ultoa_invert+0x86>
    2300:	c9 f7       	brne	.-14     	; 0x22f4 <__ultoa_invert+0x5c>
    2302:	f6 cf       	rjmp	.-20     	; 0x22f0 <__ultoa_invert+0x58>
    2304:	46 2f       	mov	r20, r22
    2306:	4f 70       	andi	r20, 0x0F	; 15
    2308:	40 5d       	subi	r20, 0xD0	; 208
    230a:	4a 33       	cpi	r20, 0x3A	; 58
    230c:	18 f0       	brcs	.+6      	; 0x2314 <__ultoa_invert+0x7c>
    230e:	49 5d       	subi	r20, 0xD9	; 217
    2310:	31 fd       	sbrc	r19, 1
    2312:	40 52       	subi	r20, 0x20	; 32
    2314:	41 93       	st	Z+, r20
    2316:	02 d0       	rcall	.+4      	; 0x231c <__ultoa_invert+0x84>
    2318:	a9 f7       	brne	.-22     	; 0x2304 <__ultoa_invert+0x6c>
    231a:	ea cf       	rjmp	.-44     	; 0x22f0 <__ultoa_invert+0x58>
    231c:	b4 e0       	ldi	r27, 0x04	; 4
    231e:	a6 95       	lsr	r26
    2320:	97 95       	ror	r25
    2322:	87 95       	ror	r24
    2324:	77 95       	ror	r23
    2326:	67 95       	ror	r22
    2328:	ba 95       	dec	r27
    232a:	c9 f7       	brne	.-14     	; 0x231e <__ultoa_invert+0x86>
    232c:	00 97       	sbiw	r24, 0x00	; 0
    232e:	61 05       	cpc	r22, r1
    2330:	71 05       	cpc	r23, r1
    2332:	08 95       	ret
    2334:	9b 01       	movw	r18, r22
    2336:	ac 01       	movw	r20, r24
    2338:	0a 2e       	mov	r0, r26
    233a:	06 94       	lsr	r0
    233c:	57 95       	ror	r21
    233e:	47 95       	ror	r20
    2340:	37 95       	ror	r19
    2342:	27 95       	ror	r18
    2344:	ba 95       	dec	r27
    2346:	c9 f7       	brne	.-14     	; 0x233a <__ultoa_invert+0xa2>
    2348:	62 0f       	add	r22, r18
    234a:	73 1f       	adc	r23, r19
    234c:	84 1f       	adc	r24, r20
    234e:	95 1f       	adc	r25, r21
    2350:	a0 1d       	adc	r26, r0
    2352:	08 95       	ret

00002354 <__ctype_isfalse>:
    2354:	99 27       	eor	r25, r25
    2356:	88 27       	eor	r24, r24

00002358 <__ctype_istrue>:
    2358:	08 95       	ret

0000235a <__prologue_saves__>:
    235a:	2f 92       	push	r2
    235c:	3f 92       	push	r3
    235e:	4f 92       	push	r4
    2360:	5f 92       	push	r5
    2362:	6f 92       	push	r6
    2364:	7f 92       	push	r7
    2366:	8f 92       	push	r8
    2368:	9f 92       	push	r9
    236a:	af 92       	push	r10
    236c:	bf 92       	push	r11
    236e:	cf 92       	push	r12
    2370:	df 92       	push	r13
    2372:	ef 92       	push	r14
    2374:	ff 92       	push	r15
    2376:	0f 93       	push	r16
    2378:	1f 93       	push	r17
    237a:	cf 93       	push	r28
    237c:	df 93       	push	r29
    237e:	cd b7       	in	r28, 0x3d	; 61
    2380:	de b7       	in	r29, 0x3e	; 62
    2382:	ca 1b       	sub	r28, r26
    2384:	db 0b       	sbc	r29, r27
    2386:	0f b6       	in	r0, 0x3f	; 63
    2388:	f8 94       	cli
    238a:	de bf       	out	0x3e, r29	; 62
    238c:	0f be       	out	0x3f, r0	; 63
    238e:	cd bf       	out	0x3d, r28	; 61
    2390:	09 94       	ijmp

00002392 <__epilogue_restores__>:
    2392:	2a 88       	ldd	r2, Y+18	; 0x12
    2394:	39 88       	ldd	r3, Y+17	; 0x11
    2396:	48 88       	ldd	r4, Y+16	; 0x10
    2398:	5f 84       	ldd	r5, Y+15	; 0x0f
    239a:	6e 84       	ldd	r6, Y+14	; 0x0e
    239c:	7d 84       	ldd	r7, Y+13	; 0x0d
    239e:	8c 84       	ldd	r8, Y+12	; 0x0c
    23a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    23a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    23a4:	b9 84       	ldd	r11, Y+9	; 0x09
    23a6:	c8 84       	ldd	r12, Y+8	; 0x08
    23a8:	df 80       	ldd	r13, Y+7	; 0x07
    23aa:	ee 80       	ldd	r14, Y+6	; 0x06
    23ac:	fd 80       	ldd	r15, Y+5	; 0x05
    23ae:	0c 81       	ldd	r16, Y+4	; 0x04
    23b0:	1b 81       	ldd	r17, Y+3	; 0x03
    23b2:	aa 81       	ldd	r26, Y+2	; 0x02
    23b4:	b9 81       	ldd	r27, Y+1	; 0x01
    23b6:	ce 0f       	add	r28, r30
    23b8:	d1 1d       	adc	r29, r1
    23ba:	0f b6       	in	r0, 0x3f	; 63
    23bc:	f8 94       	cli
    23be:	de bf       	out	0x3e, r29	; 62
    23c0:	0f be       	out	0x3f, r0	; 63
    23c2:	cd bf       	out	0x3d, r28	; 61
    23c4:	ed 01       	movw	r28, r26
    23c6:	08 95       	ret

000023c8 <_exit>:
    23c8:	f8 94       	cli

000023ca <__stop_program>:
    23ca:	ff cf       	rjmp	.-2      	; 0x23ca <__stop_program>
