
final_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c6  00800060  000023a0  00002434  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000ef  00800126  00800126  000024fa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000024fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000388  00000000  00000000  00002594  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037e2  00000000  00000000  0000291c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001037  00000000  00000000  000060fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c56  00000000  00000000  00007135  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a24  00000000  00000000  00008d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010b8  00000000  00000000  000097b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002828  00000000  00000000  0000a868  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000328  00000000  00000000  0000d090  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__ctors_end>
       4:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__vector_1>
       8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      24:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      2c:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__vector_11>
      30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      34:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__vector_13>
      38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	63 64       	ori	r22, 0x43	; 67
      56:	69 6e       	ori	r22, 0xE9	; 233
      58:	6f 70       	andi	r22, 0x0F	; 15
      5a:	73 75       	andi	r23, 0x53	; 83
      5c:	78 58       	subi	r23, 0x88	; 136
      5e:	5b 00       	.word	0x005b	; ????
      60:	00 40       	sbci	r16, 0x00	; 0
      62:	7a 10       	cpse	r7, r10
      64:	f3 5a       	subi	r31, 0xA3	; 163
      66:	00 a0       	ldd	r0, Z+32	; 0x20
      68:	72 4e       	sbci	r23, 0xE2	; 226
      6a:	18 09       	sbc	r17, r8
      6c:	00 10       	cpse	r0, r0
      6e:	a5 d4       	rcall	.+2378   	; 0x9ba <openTrash+0x32>
      70:	e8 00       	.word	0x00e8	; ????
      72:	00 e8       	ldi	r16, 0x80	; 128
      74:	76 48       	sbci	r23, 0x86	; 134
      76:	17 00       	.word	0x0017	; ????
      78:	00 e4       	ldi	r16, 0x40	; 64
      7a:	0b 54       	subi	r16, 0x4B	; 75
      7c:	02 00       	.word	0x0002	; ????
      7e:	00 ca       	rjmp	.-3072   	; 0xfffff480 <__eeprom_end+0xff7ef480>
      80:	9a 3b       	cpi	r25, 0xBA	; 186
      82:	00 00       	nop
      84:	00 e1       	ldi	r16, 0x10	; 16
      86:	f5 05       	cpc	r31, r5
      88:	00 00       	nop
      8a:	80 96       	adiw	r24, 0x20	; 32
      8c:	98 00       	.word	0x0098	; ????
      8e:	00 00       	nop
      90:	40 42       	sbci	r20, 0x20	; 32
      92:	0f 00       	.word	0x000f	; ????
      94:	00 00       	nop
      96:	a0 86       	std	Z+8, r10	; 0x08
      98:	01 00       	.word	0x0001	; ????
      9a:	00 00       	nop
      9c:	10 27       	eor	r17, r16
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	e8 03       	fmulsu	r22, r16
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	64 00       	.word	0x0064	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	0a 00       	.word	0x000a	; ????
      b0:	00 00       	nop
      b2:	00 00       	nop
      b4:	01 00       	.word	0x0001	; ????
      b6:	00 00       	nop
      b8:	00 00       	nop
      ba:	2c 76       	andi	r18, 0x6C	; 108
      bc:	d8 88       	ldd	r13, Y+16	; 0x10
      be:	dc 67       	ori	r29, 0x7C	; 124
      c0:	4f 08       	sbc	r4, r15
      c2:	23 df       	rcall	.-442    	; 0xffffff0a <__eeprom_end+0xff7eff0a>
      c4:	c1 df       	rcall	.-126    	; 0x48 <__SREG__+0x9>
      c6:	ae 59       	subi	r26, 0x9E	; 158
      c8:	e1 b1       	in	r30, 0x01	; 1
      ca:	b7 96       	adiw	r30, 0x27	; 39
      cc:	e5 e3       	ldi	r30, 0x35	; 53
      ce:	e4 53       	subi	r30, 0x34	; 52
      d0:	c6 3a       	cpi	r28, 0xA6	; 166
      d2:	e6 51       	subi	r30, 0x16	; 22
      d4:	99 76       	andi	r25, 0x69	; 105
      d6:	96 e8       	ldi	r25, 0x86	; 134
      d8:	e6 c2       	rjmp	.+1484   	; 0x6a6 <i2c_master_sendByte+0x20>
      da:	84 26       	eor	r8, r20
      dc:	eb 89       	ldd	r30, Y+19	; 0x13
      de:	8c 9b       	sbis	0x11, 4	; 17
      e0:	62 ed       	ldi	r22, 0xD2	; 210
      e2:	40 7c       	andi	r20, 0xC0	; 192
      e4:	6f fc       	.word	0xfc6f	; ????
      e6:	ef bc       	out	0x2f, r14	; 47
      e8:	9c 9f       	mul	r25, r28
      ea:	40 f2       	brcs	.-112    	; 0x7c <__trampolines_end+0x28>
      ec:	ba a5       	ldd	r27, Y+42	; 0x2a
      ee:	6f a5       	ldd	r22, Y+47	; 0x2f
      f0:	f4 90       	lpm	r15, Z
      f2:	05 5a       	subi	r16, 0xA5	; 165
      f4:	2a f7       	brpl	.-54     	; 0xc0 <__trampolines_end+0x6c>
      f6:	5c 93       	st	X, r21
      f8:	6b 6c       	ori	r22, 0xCB	; 203
      fa:	f9 67       	ori	r31, 0x79	; 121
      fc:	6d c1       	rjmp	.+730    	; 0x3d8 <FlagWrite+0x58>
      fe:	1b fc       	.word	0xfc1b	; ????
     100:	e0 e4       	ldi	r30, 0x40	; 64
     102:	0d 47       	sbci	r16, 0x7D	; 125
     104:	fe f5       	brtc	.+126    	; 0x184 <.do_clear_bss_loop>
     106:	20 e6       	ldi	r18, 0x60	; 96
     108:	b5 00       	.word	0x00b5	; ????
     10a:	d0 ed       	ldi	r29, 0xD0	; 208
     10c:	90 2e       	mov	r9, r16
     10e:	03 00       	.word	0x0003	; ????
     110:	94 35       	cpi	r25, 0x54	; 84
     112:	77 05       	cpc	r23, r7
     114:	00 80       	ld	r0, Z
     116:	84 1e       	adc	r8, r20
     118:	08 00       	.word	0x0008	; ????
     11a:	00 20       	and	r0, r0
     11c:	4e 0a       	sbc	r4, r30
     11e:	00 00       	nop
     120:	00 c8       	rjmp	.-4096   	; 0xfffff122 <__eeprom_end+0xff7ef122>
     122:	0c 33       	cpi	r16, 0x3C	; 60
     124:	33 33       	cpi	r19, 0x33	; 51
     126:	33 0f       	add	r19, r19
     128:	98 6e       	ori	r25, 0xE8	; 232
     12a:	12 83       	std	Z+2, r17	; 0x02
     12c:	11 41       	sbci	r17, 0x11	; 17
     12e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     130:	21 14       	cp	r2, r1
     132:	89 3b       	cpi	r24, 0xB9	; 185
     134:	e6 55       	subi	r30, 0x56	; 86
     136:	16 cf       	rjmp	.-468    	; 0xffffff64 <__eeprom_end+0xff7eff64>
     138:	fe e6       	ldi	r31, 0x6E	; 110
     13a:	db 18       	sub	r13, r11
     13c:	d1 84       	ldd	r13, Z+9	; 0x09
     13e:	4b 38       	cpi	r20, 0x8B	; 139
     140:	1b f7       	brvc	.-58     	; 0x108 <__trampolines_end+0xb4>
     142:	7c 1d       	adc	r23, r12
     144:	90 1d       	adc	r25, r0
     146:	a4 bb       	out	0x14, r26	; 20
     148:	e4 24       	eor	r14, r4
     14a:	20 32       	cpi	r18, 0x20	; 32
     14c:	84 72       	andi	r24, 0x24	; 36
     14e:	5e 22       	and	r5, r30
     150:	81 00       	.word	0x0081	; ????
     152:	c9 f1       	breq	.+114    	; 0x1c6 <RTC_Status+0x4>
     154:	24 ec       	ldi	r18, 0xC4	; 196
     156:	a1 e5       	ldi	r26, 0x51	; 81
     158:	3d 27       	eor	r19, r29

0000015a <__ctors_end>:
     15a:	11 24       	eor	r1, r1
     15c:	1f be       	out	0x3f, r1	; 63
     15e:	cf e5       	ldi	r28, 0x5F	; 95
     160:	d8 e0       	ldi	r29, 0x08	; 8
     162:	de bf       	out	0x3e, r29	; 62
     164:	cd bf       	out	0x3d, r28	; 61

00000166 <__do_copy_data>:
     166:	11 e0       	ldi	r17, 0x01	; 1
     168:	a0 e6       	ldi	r26, 0x60	; 96
     16a:	b0 e0       	ldi	r27, 0x00	; 0
     16c:	e0 ea       	ldi	r30, 0xA0	; 160
     16e:	f3 e2       	ldi	r31, 0x23	; 35
     170:	02 c0       	rjmp	.+4      	; 0x176 <__do_copy_data+0x10>
     172:	05 90       	lpm	r0, Z+
     174:	0d 92       	st	X+, r0
     176:	a6 32       	cpi	r26, 0x26	; 38
     178:	b1 07       	cpc	r27, r17
     17a:	d9 f7       	brne	.-10     	; 0x172 <__do_copy_data+0xc>

0000017c <__do_clear_bss>:
     17c:	22 e0       	ldi	r18, 0x02	; 2
     17e:	a6 e2       	ldi	r26, 0x26	; 38
     180:	b1 e0       	ldi	r27, 0x01	; 1
     182:	01 c0       	rjmp	.+2      	; 0x186 <.do_clear_bss_start>

00000184 <.do_clear_bss_loop>:
     184:	1d 92       	st	X+, r1

00000186 <.do_clear_bss_start>:
     186:	a5 31       	cpi	r26, 0x15	; 21
     188:	b2 07       	cpc	r27, r18
     18a:	e1 f7       	brne	.-8      	; 0x184 <.do_clear_bss_loop>
     18c:	0e 94 a9 07 	call	0xf52	; 0xf52 <main>
     190:	0c 94 ce 11 	jmp	0x239c	; 0x239c <_exit>

00000194 <__bad_interrupt>:
     194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <Dec2bcd>:
		reg |= Frequency;
	}

	//Write control register
	RTC_WriteByte(__RTC_Address_Control, reg);
}
     198:	9a e1       	ldi	r25, 0x1A	; 26
     19a:	89 9f       	mul	r24, r25
     19c:	90 01       	movw	r18, r0
     19e:	11 24       	eor	r1, r1
     1a0:	93 2f       	mov	r25, r19
     1a2:	99 0f       	add	r25, r25
     1a4:	93 0f       	add	r25, r19
     1a6:	29 2f       	mov	r18, r25
     1a8:	22 0f       	add	r18, r18
     1aa:	82 0f       	add	r24, r18
     1ac:	08 95       	ret

000001ae <Bcd2dec>:
     1ae:	98 2f       	mov	r25, r24
     1b0:	92 95       	swap	r25
     1b2:	9f 70       	andi	r25, 0x0F	; 15
     1b4:	29 2f       	mov	r18, r25
     1b6:	22 0f       	add	r18, r18
     1b8:	92 0f       	add	r25, r18
     1ba:	29 2f       	mov	r18, r25
     1bc:	22 0f       	add	r18, r18
     1be:	82 1b       	sub	r24, r18
     1c0:	08 95       	ret

000001c2 <RTC_Status>:
     1c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1c6:	08 95       	ret

000001c8 <RTC_WriteBlock>:
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	c8 2f       	mov	r28, r24
     1d2:	8b 01       	movw	r16, r22
     1d4:	d4 2f       	mov	r29, r20
     1d6:	0e 94 02 08 	call	0x1004	; 0x1004 <TWI_BeginTransmission>
     1da:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     1de:	88 30       	cpi	r24, 0x08	; 8
     1e0:	29 f0       	breq	.+10     	; 0x1ec <RTC_WriteBlock+0x24>
     1e2:	80 31       	cpi	r24, 0x10	; 16
     1e4:	19 f0       	breq	.+6      	; 0x1ec <RTC_WriteBlock+0x24>
     1e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ea:	2e c0       	rjmp	.+92     	; 0x248 <RTC_WriteBlock+0x80>
     1ec:	80 ed       	ldi	r24, 0xD0	; 208
     1ee:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     1f2:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     1f6:	88 31       	cpi	r24, 0x18	; 24
     1f8:	29 f0       	breq	.+10     	; 0x204 <RTC_WriteBlock+0x3c>
     1fa:	80 32       	cpi	r24, 0x20	; 32
     1fc:	19 f0       	breq	.+6      	; 0x204 <RTC_WriteBlock+0x3c>
     1fe:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     202:	22 c0       	rjmp	.+68     	; 0x248 <RTC_WriteBlock+0x80>
     204:	8c 2f       	mov	r24, r28
     206:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     20a:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     20e:	88 32       	cpi	r24, 0x28	; 40
     210:	99 f0       	breq	.+38     	; 0x238 <RTC_WriteBlock+0x70>
     212:	80 33       	cpi	r24, 0x30	; 48
     214:	99 f0       	breq	.+38     	; 0x23c <RTC_WriteBlock+0x74>
     216:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     21a:	16 c0       	rjmp	.+44     	; 0x248 <RTC_WriteBlock+0x80>
     21c:	f8 01       	movw	r30, r16
     21e:	ec 0f       	add	r30, r28
     220:	f1 1d       	adc	r31, r1
     222:	80 81       	ld	r24, Z
     224:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     228:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     22c:	88 32       	cpi	r24, 0x28	; 40
     22e:	11 f0       	breq	.+4      	; 0x234 <RTC_WriteBlock+0x6c>
     230:	80 33       	cpi	r24, 0x30	; 48
     232:	39 f4       	brne	.+14     	; 0x242 <RTC_WriteBlock+0x7a>
     234:	cf 5f       	subi	r28, 0xFF	; 255
     236:	03 c0       	rjmp	.+6      	; 0x23e <RTC_WriteBlock+0x76>
     238:	c0 e0       	ldi	r28, 0x00	; 0
     23a:	01 c0       	rjmp	.+2      	; 0x23e <RTC_WriteBlock+0x76>
     23c:	c0 e0       	ldi	r28, 0x00	; 0
     23e:	cd 17       	cp	r28, r29
     240:	68 f3       	brcs	.-38     	; 0x21c <RTC_WriteBlock+0x54>
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     248:	0e 94 0a 08 	call	0x1014	; 0x1014 <TWI_EndTransmission>
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	08 95       	ret

00000256 <RTC_WriteByte>:
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	1f 92       	push	r1
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62
     260:	69 83       	std	Y+1, r22	; 0x01
     262:	41 e0       	ldi	r20, 0x01	; 1
     264:	be 01       	movw	r22, r28
     266:	6f 5f       	subi	r22, 0xFF	; 255
     268:	7f 4f       	sbci	r23, 0xFF	; 255
     26a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     26e:	0f 90       	pop	r0
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <RTC_ReadBlock>:
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	08 2f       	mov	r16, r24
     280:	eb 01       	movw	r28, r22
     282:	14 2f       	mov	r17, r20
     284:	0e 94 02 08 	call	0x1004	; 0x1004 <TWI_BeginTransmission>
     288:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     28c:	88 30       	cpi	r24, 0x08	; 8
     28e:	29 f0       	breq	.+10     	; 0x29a <RTC_ReadBlock+0x24>
     290:	80 31       	cpi	r24, 0x10	; 16
     292:	19 f0       	breq	.+6      	; 0x29a <RTC_ReadBlock+0x24>
     294:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     298:	5c c0       	rjmp	.+184    	; 0x352 <RTC_ReadBlock+0xdc>
     29a:	80 ed       	ldi	r24, 0xD0	; 208
     29c:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     2a0:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     2a4:	88 31       	cpi	r24, 0x18	; 24
     2a6:	29 f0       	breq	.+10     	; 0x2b2 <RTC_ReadBlock+0x3c>
     2a8:	80 32       	cpi	r24, 0x20	; 32
     2aa:	19 f0       	breq	.+6      	; 0x2b2 <RTC_ReadBlock+0x3c>
     2ac:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2b0:	50 c0       	rjmp	.+160    	; 0x352 <RTC_ReadBlock+0xdc>
     2b2:	80 2f       	mov	r24, r16
     2b4:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     2b8:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     2bc:	88 32       	cpi	r24, 0x28	; 40
     2be:	29 f0       	breq	.+10     	; 0x2ca <RTC_ReadBlock+0x54>
     2c0:	80 33       	cpi	r24, 0x30	; 48
     2c2:	19 f0       	breq	.+6      	; 0x2ca <RTC_ReadBlock+0x54>
     2c4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2c8:	44 c0       	rjmp	.+136    	; 0x352 <RTC_ReadBlock+0xdc>
     2ca:	0e 94 02 08 	call	0x1004	; 0x1004 <TWI_BeginTransmission>
     2ce:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     2d2:	88 30       	cpi	r24, 0x08	; 8
     2d4:	29 f0       	breq	.+10     	; 0x2e0 <RTC_ReadBlock+0x6a>
     2d6:	80 31       	cpi	r24, 0x10	; 16
     2d8:	19 f0       	breq	.+6      	; 0x2e0 <RTC_ReadBlock+0x6a>
     2da:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2de:	39 c0       	rjmp	.+114    	; 0x352 <RTC_ReadBlock+0xdc>
     2e0:	81 ed       	ldi	r24, 0xD1	; 209
     2e2:	0e 94 10 08 	call	0x1020	; 0x1020 <TWI_Transmit>
     2e6:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     2ea:	80 34       	cpi	r24, 0x40	; 64
     2ec:	b1 f0       	breq	.+44     	; 0x31a <RTC_ReadBlock+0xa4>
     2ee:	88 34       	cpi	r24, 0x48	; 72
     2f0:	b1 f0       	breq	.+44     	; 0x31e <RTC_ReadBlock+0xa8>
     2f2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     2f6:	2d c0       	rjmp	.+90     	; 0x352 <RTC_ReadBlock+0xdc>
     2f8:	0e 94 19 08 	call	0x1032	; 0x1032 <TWI_ReceiveACK>
     2fc:	fe 01       	movw	r30, r28
     2fe:	e0 0f       	add	r30, r16
     300:	f1 1d       	adc	r31, r1
     302:	80 83       	st	Z, r24
     304:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     308:	80 35       	cpi	r24, 0x50	; 80
     30a:	29 f0       	breq	.+10     	; 0x316 <RTC_ReadBlock+0xa0>
     30c:	88 35       	cpi	r24, 0x58	; 88
     30e:	19 f0       	breq	.+6      	; 0x316 <RTC_ReadBlock+0xa0>
     310:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     314:	0d c0       	rjmp	.+26     	; 0x330 <RTC_ReadBlock+0xba>
     316:	0f 5f       	subi	r16, 0xFF	; 255
     318:	03 c0       	rjmp	.+6      	; 0x320 <RTC_ReadBlock+0xaa>
     31a:	00 e0       	ldi	r16, 0x00	; 0
     31c:	01 c0       	rjmp	.+2      	; 0x320 <RTC_ReadBlock+0xaa>
     31e:	00 e0       	ldi	r16, 0x00	; 0
     320:	20 2f       	mov	r18, r16
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	81 2f       	mov	r24, r17
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	28 17       	cp	r18, r24
     32c:	39 07       	cpc	r19, r25
     32e:	24 f3       	brlt	.-56     	; 0x2f8 <RTC_ReadBlock+0x82>
     330:	c0 0f       	add	r28, r16
     332:	d1 1d       	adc	r29, r1
     334:	0e 94 20 08 	call	0x1040	; 0x1040 <TWI_ReceiveNACK>
     338:	88 83       	st	Y, r24
     33a:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
     33e:	80 35       	cpi	r24, 0x50	; 80
     340:	29 f0       	breq	.+10     	; 0x34c <RTC_ReadBlock+0xd6>
     342:	88 35       	cpi	r24, 0x58	; 88
     344:	19 f0       	breq	.+6      	; 0x34c <RTC_ReadBlock+0xd6>
     346:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     34a:	03 c0       	rjmp	.+6      	; 0x352 <RTC_ReadBlock+0xdc>
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     352:	0e 94 0a 08 	call	0x1014	; 0x1014 <TWI_EndTransmission>
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	08 95       	ret

00000360 <RTC_ReadByte>:
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	1f 92       	push	r1
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	be 01       	movw	r22, r28
     36e:	6f 5f       	subi	r22, 0xFF	; 255
     370:	7f 4f       	sbci	r23, 0xFF	; 255
     372:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	0f 90       	pop	r0
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <FlagWrite>:
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	0f 93       	push	r16
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	d8 2f       	mov	r29, r24
     38e:	e6 2e       	mov	r14, r22
     390:	f4 2e       	mov	r15, r20
     392:	0e 94 b0 01 	call	0x360	; 0x360 <RTC_ReadByte>
     396:	48 2f       	mov	r20, r24
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	60 e0       	ldi	r22, 0x00	; 0
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	0e 2c       	mov	r0, r14
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <FlagWrite+0x2a>
     3a2:	76 95       	lsr	r23
     3a4:	67 95       	ror	r22
     3a6:	57 95       	ror	r21
     3a8:	47 95       	ror	r20
     3aa:	0a 94       	dec	r0
     3ac:	d2 f7       	brpl	.-12     	; 0x3a2 <FlagWrite+0x22>
     3ae:	91 e0       	ldi	r25, 0x01	; 1
     3b0:	40 ff       	sbrs	r20, 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	c9 2f       	mov	r28, r25
     3b6:	01 e0       	ldi	r16, 0x01	; 1
     3b8:	10 e0       	ldi	r17, 0x00	; 0
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <FlagWrite+0x48>
     3c0:	00 0f       	add	r16, r16
     3c2:	11 1f       	adc	r17, r17
     3c4:	22 1f       	adc	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	ea 94       	dec	r14
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <FlagWrite+0x40>
     3cc:	60 2f       	mov	r22, r16
     3ce:	60 95       	com	r22
     3d0:	68 23       	and	r22, r24
     3d2:	f1 10       	cpse	r15, r1
     3d4:	60 2b       	or	r22, r16
     3d6:	8d 2f       	mov	r24, r29
     3d8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     3dc:	8c 2f       	mov	r24, r28
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	ff 90       	pop	r15
     3e8:	ef 90       	pop	r14
     3ea:	08 95       	ret

000003ec <RTC_Set>:
     3ec:	af 92       	push	r10
     3ee:	bf 92       	push	r11
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	28 97       	sbiw	r28, 0x08	; 8
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	a3 2e       	mov	r10, r19
     412:	b4 2e       	mov	r11, r20
     414:	c5 2e       	mov	r12, r21
     416:	d6 2e       	mov	r13, r22
     418:	e7 2e       	mov	r14, r23
     41a:	f8 2e       	mov	r15, r24
     41c:	82 2f       	mov	r24, r18
     41e:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     422:	07 e3       	ldi	r16, 0x37	; 55
     424:	11 e0       	ldi	r17, 0x01	; 1
     426:	f8 01       	movw	r30, r16
     428:	80 83       	st	Z, r24
     42a:	8a 2d       	mov	r24, r10
     42c:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     430:	f8 01       	movw	r30, r16
     432:	81 83       	std	Z+1, r24	; 0x01
     434:	8b 2d       	mov	r24, r11
     436:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     43a:	f8 01       	movw	r30, r16
     43c:	82 83       	std	Z+2, r24	; 0x02
     43e:	8c 2d       	mov	r24, r12
     440:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     444:	f8 01       	movw	r30, r16
     446:	83 83       	std	Z+3, r24	; 0x03
     448:	8d 2d       	mov	r24, r13
     44a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     44e:	f8 01       	movw	r30, r16
     450:	84 83       	std	Z+4, r24	; 0x04
     452:	8e 2d       	mov	r24, r14
     454:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     458:	f8 01       	movw	r30, r16
     45a:	85 83       	std	Z+5, r24	; 0x05
     45c:	80 e3       	ldi	r24, 0x30	; 48
     45e:	8f 0d       	add	r24, r15
     460:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     464:	f8 01       	movw	r30, r16
     466:	86 83       	std	Z+6, r24	; 0x06
     468:	47 e0       	ldi	r20, 0x07	; 7
     46a:	b8 01       	movw	r22, r16
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <RTC_WriteBlock>
     472:	28 96       	adiw	r28, 0x08	; 8
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	ff 90       	pop	r15
     488:	ef 90       	pop	r14
     48a:	df 90       	pop	r13
     48c:	cf 90       	pop	r12
     48e:	bf 90       	pop	r11
     490:	af 90       	pop	r10
     492:	08 95       	ret

00000494 <RTC_Get>:
     494:	0f 93       	push	r16
     496:	1f 93       	push	r17
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	60 97       	sbiw	r28, 0x10	; 16
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
     4ac:	47 e0       	ldi	r20, 0x07	; 7
     4ae:	67 e3       	ldi	r22, 0x37	; 55
     4b0:	71 e0       	ldi	r23, 0x01	; 1
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	0e 94 3b 01 	call	0x276	; 0x276 <RTC_ReadBlock>
     4b8:	07 e3       	ldi	r16, 0x37	; 55
     4ba:	11 e0       	ldi	r17, 0x01	; 1
     4bc:	f8 01       	movw	r30, r16
     4be:	80 81       	ld	r24, Z
     4c0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4c4:	89 87       	std	Y+9, r24	; 0x09
     4c6:	f8 01       	movw	r30, r16
     4c8:	81 81       	ldd	r24, Z+1	; 0x01
     4ca:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ce:	8a 87       	std	Y+10, r24	; 0x0a
     4d0:	f8 01       	movw	r30, r16
     4d2:	82 81       	ldd	r24, Z+2	; 0x02
     4d4:	8f 73       	andi	r24, 0x3F	; 63
     4d6:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4da:	8b 87       	std	Y+11, r24	; 0x0b
     4dc:	f8 01       	movw	r30, r16
     4de:	83 81       	ldd	r24, Z+3	; 0x03
     4e0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4e4:	8c 87       	std	Y+12, r24	; 0x0c
     4e6:	f8 01       	movw	r30, r16
     4e8:	84 81       	ldd	r24, Z+4	; 0x04
     4ea:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4ee:	8d 87       	std	Y+13, r24	; 0x0d
     4f0:	f8 01       	movw	r30, r16
     4f2:	85 81       	ldd	r24, Z+5	; 0x05
     4f4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     4f8:	8e 87       	std	Y+14, r24	; 0x0e
     4fa:	f8 01       	movw	r30, r16
     4fc:	86 81       	ldd	r24, Z+6	; 0x06
     4fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Bcd2dec>
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	80 53       	subi	r24, 0x30	; 48
     506:	98 4f       	sbci	r25, 0xF8	; 248
     508:	98 8b       	std	Y+16, r25	; 0x10
     50a:	8f 87       	std	Y+15, r24	; 0x0f
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	fe 01       	movw	r30, r28
     510:	39 96       	adiw	r30, 0x09	; 9
     512:	de 01       	movw	r26, r28
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	01 90       	ld	r0, Z+
     518:	0d 92       	st	X+, r0
     51a:	8a 95       	dec	r24
     51c:	e1 f7       	brne	.-8      	; 0x516 <RTC_Get+0x82>
     51e:	29 81       	ldd	r18, Y+1	; 0x01
     520:	3a 81       	ldd	r19, Y+2	; 0x02
     522:	4b 81       	ldd	r20, Y+3	; 0x03
     524:	5c 81       	ldd	r21, Y+4	; 0x04
     526:	6d 81       	ldd	r22, Y+5	; 0x05
     528:	7e 81       	ldd	r23, Y+6	; 0x06
     52a:	8f 81       	ldd	r24, Y+7	; 0x07
     52c:	98 85       	ldd	r25, Y+8	; 0x08
     52e:	60 96       	adiw	r28, 0x10	; 16
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	08 95       	ret

00000544 <RTC_AlarmSet>:

//Set alarm.
void RTC_AlarmSet(Alarm_Type_t Alarm, uint8_t DayDate, uint8_t Hours, uint8_t Minutes, uint8_t Seconds)
{
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	c8 2f       	mov	r28, r24
     552:	d6 2f       	mov	r29, r22
     554:	14 2f       	mov	r17, r20
     556:	e2 2e       	mov	r14, r18
     558:	80 2f       	mov	r24, r16
	uint8_t addr;

	//Convert all decimal values to their corresponding BCD values
	Seconds = Dec2bcd(Seconds);
     55a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     55e:	f8 2e       	mov	r15, r24
	Minutes = Dec2bcd(Minutes);
     560:	8e 2d       	mov	r24, r14
     562:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     566:	08 2f       	mov	r16, r24
	Hours   = Dec2bcd(Hours);
     568:	81 2f       	mov	r24, r17
     56a:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     56e:	18 2f       	mov	r17, r24
	DayDate = Dec2bcd(DayDate);	//Either Day or Date can be used. Not both.
     570:	8d 2f       	mov	r24, r29
     572:	0e 94 cc 00 	call	0x198	; 0x198 <Dec2bcd>
     576:	d8 2f       	mov	r29, r24
	
	//Set Alarm Control Bits based on Alarm Mask Bits
	//Seconds
	if (BitCheck(Alarm, 0))
     578:	c0 ff       	sbrs	r28, 0
     57a:	03 c0       	rjmp	.+6      	; 0x582 <RTC_AlarmSet+0x3e>
		BitSet(Seconds, __RTC_A1M1);
     57c:	8f 2d       	mov	r24, r15
     57e:	80 68       	ori	r24, 0x80	; 128
     580:	f8 2e       	mov	r15, r24
	//Minutes
	if (BitCheck(Alarm, 1))
     582:	c1 fd       	sbrc	r28, 1
		BitSet(Minutes, __RTC_A1M2);
     584:	00 68       	ori	r16, 0x80	; 128
	//Hours
	if (BitCheck(Alarm, 2))
     586:	c2 fd       	sbrc	r28, 2
		BitSet(Hours, __RTC_A1M3);
     588:	10 68       	ori	r17, 0x80	; 128
	//Day-Date value
	if (BitCheck(Alarm, 3))
     58a:	c3 fd       	sbrc	r28, 3
		BitSet(DayDate, __RTC_A1M4);
     58c:	d0 68       	ori	r29, 0x80	; 128
	//Day-Date flag
	if (BitCheck(Alarm, 4))
     58e:	c4 fd       	sbrc	r28, 4
		BitSet(DayDate, __RTC_DYDT);
     590:	d0 64       	ori	r29, 0x40	; 64
	
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
     592:	cc 23       	and	r28, r28
     594:	34 f0       	brlt	.+12     	; 0x5a2 <RTC_AlarmSet+0x5e>
	//Alarm 1
	else
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
     596:	6f 2d       	mov	r22, r15
     598:	87 e0       	ldi	r24, 0x07	; 7
     59a:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
     59e:	c8 e0       	ldi	r28, 0x08	; 8
     5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <RTC_AlarmSet+0x60>
	//Send data (on consecutive address)
	//Alarm 2
	if (BitCheck(Alarm, 7))
	{
		//Alarm 2 does not have seconds register
		addr = __RTC_Address_Alarm2_Minutes;
     5a2:	cb e0       	ldi	r28, 0x0B	; 11
	{
		//Alarm 1 does have a seconds register
		addr = __RTC_Address_Alarm1_Seconds;
		RTC_WriteByte(addr++, Seconds);
	}
	RTC_WriteByte(addr++, Minutes);
     5a4:	ff 24       	eor	r15, r15
     5a6:	f3 94       	inc	r15
     5a8:	fc 0e       	add	r15, r28
     5aa:	60 2f       	mov	r22, r16
     5ac:	8c 2f       	mov	r24, r28
     5ae:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, Hours);
     5b2:	ce 5f       	subi	r28, 0xFE	; 254
     5b4:	61 2f       	mov	r22, r17
     5b6:	8f 2d       	mov	r24, r15
     5b8:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
	RTC_WriteByte(addr++, DayDate);
     5bc:	6d 2f       	mov	r22, r29
     5be:	8c 2f       	mov	r24, r28
     5c0:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_WriteByte>
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <RTC_AlarmInterrupt>:

//Set alarm interrupt pin 
uint8_t RTC_AlarmInterrupt(Alarm_Number_t Alarm, uint8_t Enable)
{
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	d8 2f       	mov	r29, r24
     5d8:	c6 2f       	mov	r28, r22
	//Enable INTCN
	FlagWrite(__RTC_Address_Control, __RTC_INTCN, Enable);
     5da:	46 2f       	mov	r20, r22
     5dc:	62 e0       	ldi	r22, 0x02	; 2
     5de:	8e e0       	ldi	r24, 0x0E	; 14
     5e0:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
		
	//Enable alarm
	return (FlagWrite(__RTC_Address_Control, Alarm, Enable));
     5e4:	4c 2f       	mov	r20, r28
     5e6:	6d 2f       	mov	r22, r29
     5e8:	8e e0       	ldi	r24, 0x0E	; 14
     5ea:	0e 94 c0 01 	call	0x380	; 0x380 <FlagWrite>
}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <i2c_master_init>:
	}
	
	i2c_master_stop();
	
	return I2C_STATUS_SUCCESS;
}
     5f4:	9b 01       	movw	r18, r22
     5f6:	ac 01       	movw	r20, r24
     5f8:	11 b8       	out	0x01, r1	; 1
     5fa:	60 e0       	ldi	r22, 0x00	; 0
     5fc:	72 e1       	ldi	r23, 0x12	; 18
     5fe:	8a e7       	ldi	r24, 0x7A	; 122
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 22 09 	call	0x1244	; 0x1244 <__udivmodsi4>
     606:	da 01       	movw	r26, r20
     608:	c9 01       	movw	r24, r18
     60a:	40 97       	sbiw	r24, 0x10	; 16
     60c:	a1 09       	sbc	r26, r1
     60e:	b1 09       	sbc	r27, r1
     610:	b6 95       	lsr	r27
     612:	a7 95       	ror	r26
     614:	97 95       	ror	r25
     616:	87 95       	ror	r24
     618:	80 b9       	out	0x00, r24	; 0
     61a:	08 95       	ret

0000061c <i2c_master_start>:
     61c:	16 be       	out	0x36, r1	; 54
     61e:	94 ea       	ldi	r25, 0xA4	; 164
     620:	96 bf       	out	0x36, r25	; 54
     622:	06 b6       	in	r0, 0x36	; 54
     624:	07 fe       	sbrs	r0, 7
     626:	fd cf       	rjmp	.-6      	; 0x622 <i2c_master_start+0x6>
     628:	91 b1       	in	r25, 0x01	; 1
     62a:	98 7f       	andi	r25, 0xF8	; 248
     62c:	98 30       	cpi	r25, 0x08	; 8
     62e:	11 f0       	breq	.+4      	; 0x634 <i2c_master_start+0x18>
     630:	90 31       	cpi	r25, 0x10	; 16
     632:	91 f4       	brne	.+36     	; 0x658 <i2c_master_start+0x3c>
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	88 0f       	add	r24, r24
     638:	99 1f       	adc	r25, r25
     63a:	86 2b       	or	r24, r22
     63c:	83 b9       	out	0x03, r24	; 3
     63e:	84 e8       	ldi	r24, 0x84	; 132
     640:	86 bf       	out	0x36, r24	; 54
     642:	06 b6       	in	r0, 0x36	; 54
     644:	07 fe       	sbrs	r0, 7
     646:	fd cf       	rjmp	.-6      	; 0x642 <i2c_master_start+0x26>
     648:	81 b1       	in	r24, 0x01	; 1
     64a:	88 7f       	andi	r24, 0xF8	; 248
     64c:	88 31       	cpi	r24, 0x18	; 24
     64e:	31 f0       	breq	.+12     	; 0x65c <i2c_master_start+0x40>
     650:	80 34       	cpi	r24, 0x40	; 64
     652:	31 f4       	brne	.+12     	; 0x660 <i2c_master_start+0x44>
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	08 95       	ret
     658:	8a e0       	ldi	r24, 0x0A	; 10
     65a:	08 95       	ret
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	08 95       	ret
     660:	84 e1       	ldi	r24, 0x14	; 20
     662:	08 95       	ret

00000664 <i2c_master_write>:
     664:	83 b9       	out	0x03, r24	; 3
     666:	84 e8       	ldi	r24, 0x84	; 132
     668:	86 bf       	out	0x36, r24	; 54
     66a:	06 b6       	in	r0, 0x36	; 54
     66c:	07 fe       	sbrs	r0, 7
     66e:	fd cf       	rjmp	.-6      	; 0x66a <i2c_master_write+0x6>
     670:	81 b1       	in	r24, 0x01	; 1
     672:	88 7f       	andi	r24, 0xF8	; 248
     674:	88 32       	cpi	r24, 0x28	; 40
     676:	11 f0       	breq	.+4      	; 0x67c <i2c_master_write+0x18>
     678:	85 e1       	ldi	r24, 0x15	; 21
     67a:	08 95       	ret
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	08 95       	ret

00000680 <i2c_master_stop>:
     680:	84 e9       	ldi	r24, 0x94	; 148
     682:	86 bf       	out	0x36, r24	; 54
     684:	08 95       	ret

00000686 <i2c_master_sendByte>:

uint8_t i2c_master_sendByte(uint8_t address, uint8_t data)
{
     686:	cf 93       	push	r28
     688:	c6 2f       	mov	r28, r22
	uint8_t status = i2c_master_start(address, I2C_WRITE);
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	0e 94 0e 03 	call	0x61c	; 0x61c <i2c_master_start>
	if (status) return status;
     690:	81 11       	cpse	r24, r1
     692:	08 c0       	rjmp	.+16     	; 0x6a4 <i2c_master_sendByte+0x1e>

	status = i2c_master_write(data);
     694:	8c 2f       	mov	r24, r28
     696:	0e 94 32 03 	call	0x664	; 0x664 <i2c_master_write>
	if (status) return status;
     69a:	81 11       	cpse	r24, r1
     69c:	03 c0       	rjmp	.+6      	; 0x6a4 <i2c_master_sendByte+0x1e>

	i2c_master_stop();
     69e:	0e 94 40 03 	call	0x680	; 0x680 <i2c_master_stop>
	
	return I2C_STATUS_SUCCESS;
     6a2:	80 e0       	ldi	r24, 0x00	; 0
};
     6a4:	cf 91       	pop	r28
     6a6:	08 95       	ret

000006a8 <lq_transmitI2C>:

	for (i = 0; i < 8; i++) 
	{
		lq_writeDeviceByte(device, charmap[i], LCD_REGISTER_SELECT_BIT);
	}
}
     6a8:	fc 01       	movw	r30, r24
     6aa:	23 81       	ldd	r18, Z+3	; 0x03
     6ac:	62 2b       	or	r22, r18
     6ae:	80 81       	ld	r24, Z
     6b0:	0e 94 43 03 	call	0x686	; 0x686 <i2c_master_sendByte>
     6b4:	08 95       	ret

000006b6 <lq_writeDevicePulse>:
     6b6:	0f 93       	push	r16
     6b8:	1f 93       	push	r17
     6ba:	cf 93       	push	r28
     6bc:	8c 01       	movw	r16, r24
     6be:	c6 2f       	mov	r28, r22
     6c0:	64 60       	ori	r22, 0x04	; 4
     6c2:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6c6:	8a e0       	ldi	r24, 0x0A	; 10
     6c8:	8a 95       	dec	r24
     6ca:	f1 f7       	brne	.-4      	; 0x6c8 <lq_writeDevicePulse+0x12>
     6cc:	00 c0       	rjmp	.+0      	; 0x6ce <lq_writeDevicePulse+0x18>
     6ce:	6c 2f       	mov	r22, r28
     6d0:	6b 7f       	andi	r22, 0xFB	; 251
     6d2:	c8 01       	movw	r24, r16
     6d4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6d8:	87 ec       	ldi	r24, 0xC7	; 199
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <lq_writeDevicePulse+0x26>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <lq_writeDevicePulse+0x2c>
     6e2:	00 00       	nop
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	0f 91       	pop	r16
     6ea:	08 95       	ret

000006ec <lq_writeDevice4Bits>:
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	ec 01       	movw	r28, r24
     6f4:	16 2f       	mov	r17, r22
     6f6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     6fa:	61 2f       	mov	r22, r17
     6fc:	ce 01       	movw	r24, r28
     6fe:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <lq_writeDevicePulse>
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	1f 91       	pop	r17
     708:	08 95       	ret

0000070a <lq_writeDeviceByte>:
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	8c 01       	movw	r16, r24
     716:	f4 2e       	mov	r15, r20
     718:	86 2f       	mov	r24, r22
     71a:	80 7f       	andi	r24, 0xF0	; 240
     71c:	90 e1       	ldi	r25, 0x10	; 16
     71e:	69 9f       	mul	r22, r25
     720:	e0 01       	movw	r28, r0
     722:	11 24       	eor	r1, r1
     724:	68 2f       	mov	r22, r24
     726:	64 2b       	or	r22, r20
     728:	c8 01       	movw	r24, r16
     72a:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     72e:	6c 2f       	mov	r22, r28
     730:	6f 29       	or	r22, r15
     732:	c8 01       	movw	r24, r16
     734:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	ff 90       	pop	r15
     742:	08 95       	ret

00000744 <lq_print>:
     744:	0f 93       	push	r16
     746:	1f 93       	push	r17
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	8c 01       	movw	r16, r24
     74e:	eb 01       	movw	r28, r22
     750:	68 81       	ld	r22, Y
     752:	06 c0       	rjmp	.+12     	; 0x760 <lq_print+0x1c>
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	c8 01       	movw	r24, r16
     758:	0e 94 85 03 	call	0x70a	; 0x70a <lq_writeDeviceByte>
     75c:	21 96       	adiw	r28, 0x01	; 1
     75e:	68 81       	ld	r22, Y
     760:	61 11       	cpse	r22, r1
     762:	f8 cf       	rjmp	.-16     	; 0x754 <lq_print+0x10>
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	08 95       	ret

0000076e <lq_sendCommand>:
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	0e 94 85 03 	call	0x70a	; 0x70a <lq_writeDeviceByte>
     774:	08 95       	ret

00000776 <lq_setCursor>:
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	00 d0       	rcall	.+0      	; 0x77c <lq_setCursor+0x6>
     77c:	00 d0       	rcall	.+0      	; 0x77e <lq_setCursor+0x8>
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	19 82       	std	Y+1, r1	; 0x01
     784:	20 e4       	ldi	r18, 0x40	; 64
     786:	2a 83       	std	Y+2, r18	; 0x02
     788:	24 e1       	ldi	r18, 0x14	; 20
     78a:	2b 83       	std	Y+3, r18	; 0x03
     78c:	24 e5       	ldi	r18, 0x54	; 84
     78e:	2c 83       	std	Y+4, r18	; 0x04
     790:	e1 e0       	ldi	r30, 0x01	; 1
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	ec 0f       	add	r30, r28
     796:	fd 1f       	adc	r31, r29
     798:	e6 0f       	add	r30, r22
     79a:	f1 1d       	adc	r31, r1
     79c:	60 81       	ld	r22, Z
     79e:	64 0f       	add	r22, r20
     7a0:	60 68       	ori	r22, 0x80	; 128
     7a2:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <lq_clear>:
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	ec 01       	movw	r28, r24
     7ba:	61 e0       	ldi	r22, 0x01	; 1
     7bc:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7c0:	8f e3       	ldi	r24, 0x3F	; 63
     7c2:	9f e1       	ldi	r25, 0x1F	; 31
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <lq_clear+0x10>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <lq_clear+0x16>
     7ca:	00 00       	nop
     7cc:	40 e0       	ldi	r20, 0x00	; 0
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	ce 01       	movw	r24, r28
     7d2:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	08 95       	ret

000007dc <lq_returnHome>:
     7dc:	62 e0       	ldi	r22, 0x02	; 2
     7de:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     7e2:	8f e3       	ldi	r24, 0x3F	; 63
     7e4:	9f e1       	ldi	r25, 0x1F	; 31
     7e6:	01 97       	sbiw	r24, 0x01	; 1
     7e8:	f1 f7       	brne	.-4      	; 0x7e6 <lq_returnHome+0xa>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <lq_returnHome+0x10>
     7ec:	00 00       	nop
     7ee:	08 95       	ret

000007f0 <lq_turnOnDisplay>:
     7f0:	fc 01       	movw	r30, r24
     7f2:	65 81       	ldd	r22, Z+5	; 0x05
     7f4:	26 2f       	mov	r18, r22
     7f6:	24 60       	ori	r18, 0x04	; 4
     7f8:	25 83       	std	Z+5, r18	; 0x05
     7fa:	6c 60       	ori	r22, 0x0C	; 12
     7fc:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
     800:	08 95       	ret

00000802 <lq_init>:

#include <avr/io.h>
#include <util/delay.h>

LiquidCrystalDevice_t lq_init(uint8_t address, uint8_t columns, uint8_t rows, uint8_t dotSize)
{
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	cd b7       	in	r28, 0x3d	; 61
     808:	de b7       	in	r29, 0x3e	; 62
     80a:	2e 97       	sbiw	r28, 0x0e	; 14
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	f8 94       	cli
     810:	de bf       	out	0x3e, r29	; 62
     812:	0f be       	out	0x3f, r0	; 63
     814:	cd bf       	out	0x3d, r28	; 61
	LiquidCrystalDevice_t device;

	device.Address = address;
     816:	88 87       	std	Y+8, r24	; 0x08
	device.Columns = columns;
     818:	69 87       	std	Y+9, r22	; 0x09
	device.Rows = rows;
     81a:	4a 87       	std	Y+10, r20	; 0x0a
	device.Backlight = LCD_NOBACKLIGHT;
     81c:	1b 86       	std	Y+11, r1	; 0x0b
	device.DisplayFunction = LCD_4BITMODE | LCD_1LINE | dotSize;
     81e:	2c 87       	std	Y+12, r18	; 0x0c
	device.DisplayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
     820:	84 e0       	ldi	r24, 0x04	; 4
     822:	8d 87       	std	Y+13, r24	; 0x0d

	// Initialize to default text direction (for roman languages)
	device.DisplayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     824:	82 e0       	ldi	r24, 0x02	; 2
     826:	8e 87       	std	Y+14, r24	; 0x0e

	if (rows > 1) {
     828:	42 30       	cpi	r20, 0x02	; 2
     82a:	18 f0       	brcs	.+6      	; 0x832 <lq_init+0x30>
		device.DisplayFunction |= LCD_2LINE;
     82c:	82 2f       	mov	r24, r18
     82e:	88 60       	ori	r24, 0x08	; 8
     830:	8c 87       	std	Y+12, r24	; 0x0c
	}

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotSize != 0) && (rows == 1)) {
     832:	22 23       	and	r18, r18
     834:	29 f0       	breq	.+10     	; 0x840 <lq_init+0x3e>
     836:	41 30       	cpi	r20, 0x01	; 1
     838:	19 f4       	brne	.+6      	; 0x840 <lq_init+0x3e>
		device.DisplayFunction |= LCD_5x10DOTS;
     83a:	8c 85       	ldd	r24, Y+12	; 0x0c
     83c:	84 60       	ori	r24, 0x04	; 4
     83e:	8c 87       	std	Y+12, r24	; 0x0c
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     840:	2f ef       	ldi	r18, 0xFF	; 255
     842:	81 ee       	ldi	r24, 0xE1	; 225
     844:	94 e0       	ldi	r25, 0x04	; 4
     846:	21 50       	subi	r18, 0x01	; 1
     848:	80 40       	sbci	r24, 0x00	; 0
     84a:	90 40       	sbci	r25, 0x00	; 0
     84c:	e1 f7       	brne	.-8      	; 0x846 <lq_init+0x44>
     84e:	00 c0       	rjmp	.+0      	; 0x850 <lq_init+0x4e>
     850:	00 00       	nop
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	_delay_ms(100);
	
	// Now we pull both RS and R/W low to begin commands
	lq_transmitI2C(&device, LCD_NOBACKLIGHT);	// reset expanderand turn backlight off (Bit 8 =1)
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	ce 01       	movw	r24, r28
     856:	08 96       	adiw	r24, 0x08	; 8
     858:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
     85c:	2f ef       	ldi	r18, 0xFF	; 255
     85e:	81 ee       	ldi	r24, 0xE1	; 225
     860:	94 e0       	ldi	r25, 0x04	; 4
     862:	21 50       	subi	r18, 0x01	; 1
     864:	80 40       	sbci	r24, 0x00	; 0
     866:	90 40       	sbci	r25, 0x00	; 0
     868:	e1 f7       	brne	.-8      	; 0x862 <__stack+0x3>
     86a:	00 c0       	rjmp	.+0      	; 0x86c <__stack+0xd>
     86c:	00 00       	nop
	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	// we start in 8bit mode, try to set 4 bit mode
	lq_transmitI2C(&device, 0x03 << 4);
     86e:	60 e3       	ldi	r22, 0x30	; 48
     870:	ce 01       	movw	r24, r28
     872:	08 96       	adiw	r24, 0x08	; 8
     874:	0e 94 54 03 	call	0x6a8	; 0x6a8 <lq_transmitI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     878:	8f e4       	ldi	r24, 0x4F	; 79
     87a:	96 e4       	ldi	r25, 0x46	; 70
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	f1 f7       	brne	.-4      	; 0x87c <__stack+0x1d>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// second try
	lq_writeDevice4Bits(&device, 0x03 << 4);
     884:	60 e3       	ldi	r22, 0x30	; 48
     886:	ce 01       	movw	r24, r28
     888:	08 96       	adiw	r24, 0x08	; 8
     88a:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     88e:	8f e4       	ldi	r24, 0x4F	; 79
     890:	96 e4       	ldi	r25, 0x46	; 70
     892:	01 97       	sbiw	r24, 0x01	; 1
     894:	f1 f7       	brne	.-4      	; 0x892 <__stack+0x33>
     896:	00 c0       	rjmp	.+0      	; 0x898 <__stack+0x39>
     898:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// third go!
	lq_writeDevice4Bits(&device, 0x03 << 4);
     89a:	60 e3       	ldi	r22, 0x30	; 48
     89c:	ce 01       	movw	r24, r28
     89e:	08 96       	adiw	r24, 0x08	; 8
     8a0:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>
     8a4:	87 e5       	ldi	r24, 0x57	; 87
     8a6:	92 e0       	ldi	r25, 0x02	; 2
     8a8:	01 97       	sbiw	r24, 0x01	; 1
     8aa:	f1 f7       	brne	.-4      	; 0x8a8 <__stack+0x49>
     8ac:	00 c0       	rjmp	.+0      	; 0x8ae <__stack+0x4f>
     8ae:	00 00       	nop
	_delay_us(150); // wait min 150 mics
	
	// finally, set to 4-bit interface
	lq_writeDevice4Bits(&device, 0x02 << 4);
     8b0:	60 e2       	ldi	r22, 0x20	; 32
     8b2:	ce 01       	movw	r24, r28
     8b4:	08 96       	adiw	r24, 0x08	; 8
     8b6:	0e 94 76 03 	call	0x6ec	; 0x6ec <lq_writeDevice4Bits>

	// set # lines, font size, etc.
	lq_sendCommand(&device, LCD_FUNCTIONSET | device.DisplayFunction);
     8ba:	6c 85       	ldd	r22, Y+12	; 0x0c
     8bc:	60 62       	ori	r22, 0x20	; 32
     8be:	ce 01       	movw	r24, r28
     8c0:	08 96       	adiw	r24, 0x08	; 8
     8c2:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
	
	// turn the display on with no cursor or blinking default
	lq_turnOnDisplay(&device);
     8c6:	ce 01       	movw	r24, r28
     8c8:	08 96       	adiw	r24, 0x08	; 8
     8ca:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <lq_turnOnDisplay>
	
	// clear it off
	lq_clear(&device);
     8ce:	ce 01       	movw	r24, r28
     8d0:	08 96       	adiw	r24, 0x08	; 8
     8d2:	0e 94 da 03 	call	0x7b4	; 0x7b4 <lq_clear>
	
	// set the entry mode
	lq_sendCommand(&device, LCD_ENTRYMODESET | device.DisplayMode);
     8d6:	6e 85       	ldd	r22, Y+14	; 0x0e
     8d8:	64 60       	ori	r22, 0x04	; 4
     8da:	ce 01       	movw	r24, r28
     8dc:	08 96       	adiw	r24, 0x08	; 8
     8de:	0e 94 b7 03 	call	0x76e	; 0x76e <lq_sendCommand>
	
	lq_returnHome(&device);
     8e2:	ce 01       	movw	r24, r28
     8e4:	08 96       	adiw	r24, 0x08	; 8
     8e6:	0e 94 ee 03 	call	0x7dc	; 0x7dc <lq_returnHome>

	return device;
     8ea:	87 e0       	ldi	r24, 0x07	; 7
     8ec:	fe 01       	movw	r30, r28
     8ee:	38 96       	adiw	r30, 0x08	; 8
     8f0:	de 01       	movw	r26, r28
     8f2:	11 96       	adiw	r26, 0x01	; 1
     8f4:	01 90       	ld	r0, Z+
     8f6:	0d 92       	st	X+, r0
     8f8:	8a 95       	dec	r24
     8fa:	e1 f7       	brne	.-8      	; 0x8f4 <__stack+0x95>
     8fc:	29 81       	ldd	r18, Y+1	; 0x01
     8fe:	3a 81       	ldd	r19, Y+2	; 0x02
     900:	4b 81       	ldd	r20, Y+3	; 0x03
     902:	5c 81       	ldd	r21, Y+4	; 0x04
     904:	6d 81       	ldd	r22, Y+5	; 0x05
     906:	7e 81       	ldd	r23, Y+6	; 0x06
};
     908:	8f 81       	ldd	r24, Y+7	; 0x07
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	2e 96       	adiw	r28, 0x0e	; 14
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	f8 94       	cli
     912:	de bf       	out	0x3e, r29	; 62
     914:	0f be       	out	0x3f, r0	; 63
     916:	cd bf       	out	0x3d, r28	; 61
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	08 95       	ret

0000091e <__vector_1>:
	serial_send_string(distanceStr);
}
void buttonInit(){
	PORTD |= (1 << PD6);// Pull up button
	GICR |= (1 << INT0);// Enable Button interrupt 0
	MCUCR |= (1 << ISC01);	// Set falling edge interrupt
     91e:	1f 92       	push	r1
     920:	0f 92       	push	r0
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	0f 92       	push	r0
     926:	11 24       	eor	r1, r1
     928:	2f 93       	push	r18
     92a:	3f 93       	push	r19
     92c:	4f 93       	push	r20
     92e:	5f 93       	push	r21
     930:	6f 93       	push	r22
     932:	7f 93       	push	r23
     934:	8f 93       	push	r24
     936:	9f 93       	push	r25
     938:	af 93       	push	r26
     93a:	bf 93       	push	r27
     93c:	ef 93       	push	r30
     93e:	ff 93       	push	r31
     940:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <isInAutomaticMode>
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	89 27       	eor	r24, r25
     948:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <isInAutomaticMode>
     94c:	81 11       	cpse	r24, r1
     94e:	0b c0       	rjmp	.+22     	; 0x966 <__vector_1+0x48>
     950:	87 e7       	ldi	r24, 0x77	; 119
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <isMotorWorking>
     95e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <isTrashOpen>
     962:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <measurementFlag>
     966:	ff 91       	pop	r31
     968:	ef 91       	pop	r30
     96a:	bf 91       	pop	r27
     96c:	af 91       	pop	r26
     96e:	9f 91       	pop	r25
     970:	8f 91       	pop	r24
     972:	7f 91       	pop	r23
     974:	6f 91       	pop	r22
     976:	5f 91       	pop	r21
     978:	4f 91       	pop	r20
     97a:	3f 91       	pop	r19
     97c:	2f 91       	pop	r18
     97e:	0f 90       	pop	r0
     980:	0f be       	out	0x3f, r0	; 63
     982:	0f 90       	pop	r0
     984:	1f 90       	pop	r1
     986:	18 95       	reti

00000988 <openTrash>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	c0 e0       	ldi	r28, 0x00	; 0
     98e:	d0 e0       	ldi	r29, 0x00	; 0
     990:	25 c0       	rjmp	.+74     	; 0x9dc <openTrash+0x54>
     992:	84 e0       	ldi	r24, 0x04	; 4
     994:	8b bb       	out	0x1b, r24	; 27
     996:	8f e4       	ldi	r24, 0x4F	; 79
     998:	93 ec       	ldi	r25, 0xC3	; 195
     99a:	01 97       	sbiw	r24, 0x01	; 1
     99c:	f1 f7       	brne	.-4      	; 0x99a <openTrash+0x12>
     99e:	00 c0       	rjmp	.+0      	; 0x9a0 <openTrash+0x18>
     9a0:	00 00       	nop
     9a2:	82 e0       	ldi	r24, 0x02	; 2
     9a4:	8b bb       	out	0x1b, r24	; 27
     9a6:	8f e4       	ldi	r24, 0x4F	; 79
     9a8:	93 ec       	ldi	r25, 0xC3	; 195
     9aa:	01 97       	sbiw	r24, 0x01	; 1
     9ac:	f1 f7       	brne	.-4      	; 0x9aa <openTrash+0x22>
     9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <openTrash+0x28>
     9b0:	00 00       	nop
     9b2:	88 e0       	ldi	r24, 0x08	; 8
     9b4:	8b bb       	out	0x1b, r24	; 27
     9b6:	8f e4       	ldi	r24, 0x4F	; 79
     9b8:	93 ec       	ldi	r25, 0xC3	; 195
     9ba:	01 97       	sbiw	r24, 0x01	; 1
     9bc:	f1 f7       	brne	.-4      	; 0x9ba <openTrash+0x32>
     9be:	00 c0       	rjmp	.+0      	; 0x9c0 <openTrash+0x38>
     9c0:	00 00       	nop
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	8b bb       	out	0x1b, r24	; 27
     9c6:	8f e4       	ldi	r24, 0x4F	; 79
     9c8:	93 ec       	ldi	r25, 0xC3	; 195
     9ca:	01 97       	sbiw	r24, 0x01	; 1
     9cc:	f1 f7       	brne	.-4      	; 0x9ca <openTrash+0x42>
     9ce:	00 c0       	rjmp	.+0      	; 0x9d0 <openTrash+0x48>
     9d0:	00 00       	nop
     9d2:	8e e8       	ldi	r24, 0x8E	; 142
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
     9da:	21 96       	adiw	r28, 0x01	; 1
     9dc:	c5 30       	cpi	r28, 0x05	; 5
     9de:	d1 05       	cpc	r29, r1
     9e0:	c4 f2       	brlt	.-80     	; 0x992 <openTrash+0xa>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <isTrashCompleteOpen>
     9e8:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <isMotorWorking>
     9ec:	df 91       	pop	r29
     9ee:	cf 91       	pop	r28
     9f0:	08 95       	ret

000009f2 <closeTrash>:
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	c0 e0       	ldi	r28, 0x00	; 0
     9f8:	d0 e0       	ldi	r29, 0x00	; 0
     9fa:	25 c0       	rjmp	.+74     	; 0xa46 <closeTrash+0x54>
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	8b bb       	out	0x1b, r24	; 27
     a00:	8f e4       	ldi	r24, 0x4F	; 79
     a02:	93 ec       	ldi	r25, 0xC3	; 195
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	f1 f7       	brne	.-4      	; 0xa04 <closeTrash+0x12>
     a08:	00 c0       	rjmp	.+0      	; 0xa0a <closeTrash+0x18>
     a0a:	00 00       	nop
     a0c:	88 e0       	ldi	r24, 0x08	; 8
     a0e:	8b bb       	out	0x1b, r24	; 27
     a10:	8f e4       	ldi	r24, 0x4F	; 79
     a12:	93 ec       	ldi	r25, 0xC3	; 195
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	f1 f7       	brne	.-4      	; 0xa14 <closeTrash+0x22>
     a18:	00 c0       	rjmp	.+0      	; 0xa1a <closeTrash+0x28>
     a1a:	00 00       	nop
     a1c:	82 e0       	ldi	r24, 0x02	; 2
     a1e:	8b bb       	out	0x1b, r24	; 27
     a20:	8f e4       	ldi	r24, 0x4F	; 79
     a22:	93 ec       	ldi	r25, 0xC3	; 195
     a24:	01 97       	sbiw	r24, 0x01	; 1
     a26:	f1 f7       	brne	.-4      	; 0xa24 <closeTrash+0x32>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <closeTrash+0x38>
     a2a:	00 00       	nop
     a2c:	84 e0       	ldi	r24, 0x04	; 4
     a2e:	8b bb       	out	0x1b, r24	; 27
     a30:	8f e4       	ldi	r24, 0x4F	; 79
     a32:	93 ec       	ldi	r25, 0xC3	; 195
     a34:	01 97       	sbiw	r24, 0x01	; 1
     a36:	f1 f7       	brne	.-4      	; 0xa34 <closeTrash+0x42>
     a38:	00 c0       	rjmp	.+0      	; 0xa3a <closeTrash+0x48>
     a3a:	00 00       	nop
     a3c:	8b e9       	ldi	r24, 0x9B	; 155
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
     a44:	21 96       	adiw	r28, 0x01	; 1
     a46:	c5 30       	cpi	r28, 0x05	; 5
     a48:	d1 05       	cpc	r29, r1
     a4a:	c4 f2       	brlt	.-80     	; 0x9fc <closeTrash+0xa>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <isTrashCompleteClose>
     a52:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <isMotorWorking>
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	08 95       	ret

00000a5c <initClock>:
     a5c:	cf 93       	push	r28
     a5e:	df 93       	push	r29
     a60:	cd b7       	in	r28, 0x3d	; 61
     a62:	de b7       	in	r29, 0x3e	; 62
     a64:	28 97       	sbiw	r28, 0x08	; 8
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	f8 94       	cli
     a6a:	de bf       	out	0x3e, r29	; 62
     a6c:	0f be       	out	0x3f, r0	; 63
     a6e:	cd bf       	out	0x3d, r28	; 61
     a70:	89 ee       	ldi	r24, 0xE9	; 233
     a72:	97 e0       	ldi	r25, 0x07	; 7
     a74:	27 e3       	ldi	r18, 0x37	; 55
     a76:	3b e3       	ldi	r19, 0x3B	; 59
     a78:	42 e1       	ldi	r20, 0x12	; 18
     a7a:	52 e0       	ldi	r21, 0x02	; 2
     a7c:	6d e1       	ldi	r22, 0x1D	; 29
     a7e:	76 e0       	ldi	r23, 0x06	; 6
     a80:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
     a84:	28 96       	adiw	r28, 0x08	; 8
     a86:	0f b6       	in	r0, 0x3f	; 63
     a88:	f8 94       	cli
     a8a:	de bf       	out	0x3e, r29	; 62
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	cd bf       	out	0x3d, r28	; 61
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	08 95       	ret

00000a96 <initBuzzer>:
     a96:	82 b3       	in	r24, 0x12	; 18
     a98:	88 60       	ori	r24, 0x08	; 8
     a9a:	82 bb       	out	0x12, r24	; 18
     a9c:	81 b3       	in	r24, 0x11	; 17
     a9e:	80 61       	ori	r24, 0x10	; 16
     aa0:	81 bb       	out	0x11, r24	; 17
     aa2:	08 95       	ret

00000aa4 <turnOffBuzzer>:
     aa4:	82 b3       	in	r24, 0x12	; 18
     aa6:	8f 7e       	andi	r24, 0xEF	; 239
     aa8:	82 bb       	out	0x12, r24	; 18
     aaa:	08 95       	ret

00000aac <setupAlarm>:
     aac:	0f 93       	push	r16
     aae:	61 e0       	ldi	r22, 0x01	; 1
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <RTC_AlarmInterrupt>
     ab6:	00 91 35 01 	lds	r16, 0x0135	; 0x800135 <alarmSeconds>
     aba:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <alarmMinutes>
     abe:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <alarmHours>
     ac2:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <t+0x4>
     ac6:	88 e0       	ldi	r24, 0x08	; 8
     ac8:	0e 94 a2 02 	call	0x544	; 0x544 <RTC_AlarmSet>
     acc:	0f 91       	pop	r16
     ace:	08 95       	ret

00000ad0 <checkAlarm>:
     ad0:	82 b3       	in	r24, 0x12	; 18
     ad2:	08 95       	ret

00000ad4 <sensorInit>:
     ad4:	87 b3       	in	r24, 0x17	; 23
     ad6:	82 60       	ori	r24, 0x02	; 2
     ad8:	87 bb       	out	0x17, r24	; 23
     ada:	08 95       	ret

00000adc <ADC_Init>:
     adc:	80 ec       	ldi	r24, 0xC0	; 192
     ade:	87 b9       	out	0x07, r24	; 7
     ae0:	87 e8       	ldi	r24, 0x87	; 135
     ae2:	86 b9       	out	0x06, r24	; 6
     ae4:	08 95       	ret

00000ae6 <adcRead>:
     ae6:	86 b1       	in	r24, 0x06	; 6
     ae8:	80 65       	ori	r24, 0x50	; 80
     aea:	86 b9       	out	0x06, r24	; 6
     aec:	86 b1       	in	r24, 0x06	; 6
     aee:	84 b1       	in	r24, 0x04	; 4
     af0:	95 b1       	in	r25, 0x05	; 5
     af2:	08 95       	ret

00000af4 <calculateTemp>:
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
     afc:	cd b7       	in	r28, 0x3d	; 61
     afe:	de b7       	in	r29, 0x3e	; 62
     b00:	2a 97       	sbiw	r28, 0x0a	; 10
     b02:	0f b6       	in	r0, 0x3f	; 63
     b04:	f8 94       	cli
     b06:	de bf       	out	0x3e, r29	; 62
     b08:	0f be       	out	0x3f, r0	; 63
     b0a:	cd bf       	out	0x3d, r28	; 61
     b0c:	0e 94 73 05 	call	0xae6	; 0xae6 <adcRead>
     b10:	0e 94 73 05 	call	0xae6	; 0xae6 <adcRead>
     b14:	bc 01       	movw	r22, r24
     b16:	80 e0       	ldi	r24, 0x00	; 0
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	0e 94 27 08 	call	0x104e	; 0x104e <__floatunsisf>
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	40 e8       	ldi	r20, 0x80	; 128
     b24:	5e e3       	ldi	r21, 0x3E	; 62
     b26:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__mulsf3>
     b2a:	8e 01       	movw	r16, r28
     b2c:	0f 5f       	subi	r16, 0xFF	; 255
     b2e:	1f 4f       	sbci	r17, 0xFF	; 255
     b30:	21 e0       	ldi	r18, 0x01	; 1
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	44 e0       	ldi	r20, 0x04	; 4
     b36:	50 e0       	ldi	r21, 0x00	; 0
     b38:	0e 94 44 09 	call	0x1288	; 0x1288 <dtostrf>
     b3c:	4d e0       	ldi	r20, 0x0D	; 13
     b3e:	61 e0       	ldi	r22, 0x01	; 1
     b40:	86 e4       	ldi	r24, 0x46	; 70
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     b48:	b8 01       	movw	r22, r16
     b4a:	86 e4       	ldi	r24, 0x46	; 70
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     b52:	2a 96       	adiw	r28, 0x0a	; 10
     b54:	0f b6       	in	r0, 0x3f	; 63
     b56:	f8 94       	cli
     b58:	de bf       	out	0x3e, r29	; 62
     b5a:	0f be       	out	0x3f, r0	; 63
     b5c:	cd bf       	out	0x3d, r28	; 61
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	1f 91       	pop	r17
     b64:	0f 91       	pop	r16
     b66:	08 95       	ret

00000b68 <updateLcd>:
     b68:	ef 92       	push	r14
     b6a:	ff 92       	push	r15
     b6c:	0f 93       	push	r16
     b6e:	1f 93       	push	r17
     b70:	cf 93       	push	r28
     b72:	df 93       	push	r29
     b74:	cd b7       	in	r28, 0x3d	; 61
     b76:	de b7       	in	r29, 0x3e	; 62
     b78:	64 97       	sbiw	r28, 0x14	; 20
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	f8 94       	cli
     b7e:	de bf       	out	0x3e, r29	; 62
     b80:	0f be       	out	0x3f, r0	; 63
     b82:	cd bf       	out	0x3d, r28	; 61
     b84:	0e 94 4a 02 	call	0x494	; 0x494 <RTC_Get>
     b88:	ee e3       	ldi	r30, 0x3E	; 62
     b8a:	f1 e0       	ldi	r31, 0x01	; 1
     b8c:	20 83       	st	Z, r18
     b8e:	31 83       	std	Z+1, r19	; 0x01
     b90:	42 83       	std	Z+2, r20	; 0x02
     b92:	53 83       	std	Z+3, r21	; 0x03
     b94:	64 83       	std	Z+4, r22	; 0x04
     b96:	75 83       	std	Z+5, r23	; 0x05
     b98:	86 83       	std	Z+6, r24	; 0x06
     b9a:	97 83       	std	Z+7, r25	; 0x07
     b9c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <RTC_Status>
     ba0:	81 30       	cpi	r24, 0x01	; 1
     ba2:	09 f0       	breq	.+2      	; 0xba6 <updateLcd+0x3e>
     ba4:	49 c0       	rjmp	.+146    	; 0xc38 <updateLcd+0xd0>
     ba6:	40 e0       	ldi	r20, 0x00	; 0
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	86 e4       	ldi	r24, 0x46	; 70
     bac:	91 e0       	ldi	r25, 0x01	; 1
     bae:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     bb2:	0e e3       	ldi	r16, 0x3E	; 62
     bb4:	11 e0       	ldi	r17, 0x01	; 1
     bb6:	f8 01       	movw	r30, r16
     bb8:	20 81       	ld	r18, Z
     bba:	91 81       	ldd	r25, Z+1	; 0x01
     bbc:	82 81       	ldd	r24, Z+2	; 0x02
     bbe:	1f 92       	push	r1
     bc0:	2f 93       	push	r18
     bc2:	1f 92       	push	r1
     bc4:	9f 93       	push	r25
     bc6:	1f 92       	push	r1
     bc8:	8f 93       	push	r24
     bca:	88 ea       	ldi	r24, 0xA8	; 168
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	9f 93       	push	r25
     bd0:	8f 93       	push	r24
     bd2:	7e 01       	movw	r14, r28
     bd4:	fb e0       	ldi	r31, 0x0B	; 11
     bd6:	ef 0e       	add	r14, r31
     bd8:	f1 1c       	adc	r15, r1
     bda:	ff 92       	push	r15
     bdc:	ef 92       	push	r14
     bde:	0e 94 7e 09 	call	0x12fc	; 0x12fc <sprintf>
     be2:	b7 01       	movw	r22, r14
     be4:	86 e4       	ldi	r24, 0x46	; 70
     be6:	91 e0       	ldi	r25, 0x01	; 1
     be8:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	86 e4       	ldi	r24, 0x46	; 70
     bf2:	91 e0       	ldi	r25, 0x01	; 1
     bf4:	0e 94 bb 03 	call	0x776	; 0x776 <lq_setCursor>
     bf8:	f8 01       	movw	r30, r16
     bfa:	94 81       	ldd	r25, Z+4	; 0x04
     bfc:	85 81       	ldd	r24, Z+5	; 0x05
     bfe:	1f 92       	push	r1
     c00:	9f 93       	push	r25
     c02:	1f 92       	push	r1
     c04:	8f 93       	push	r24
     c06:	87 81       	ldd	r24, Z+7	; 0x07
     c08:	8f 93       	push	r24
     c0a:	86 81       	ldd	r24, Z+6	; 0x06
     c0c:	8f 93       	push	r24
     c0e:	87 eb       	ldi	r24, 0xB7	; 183
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	9f 93       	push	r25
     c14:	8f 93       	push	r24
     c16:	8e 01       	movw	r16, r28
     c18:	0f 5f       	subi	r16, 0xFF	; 255
     c1a:	1f 4f       	sbci	r17, 0xFF	; 255
     c1c:	1f 93       	push	r17
     c1e:	0f 93       	push	r16
     c20:	0e 94 7e 09 	call	0x12fc	; 0x12fc <sprintf>
     c24:	b8 01       	movw	r22, r16
     c26:	86 e4       	ldi	r24, 0x46	; 70
     c28:	91 e0       	ldi	r25, 0x01	; 1
     c2a:	0e 94 a2 03 	call	0x744	; 0x744 <lq_print>
     c2e:	0f b6       	in	r0, 0x3f	; 63
     c30:	f8 94       	cli
     c32:	de bf       	out	0x3e, r29	; 62
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	cd bf       	out	0x3d, r28	; 61
     c38:	64 96       	adiw	r28, 0x14	; 20
     c3a:	0f b6       	in	r0, 0x3f	; 63
     c3c:	f8 94       	cli
     c3e:	de bf       	out	0x3e, r29	; 62
     c40:	0f be       	out	0x3f, r0	; 63
     c42:	cd bf       	out	0x3d, r28	; 61
     c44:	df 91       	pop	r29
     c46:	cf 91       	pop	r28
     c48:	1f 91       	pop	r17
     c4a:	0f 91       	pop	r16
     c4c:	ff 90       	pop	r15
     c4e:	ef 90       	pop	r14
     c50:	08 95       	ret

00000c52 <__vector_11>:
     c52:	1f 92       	push	r1
     c54:	0f 92       	push	r0
     c56:	0f b6       	in	r0, 0x3f	; 63
     c58:	0f 92       	push	r0
     c5a:	11 24       	eor	r1, r1
     c5c:	2f 93       	push	r18
     c5e:	3f 93       	push	r19
     c60:	4f 93       	push	r20
     c62:	5f 93       	push	r21
     c64:	6f 93       	push	r22
     c66:	7f 93       	push	r23
     c68:	8f 93       	push	r24
     c6a:	9f 93       	push	r25
     c6c:	af 93       	push	r26
     c6e:	bf 93       	push	r27
     c70:	ef 93       	push	r30
     c72:	ff 93       	push	r31
     c74:	86 e0       	ldi	r24, 0x06	; 6
     c76:	82 bf       	out	0x32, r24	; 50
     c78:	88 b7       	in	r24, 0x38	; 56
     c7a:	81 60       	ori	r24, 0x01	; 1
     c7c:	88 bf       	out	0x38, r24	; 56
     c7e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <distanceTimeCounter>
     c82:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <distanceTimeCounter+0x1>
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <distanceTimeCounter+0x1>
     c8c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <distanceTimeCounter>
     c90:	0e 94 b4 05 	call	0xb68	; 0xb68 <updateLcd>
     c94:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <buzzerOn>
     c98:	88 23       	and	r24, r24
     c9a:	51 f0       	breq	.+20     	; 0xcb0 <__vector_11+0x5e>
     c9c:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
     ca0:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__data_end+0x1>
     ca4:	2f 5f       	subi	r18, 0xFF	; 255
     ca6:	3f 4f       	sbci	r19, 0xFF	; 255
     ca8:	30 93 27 01 	sts	0x0127, r19	; 0x800127 <__data_end+0x1>
     cac:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <__data_end>
     cb0:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
     cb4:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__data_end+0x1>
     cb8:	2e 33       	cpi	r18, 0x3E	; 62
     cba:	31 05       	cpc	r19, r1
     cbc:	61 f4       	brne	.+24     	; 0xcd6 <__vector_11+0x84>
     cbe:	88 23       	and	r24, r24
     cc0:	51 f0       	breq	.+20     	; 0xcd6 <__vector_11+0x84>
     cc2:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__data_end+0x1>
     cc6:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
     cca:	86 e0       	ldi	r24, 0x06	; 6
     ccc:	82 bf       	out	0x32, r24	; 50
     cce:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <buzzerOn>
     cd2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <turnOffBuzzer>
     cd6:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <isObjectDetected>
     cda:	88 23       	and	r24, r24
     cdc:	51 f0       	breq	.+20     	; 0xcf2 <__vector_11+0xa0>
     cde:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <trashOpentimeCounter>
     ce2:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <trashOpentimeCounter+0x1>
     ce6:	2f 5f       	subi	r18, 0xFF	; 255
     ce8:	3f 4f       	sbci	r19, 0xFF	; 255
     cea:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <trashOpentimeCounter+0x1>
     cee:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <trashOpentimeCounter>
     cf2:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <trashOpentimeCounter>
     cf6:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <trashOpentimeCounter+0x1>
     cfa:	26 33       	cpi	r18, 0x36	; 54
     cfc:	31 40       	sbci	r19, 0x01	; 1
     cfe:	79 f4       	brne	.+30     	; 0xd1e <__vector_11+0xcc>
     d00:	88 23       	and	r24, r24
     d02:	69 f0       	breq	.+26     	; 0xd1e <__vector_11+0xcc>
     d04:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <trashOpentimeCounter+0x1>
     d08:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <trashOpentimeCounter>
     d0c:	86 e0       	ldi	r24, 0x06	; 6
     d0e:	82 bf       	out	0x32, r24	; 50
     d10:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <isObjectDetected>
     d14:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <isTrashOpen>
     d18:	81 e0       	ldi	r24, 0x01	; 1
     d1a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <isMotorWorking>
     d1e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <distanceTimeCounter>
     d22:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <distanceTimeCounter+0x1>
     d26:	40 97       	sbiw	r24, 0x10	; 16
     d28:	71 f4       	brne	.+28     	; 0xd46 <__vector_11+0xf4>
     d2a:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <isInAutomaticMode>
     d2e:	88 23       	and	r24, r24
     d30:	19 f0       	breq	.+6      	; 0xd38 <__vector_11+0xe6>
     d32:	81 e0       	ldi	r24, 0x01	; 1
     d34:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <measurementFlag>
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <isUpdateTemp>
     d3e:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <distanceTimeCounter+0x1>
     d42:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <distanceTimeCounter>
     d46:	ff 91       	pop	r31
     d48:	ef 91       	pop	r30
     d4a:	bf 91       	pop	r27
     d4c:	af 91       	pop	r26
     d4e:	9f 91       	pop	r25
     d50:	8f 91       	pop	r24
     d52:	7f 91       	pop	r23
     d54:	6f 91       	pop	r22
     d56:	5f 91       	pop	r21
     d58:	4f 91       	pop	r20
     d5a:	3f 91       	pop	r19
     d5c:	2f 91       	pop	r18
     d5e:	0f 90       	pop	r0
     d60:	0f be       	out	0x3f, r0	; 63
     d62:	0f 90       	pop	r0
     d64:	1f 90       	pop	r1
     d66:	18 95       	reti

00000d68 <init>:
}
void init(){
	ADC_Init();
     d68:	0e 94 6e 05 	call	0xadc	; 0xadc <ADC_Init>
	initClock();
     d6c:	0e 94 2e 05 	call	0xa5c	; 0xa5c <initClock>
	sensorInit();
     d70:	0e 94 6a 05 	call	0xad4	; 0xad4 <sensorInit>
	DDRA |= (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);// motor init
     d74:	8a b3       	in	r24, 0x1a	; 26
     d76:	8e 61       	ori	r24, 0x1E	; 30
     d78:	8a bb       	out	0x1a, r24	; 26
	i2c_master_init(I2C_SCL_FREQUENCY_400);
     d7a:	60 e8       	ldi	r22, 0x80	; 128
     d7c:	7a e1       	ldi	r23, 0x1A	; 26
     d7e:	86 e0       	ldi	r24, 0x06	; 6
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <i2c_master_init>
	lcd1 = lq_init(0x27, 16, 2, LCD_5x8DOTS);
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	42 e0       	ldi	r20, 0x02	; 2
     d8a:	60 e1       	ldi	r22, 0x10	; 16
     d8c:	87 e2       	ldi	r24, 0x27	; 39
     d8e:	0e 94 01 04 	call	0x802	; 0x802 <lq_init>
     d92:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <lcd1>
     d96:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <lcd1+0x1>
     d9a:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <lcd1+0x2>
     d9e:	50 93 49 01 	sts	0x0149, r21	; 0x800149 <lcd1+0x3>
     da2:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <lcd1+0x4>
     da6:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <lcd1+0x5>
     daa:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <lcd1+0x6>
	cli(); // Disable interrupts during timer setup
     dae:	f8 94       	cli
	initBuzzer();
     db0:	0e 94 4b 05 	call	0xa96	; 0xa96 <initBuzzer>
	setupAlarm();
     db4:	0e 94 56 05 	call	0xaac	; 0xaac <setupAlarm>
	TIMSK |= (1 << TOIE0);
     db8:	89 b7       	in	r24, 0x39	; 57
     dba:	81 60       	ori	r24, 0x01	; 1
     dbc:	89 bf       	out	0x39, r24	; 57
	TCNT0 = 5; // Timer start
     dbe:	85 e0       	ldi	r24, 0x05	; 5
     dc0:	82 bf       	out	0x32, r24	; 50
	TCCR0 = (1 << CS02) | (1 << CS00); // 101: Prescaler = 1024
     dc2:	83 bf       	out	0x33, r24	; 51
	//Timer Clock Frequency = System Clock Frequency / Prescaler Division Factor = 8,000,000 / 1024 ? 7812.5 Hz
	//Timer Duration = Number of Timer Counts / Timer Clock Frequency = 252 / 7812.5 ? 0.032256 seconds (32.256 ms)
	serial_init();
     dc4:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <serial_init>
	sei(); // Enable interrupts after timer setup
     dc8:	78 94       	sei
     dca:	08 95       	ret

00000dcc <setTimeFromReceivedString>:
}

void setTimeFromReceivedString(const char* str) {
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	cd b7       	in	r28, 0x3d	; 61
     dd2:	de b7       	in	r29, 0x3e	; 62
     dd4:	a3 97       	sbiw	r28, 0x23	; 35
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
	char formatString[] = "set time %d:%d:%d %d/%d/%d";
     de0:	4b e1       	ldi	r20, 0x1B	; 27
     de2:	eb ec       	ldi	r30, 0xCB	; 203
     de4:	f0 e0       	ldi	r31, 0x00	; 0
     de6:	9e 01       	movw	r18, r28
     de8:	2f 5f       	subi	r18, 0xFF	; 255
     dea:	3f 4f       	sbci	r19, 0xFF	; 255
     dec:	d9 01       	movw	r26, r18
     dee:	01 90       	ld	r0, Z+
     df0:	0d 92       	st	X+, r0
     df2:	4a 95       	dec	r20
     df4:	e1 f7       	brne	.-8      	; 0xdee <setTimeFromReceivedString+0x22>
	DateTime_t t1 ;
	sscanf(str, formatString, &t1.Hour, &t1.Minute, &t1.Second, &t1.Month, &t1.Date, &t1.Year);
     df6:	ae 01       	movw	r20, r28
     df8:	44 5e       	subi	r20, 0xE4	; 228
     dfa:	5f 4f       	sbci	r21, 0xFF	; 255
     dfc:	be 01       	movw	r22, r28
     dfe:	6e 5d       	subi	r22, 0xDE	; 222
     e00:	7f 4f       	sbci	r23, 0xFF	; 255
     e02:	7f 93       	push	r23
     e04:	6f 93       	push	r22
     e06:	62 50       	subi	r22, 0x02	; 2
     e08:	71 09       	sbc	r23, r1
     e0a:	7f 93       	push	r23
     e0c:	6f 93       	push	r22
     e0e:	6f 5f       	subi	r22, 0xFF	; 255
     e10:	7f 4f       	sbci	r23, 0xFF	; 255
     e12:	7f 93       	push	r23
     e14:	6f 93       	push	r22
     e16:	5f 93       	push	r21
     e18:	4f 93       	push	r20
     e1a:	4f 5f       	subi	r20, 0xFF	; 255
     e1c:	5f 4f       	sbci	r21, 0xFF	; 255
     e1e:	5f 93       	push	r21
     e20:	4f 93       	push	r20
     e22:	4f 5f       	subi	r20, 0xFF	; 255
     e24:	5f 4f       	sbci	r21, 0xFF	; 255
     e26:	5f 93       	push	r21
     e28:	4f 93       	push	r20
     e2a:	3f 93       	push	r19
     e2c:	2f 93       	push	r18
     e2e:	9f 93       	push	r25
     e30:	8f 93       	push	r24
     e32:	0e 94 a0 09 	call	0x1340	; 0x1340 <sscanf>
	RTC_Set(t1);
     e36:	2c 8d       	ldd	r18, Y+28	; 0x1c
     e38:	3d 8d       	ldd	r19, Y+29	; 0x1d
     e3a:	4e 8d       	ldd	r20, Y+30	; 0x1e
     e3c:	5f 8d       	ldd	r21, Y+31	; 0x1f
     e3e:	68 a1       	ldd	r22, Y+32	; 0x20
     e40:	79 a1       	ldd	r23, Y+33	; 0x21
     e42:	8a a1       	ldd	r24, Y+34	; 0x22
     e44:	9b a1       	ldd	r25, Y+35	; 0x23
     e46:	0e 94 f6 01 	call	0x3ec	; 0x3ec <RTC_Set>
}
     e4a:	0f b6       	in	r0, 0x3f	; 63
     e4c:	f8 94       	cli
     e4e:	de bf       	out	0x3e, r29	; 62
     e50:	0f be       	out	0x3f, r0	; 63
     e52:	cd bf       	out	0x3d, r28	; 61
     e54:	a3 96       	adiw	r28, 0x23	; 35
     e56:	0f b6       	in	r0, 0x3f	; 63
     e58:	f8 94       	cli
     e5a:	de bf       	out	0x3e, r29	; 62
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	08 95       	ret

00000e66 <processCommand>:
	}
}
//============================
//comand mamager

int processCommand(char* str) {
     e66:	cf 93       	push	r28
     e68:	df 93       	push	r29
     e6a:	ec 01       	movw	r28, r24
	if (strstr(str, setTimeCommand) != NULL) {
     e6c:	6c e6       	ldi	r22, 0x6C	; 108
     e6e:	70 e0       	ldi	r23, 0x00	; 0
     e70:	0e 94 64 09 	call	0x12c8	; 0x12c8 <strstr>
     e74:	89 2b       	or	r24, r25
     e76:	19 f0       	breq	.+6      	; 0xe7e <processCommand+0x18>
		setTimeFromReceivedString(str);
     e78:	ce 01       	movw	r24, r28
     e7a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <setTimeFromReceivedString>
	}
	if (strstr(str, openTrashCommand) != NULL) {
     e7e:	61 e6       	ldi	r22, 0x61	; 97
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	ce 01       	movw	r24, r28
     e84:	0e 94 64 09 	call	0x12c8	; 0x12c8 <strstr>
     e88:	89 2b       	or	r24, r25
     e8a:	49 f0       	breq	.+18     	; 0xe9e <processCommand+0x38>
		serial_send_string("open command");
     e8c:	86 ee       	ldi	r24, 0xE6	; 230
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
		isMotorWorking=true;
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <isMotorWorking>
		isTrashOpen=true;
     e9a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <isTrashOpen>

	}
	if (strstr(str, closeTrashCommand) != NULL) {
     e9e:	66 e6       	ldi	r22, 0x66	; 102
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	ce 01       	movw	r24, r28
     ea4:	0e 94 64 09 	call	0x12c8	; 0x12c8 <strstr>
     ea8:	89 2b       	or	r24, r25
     eaa:	49 f0       	breq	.+18     	; 0xebe <processCommand+0x58>
		serial_send_string("close command");
     eac:	83 ef       	ldi	r24, 0xF3	; 243
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
		isMotorWorking=true;
     eb4:	81 e0       	ldi	r24, 0x01	; 1
     eb6:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <isMotorWorking>
		isTrashOpen=false;
     eba:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <isTrashOpen>
	}
	return 0;
}
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	df 91       	pop	r29
     ec4:	cf 91       	pop	r28
     ec6:	08 95       	ret

00000ec8 <__vector_13>:
void updateLcd();
void setTimeFromReceivedString(const char* str);
//============================
//intrupts
#if SERIAL_INTERRUPT == 1
ISR(USART_RXC_vect) {
     ec8:	1f 92       	push	r1
     eca:	0f 92       	push	r0
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	0f 92       	push	r0
     ed0:	11 24       	eor	r1, r1
     ed2:	2f 93       	push	r18
     ed4:	3f 93       	push	r19
     ed6:	4f 93       	push	r20
     ed8:	5f 93       	push	r21
     eda:	6f 93       	push	r22
     edc:	7f 93       	push	r23
     ede:	8f 93       	push	r24
     ee0:	9f 93       	push	r25
     ee2:	af 93       	push	r26
     ee4:	bf 93       	push	r27
     ee6:	ef 93       	push	r30
     ee8:	ff 93       	push	r31
	char c = UDR;
     eea:	8c b1       	in	r24, 0x0c	; 12
	UDR = c;	// Save the received character
     eec:	8c b9       	out	0x0c, r24	; 12
	receivedString[counter] = c;
     eee:	e0 91 2d 01 	lds	r30, 0x012D	; 0x80012d <counter>
     ef2:	ae 2f       	mov	r26, r30
     ef4:	b0 e0       	ldi	r27, 0x00	; 0
     ef6:	a3 5b       	subi	r26, 0xB3	; 179
     ef8:	be 4f       	sbci	r27, 0xFE	; 254
     efa:	8c 93       	st	X, r24
	counter++;
     efc:	ef 5f       	subi	r30, 0xFF	; 255
     efe:	e0 93 2d 01 	sts	0x012D, r30	; 0x80012d <counter>
	if (c == '\r') { // If user has pressed ENTER (in Proteus)
     f02:	8d 30       	cpi	r24, 0x0D	; 13
     f04:	a9 f4       	brne	.+42     	; 0xf30 <__vector_13+0x68>
		receivedString[counter] = '\0'; // Null-terminate the string
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	e3 5b       	subi	r30, 0xB3	; 179
     f0a:	fe 4f       	sbci	r31, 0xFE	; 254
     f0c:	10 82       	st	Z, r1
		serial_send_string(receivedString);
     f0e:	8d e4       	ldi	r24, 0x4D	; 77
     f10:	91 e0       	ldi	r25, 0x01	; 1
     f12:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
		processCommand(receivedString);
     f16:	8d e4       	ldi	r24, 0x4D	; 77
     f18:	91 e0       	ldi	r25, 0x01	; 1
     f1a:	0e 94 33 07 	call	0xe66	; 0xe66 <processCommand>
		// Reset the counter and clear the received string for the next input
		counter = 0;
     f1e:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <counter>
		memset(receivedString, 0, sizeof(receivedString));
     f22:	88 ec       	ldi	r24, 0xC8	; 200
     f24:	ed e4       	ldi	r30, 0x4D	; 77
     f26:	f1 e0       	ldi	r31, 0x01	; 1
     f28:	df 01       	movw	r26, r30
     f2a:	1d 92       	st	X+, r1
     f2c:	8a 95       	dec	r24
     f2e:	e9 f7       	brne	.-6      	; 0xf2a <__vector_13+0x62>
	}
}
     f30:	ff 91       	pop	r31
     f32:	ef 91       	pop	r30
     f34:	bf 91       	pop	r27
     f36:	af 91       	pop	r26
     f38:	9f 91       	pop	r25
     f3a:	8f 91       	pop	r24
     f3c:	7f 91       	pop	r23
     f3e:	6f 91       	pop	r22
     f40:	5f 91       	pop	r21
     f42:	4f 91       	pop	r20
     f44:	3f 91       	pop	r19
     f46:	2f 91       	pop	r18
     f48:	0f 90       	pop	r0
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	0f 90       	pop	r0
     f4e:	1f 90       	pop	r1
     f50:	18 95       	reti

00000f52 <main>:
	RTC_Set(t1);
}

int main(void) {

	init();
     f52:	0e 94 b4 06 	call	0xd68	; 0xd68 <init>
	serial_send_string(" Enter command: "); // Look at how \r works
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	91 e0       	ldi	r25, 0x01	; 1
     f5a:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
	while (1) {
		//motor process
		if (isMotorWorking) {
     f5e:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <isMotorWorking>
     f62:	88 23       	and	r24, r24
     f64:	f1 f0       	breq	.+60     	; 0xfa2 <main+0x50>
			serial_send_string(" motor working...\r");
     f66:	82 e1       	ldi	r24, 0x12	; 18
     f68:	91 e0       	ldi	r25, 0x01	; 1
     f6a:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <serial_send_string>
			if (isTrashOpen && !isTrashCompleteOpen) {
     f6e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <isTrashOpen>
     f72:	88 23       	and	r24, r24
     f74:	39 f0       	breq	.+14     	; 0xf84 <main+0x32>
     f76:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <isTrashCompleteOpen>
     f7a:	91 11       	cpse	r25, r1
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <main+0x32>
				openTrash();
     f7e:	0e 94 c4 04 	call	0x988	; 0x988 <openTrash>
     f82:	0f c0       	rjmp	.+30     	; 0xfa2 <main+0x50>
				} else if (!isTrashOpen && isInAutomaticMode &&!isTrashCompleteClose) {
     f84:	81 11       	cpse	r24, r1
     f86:	0b c0       	rjmp	.+22     	; 0xf9e <main+0x4c>
     f88:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <isInAutomaticMode>
     f8c:	88 23       	and	r24, r24
     f8e:	39 f0       	breq	.+14     	; 0xf9e <main+0x4c>
     f90:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <isTrashCompleteClose>
     f94:	81 11       	cpse	r24, r1
     f96:	03 c0       	rjmp	.+6      	; 0xf9e <main+0x4c>
				closeTrash();
     f98:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <closeTrash>
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <main+0x50>
			}
			else{
				isMotorWorking=false;
     f9e:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <isMotorWorking>
			}
		}

		if (measurementFlag) {
     fa2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <measurementFlag>
     fa6:	81 11       	cpse	r24, r1
//			serial_send_string(" enter sensor\r");
			measurementFlag = false;
     fa8:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <measurementFlag>
// 				} else {
// 				serial_send_string(" object not found\r");
// 				isObjectDetected = false;
// 			}
		}
		if(isUpdateTemp){
     fac:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <isUpdateTemp>
     fb0:	88 23       	and	r24, r24
     fb2:	21 f0       	breq	.+8      	; 0xfbc <main+0x6a>
			calculateTemp();
     fb4:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <calculateTemp>
			isUpdateTemp=false;
     fb8:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <isUpdateTemp>
		}
		checkAlarm();
     fbc:	0e 94 68 05 	call	0xad0	; 0xad0 <checkAlarm>
	}
     fc0:	ce cf       	rjmp	.-100    	; 0xf5e <main+0xc>

00000fc2 <serial_init>:

#include "Serial_lib.h"

void serial_init()
{
	UCSRB = (1 << RXEN) | (1 << TXEN);
     fc2:	88 e1       	ldi	r24, 0x18	; 24
     fc4:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);
     fc6:	80 b5       	in	r24, 0x20	; 32
     fc8:	86 68       	ori	r24, 0x86	; 134
     fca:	80 bd       	out	0x20, r24	; 32
	UBRRL = (int)((F_CPU / (SERIAL_BAUD_RATE * 16)) - 1);
     fcc:	83 e3       	ldi	r24, 0x33	; 51
     fce:	89 b9       	out	0x09, r24	; 9
	
#if SERIAL_INTERRUPT == 1
	UCSRB |= (1<<RXCIE);
     fd0:	8a b1       	in	r24, 0x0a	; 10
     fd2:	80 68       	ori	r24, 0x80	; 128
     fd4:	8a b9       	out	0x0a, r24	; 10
     fd6:	08 95       	ret

00000fd8 <serial_send_char>:
#endif
}

void serial_send_char(char c)
{
	UCSRA = 1 << TXC; // clear TXC bit
     fd8:	90 e4       	ldi	r25, 0x40	; 64
     fda:	9b b9       	out	0x0b, r25	; 11
	UDR = c;
     fdc:	8c b9       	out	0x0c, r24	; 12
	while ((UCSRA & (1 << TXC)) == 0);
     fde:	5e 9b       	sbis	0x0b, 6	; 11
     fe0:	fe cf       	rjmp	.-4      	; 0xfde <serial_send_char+0x6>
}
     fe2:	08 95       	ret

00000fe4 <serial_send_string>:

void serial_send_string(char *s)
{
     fe4:	cf 93       	push	r28
     fe6:	df 93       	push	r29
     fe8:	ec 01       	movw	r28, r24
	while (*s != '\0')
     fea:	03 c0       	rjmp	.+6      	; 0xff2 <serial_send_string+0xe>
	{
		serial_send_char(*s);
     fec:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <serial_send_char>
		s++;
     ff0:	21 96       	adiw	r28, 0x01	; 1
	while ((UCSRA & (1 << TXC)) == 0);
}

void serial_send_string(char *s)
{
	while (*s != '\0')
     ff2:	88 81       	ld	r24, Y
     ff4:	81 11       	cpse	r24, r1
     ff6:	fa cf       	rjmp	.-12     	; 0xfec <serial_send_string+0x8>
	{
		serial_send_char(*s);
		s++;
	}
}
     ff8:	df 91       	pop	r29
     ffa:	cf 91       	pop	r28
     ffc:	08 95       	ret

00000ffe <TWI_Status>:
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
     ffe:	81 b1       	in	r24, 0x01	; 1
}
    1000:	88 7f       	andi	r24, 0xF8	; 248
    1002:	08 95       	ret

00001004 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    1004:	84 ea       	ldi	r24, 0xA4	; 164
    1006:	86 bf       	out	0x36, r24	; 54

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
    1008:	06 b6       	in	r0, 0x36	; 54
    100a:	07 fe       	sbrs	r0, 7
    100c:	fd cf       	rjmp	.-6      	; 0x1008 <TWI_BeginTransmission+0x4>

	//Return status register
	return (TWI_Status());
    100e:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
}
    1012:	08 95       	ret

00001014 <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
    1014:	85 ed       	ldi	r24, 0xD5	; 213
    1016:	86 bf       	out	0x36, r24	; 54

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
    1018:	06 b6       	in	r0, 0x36	; 54
    101a:	04 fc       	sbrc	r0, 4
    101c:	fd cf       	rjmp	.-6      	; 0x1018 <TWI_EndTransmission+0x4>
}
    101e:	08 95       	ret

00001020 <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
    1020:	83 b9       	out	0x03, r24	; 3

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
    1022:	84 e8       	ldi	r24, 0x84	; 132
    1024:	86 bf       	out	0x36, r24	; 54

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
    1026:	06 b6       	in	r0, 0x36	; 54
    1028:	07 fe       	sbrs	r0, 7
    102a:	fd cf       	rjmp	.-6      	; 0x1026 <TWI_Transmit+0x6>

	//Return status register
	return (TWI_Status());
    102c:	0e 94 ff 07 	call	0xffe	; 0xffe <TWI_Status>
}
    1030:	08 95       	ret

00001032 <TWI_ReceiveACK>:

//Wait until ACK received. 
uint8_t TWI_ReceiveACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
    1032:	84 ec       	ldi	r24, 0xC4	; 196
    1034:	86 bf       	out	0x36, r24	; 54
	
	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1036:	06 b6       	in	r0, 0x36	; 54
    1038:	07 fe       	sbrs	r0, 7
    103a:	fd cf       	rjmp	.-6      	; 0x1036 <TWI_ReceiveACK+0x4>

	//Return received data
	return TWDR;
    103c:	83 b1       	in	r24, 0x03	; 3
}
    103e:	08 95       	ret

00001040 <TWI_ReceiveNACK>:

//Wait until NACK received. 
uint8_t TWI_ReceiveNACK(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    1040:	84 e8       	ldi	r24, 0x84	; 132
    1042:	86 bf       	out	0x36, r24	; 54

	//Wait till reception is
	while (!BitCheck(TWCR, TWINT));
    1044:	06 b6       	in	r0, 0x36	; 54
    1046:	07 fe       	sbrs	r0, 7
    1048:	fd cf       	rjmp	.-6      	; 0x1044 <TWI_ReceiveNACK+0x4>

	//Return received data
	return TWDR;
    104a:	83 b1       	in	r24, 0x03	; 3
}
    104c:	08 95       	ret

0000104e <__floatunsisf>:
    104e:	e8 94       	clt
    1050:	09 c0       	rjmp	.+18     	; 0x1064 <__floatsisf+0x12>

00001052 <__floatsisf>:
    1052:	97 fb       	bst	r25, 7
    1054:	3e f4       	brtc	.+14     	; 0x1064 <__floatsisf+0x12>
    1056:	90 95       	com	r25
    1058:	80 95       	com	r24
    105a:	70 95       	com	r23
    105c:	61 95       	neg	r22
    105e:	7f 4f       	sbci	r23, 0xFF	; 255
    1060:	8f 4f       	sbci	r24, 0xFF	; 255
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	99 23       	and	r25, r25
    1066:	a9 f0       	breq	.+42     	; 0x1092 <__floatsisf+0x40>
    1068:	f9 2f       	mov	r31, r25
    106a:	96 e9       	ldi	r25, 0x96	; 150
    106c:	bb 27       	eor	r27, r27
    106e:	93 95       	inc	r25
    1070:	f6 95       	lsr	r31
    1072:	87 95       	ror	r24
    1074:	77 95       	ror	r23
    1076:	67 95       	ror	r22
    1078:	b7 95       	ror	r27
    107a:	f1 11       	cpse	r31, r1
    107c:	f8 cf       	rjmp	.-16     	; 0x106e <__floatsisf+0x1c>
    107e:	fa f4       	brpl	.+62     	; 0x10be <__floatsisf+0x6c>
    1080:	bb 0f       	add	r27, r27
    1082:	11 f4       	brne	.+4      	; 0x1088 <__floatsisf+0x36>
    1084:	60 ff       	sbrs	r22, 0
    1086:	1b c0       	rjmp	.+54     	; 0x10be <__floatsisf+0x6c>
    1088:	6f 5f       	subi	r22, 0xFF	; 255
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	16 c0       	rjmp	.+44     	; 0x10be <__floatsisf+0x6c>
    1092:	88 23       	and	r24, r24
    1094:	11 f0       	breq	.+4      	; 0x109a <__floatsisf+0x48>
    1096:	96 e9       	ldi	r25, 0x96	; 150
    1098:	11 c0       	rjmp	.+34     	; 0x10bc <__floatsisf+0x6a>
    109a:	77 23       	and	r23, r23
    109c:	21 f0       	breq	.+8      	; 0x10a6 <__floatsisf+0x54>
    109e:	9e e8       	ldi	r25, 0x8E	; 142
    10a0:	87 2f       	mov	r24, r23
    10a2:	76 2f       	mov	r23, r22
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <__floatsisf+0x5e>
    10a6:	66 23       	and	r22, r22
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <__floatsisf+0x74>
    10aa:	96 e8       	ldi	r25, 0x86	; 134
    10ac:	86 2f       	mov	r24, r22
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	60 e0       	ldi	r22, 0x00	; 0
    10b2:	2a f0       	brmi	.+10     	; 0x10be <__floatsisf+0x6c>
    10b4:	9a 95       	dec	r25
    10b6:	66 0f       	add	r22, r22
    10b8:	77 1f       	adc	r23, r23
    10ba:	88 1f       	adc	r24, r24
    10bc:	da f7       	brpl	.-10     	; 0x10b4 <__floatsisf+0x62>
    10be:	88 0f       	add	r24, r24
    10c0:	96 95       	lsr	r25
    10c2:	87 95       	ror	r24
    10c4:	97 f9       	bld	r25, 7
    10c6:	08 95       	ret

000010c8 <__mulsf3>:
    10c8:	0e 94 77 08 	call	0x10ee	; 0x10ee <__mulsf3x>
    10cc:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__fp_round>
    10d0:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__fp_pscA>
    10d4:	38 f0       	brcs	.+14     	; 0x10e4 <__mulsf3+0x1c>
    10d6:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__fp_pscB>
    10da:	20 f0       	brcs	.+8      	; 0x10e4 <__mulsf3+0x1c>
    10dc:	95 23       	and	r25, r21
    10de:	11 f0       	breq	.+4      	; 0x10e4 <__mulsf3+0x1c>
    10e0:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_inf>
    10e4:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_nan>
    10e8:	11 24       	eor	r1, r1
    10ea:	0c 94 1c 09 	jmp	0x1238	; 0x1238 <__fp_szero>

000010ee <__mulsf3x>:
    10ee:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__fp_split3>
    10f2:	70 f3       	brcs	.-36     	; 0x10d0 <__mulsf3+0x8>

000010f4 <__mulsf3_pse>:
    10f4:	95 9f       	mul	r25, r21
    10f6:	c1 f3       	breq	.-16     	; 0x10e8 <__mulsf3+0x20>
    10f8:	95 0f       	add	r25, r21
    10fa:	50 e0       	ldi	r21, 0x00	; 0
    10fc:	55 1f       	adc	r21, r21
    10fe:	62 9f       	mul	r22, r18
    1100:	f0 01       	movw	r30, r0
    1102:	72 9f       	mul	r23, r18
    1104:	bb 27       	eor	r27, r27
    1106:	f0 0d       	add	r31, r0
    1108:	b1 1d       	adc	r27, r1
    110a:	63 9f       	mul	r22, r19
    110c:	aa 27       	eor	r26, r26
    110e:	f0 0d       	add	r31, r0
    1110:	b1 1d       	adc	r27, r1
    1112:	aa 1f       	adc	r26, r26
    1114:	64 9f       	mul	r22, r20
    1116:	66 27       	eor	r22, r22
    1118:	b0 0d       	add	r27, r0
    111a:	a1 1d       	adc	r26, r1
    111c:	66 1f       	adc	r22, r22
    111e:	82 9f       	mul	r24, r18
    1120:	22 27       	eor	r18, r18
    1122:	b0 0d       	add	r27, r0
    1124:	a1 1d       	adc	r26, r1
    1126:	62 1f       	adc	r22, r18
    1128:	73 9f       	mul	r23, r19
    112a:	b0 0d       	add	r27, r0
    112c:	a1 1d       	adc	r26, r1
    112e:	62 1f       	adc	r22, r18
    1130:	83 9f       	mul	r24, r19
    1132:	a0 0d       	add	r26, r0
    1134:	61 1d       	adc	r22, r1
    1136:	22 1f       	adc	r18, r18
    1138:	74 9f       	mul	r23, r20
    113a:	33 27       	eor	r19, r19
    113c:	a0 0d       	add	r26, r0
    113e:	61 1d       	adc	r22, r1
    1140:	23 1f       	adc	r18, r19
    1142:	84 9f       	mul	r24, r20
    1144:	60 0d       	add	r22, r0
    1146:	21 1d       	adc	r18, r1
    1148:	82 2f       	mov	r24, r18
    114a:	76 2f       	mov	r23, r22
    114c:	6a 2f       	mov	r22, r26
    114e:	11 24       	eor	r1, r1
    1150:	9f 57       	subi	r25, 0x7F	; 127
    1152:	50 40       	sbci	r21, 0x00	; 0
    1154:	9a f0       	brmi	.+38     	; 0x117c <__mulsf3_pse+0x88>
    1156:	f1 f0       	breq	.+60     	; 0x1194 <__mulsf3_pse+0xa0>
    1158:	88 23       	and	r24, r24
    115a:	4a f0       	brmi	.+18     	; 0x116e <__mulsf3_pse+0x7a>
    115c:	ee 0f       	add	r30, r30
    115e:	ff 1f       	adc	r31, r31
    1160:	bb 1f       	adc	r27, r27
    1162:	66 1f       	adc	r22, r22
    1164:	77 1f       	adc	r23, r23
    1166:	88 1f       	adc	r24, r24
    1168:	91 50       	subi	r25, 0x01	; 1
    116a:	50 40       	sbci	r21, 0x00	; 0
    116c:	a9 f7       	brne	.-22     	; 0x1158 <__mulsf3_pse+0x64>
    116e:	9e 3f       	cpi	r25, 0xFE	; 254
    1170:	51 05       	cpc	r21, r1
    1172:	80 f0       	brcs	.+32     	; 0x1194 <__mulsf3_pse+0xa0>
    1174:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_inf>
    1178:	0c 94 1c 09 	jmp	0x1238	; 0x1238 <__fp_szero>
    117c:	5f 3f       	cpi	r21, 0xFF	; 255
    117e:	e4 f3       	brlt	.-8      	; 0x1178 <__mulsf3_pse+0x84>
    1180:	98 3e       	cpi	r25, 0xE8	; 232
    1182:	d4 f3       	brlt	.-12     	; 0x1178 <__mulsf3_pse+0x84>
    1184:	86 95       	lsr	r24
    1186:	77 95       	ror	r23
    1188:	67 95       	ror	r22
    118a:	b7 95       	ror	r27
    118c:	f7 95       	ror	r31
    118e:	e7 95       	ror	r30
    1190:	9f 5f       	subi	r25, 0xFF	; 255
    1192:	c1 f7       	brne	.-16     	; 0x1184 <__mulsf3_pse+0x90>
    1194:	fe 2b       	or	r31, r30
    1196:	88 0f       	add	r24, r24
    1198:	91 1d       	adc	r25, r1
    119a:	96 95       	lsr	r25
    119c:	87 95       	ror	r24
    119e:	97 f9       	bld	r25, 7
    11a0:	08 95       	ret

000011a2 <__fp_inf>:
    11a2:	97 f9       	bld	r25, 7
    11a4:	9f 67       	ori	r25, 0x7F	; 127
    11a6:	80 e8       	ldi	r24, 0x80	; 128
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	60 e0       	ldi	r22, 0x00	; 0
    11ac:	08 95       	ret

000011ae <__fp_nan>:
    11ae:	9f ef       	ldi	r25, 0xFF	; 255
    11b0:	80 ec       	ldi	r24, 0xC0	; 192
    11b2:	08 95       	ret

000011b4 <__fp_pscA>:
    11b4:	00 24       	eor	r0, r0
    11b6:	0a 94       	dec	r0
    11b8:	16 16       	cp	r1, r22
    11ba:	17 06       	cpc	r1, r23
    11bc:	18 06       	cpc	r1, r24
    11be:	09 06       	cpc	r0, r25
    11c0:	08 95       	ret

000011c2 <__fp_pscB>:
    11c2:	00 24       	eor	r0, r0
    11c4:	0a 94       	dec	r0
    11c6:	12 16       	cp	r1, r18
    11c8:	13 06       	cpc	r1, r19
    11ca:	14 06       	cpc	r1, r20
    11cc:	05 06       	cpc	r0, r21
    11ce:	08 95       	ret

000011d0 <__fp_round>:
    11d0:	09 2e       	mov	r0, r25
    11d2:	03 94       	inc	r0
    11d4:	00 0c       	add	r0, r0
    11d6:	11 f4       	brne	.+4      	; 0x11dc <__fp_round+0xc>
    11d8:	88 23       	and	r24, r24
    11da:	52 f0       	brmi	.+20     	; 0x11f0 <__fp_round+0x20>
    11dc:	bb 0f       	add	r27, r27
    11de:	40 f4       	brcc	.+16     	; 0x11f0 <__fp_round+0x20>
    11e0:	bf 2b       	or	r27, r31
    11e2:	11 f4       	brne	.+4      	; 0x11e8 <__fp_round+0x18>
    11e4:	60 ff       	sbrs	r22, 0
    11e6:	04 c0       	rjmp	.+8      	; 0x11f0 <__fp_round+0x20>
    11e8:	6f 5f       	subi	r22, 0xFF	; 255
    11ea:	7f 4f       	sbci	r23, 0xFF	; 255
    11ec:	8f 4f       	sbci	r24, 0xFF	; 255
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	08 95       	ret

000011f2 <__fp_split3>:
    11f2:	57 fd       	sbrc	r21, 7
    11f4:	90 58       	subi	r25, 0x80	; 128
    11f6:	44 0f       	add	r20, r20
    11f8:	55 1f       	adc	r21, r21
    11fa:	59 f0       	breq	.+22     	; 0x1212 <__fp_splitA+0x10>
    11fc:	5f 3f       	cpi	r21, 0xFF	; 255
    11fe:	71 f0       	breq	.+28     	; 0x121c <__fp_splitA+0x1a>
    1200:	47 95       	ror	r20

00001202 <__fp_splitA>:
    1202:	88 0f       	add	r24, r24
    1204:	97 fb       	bst	r25, 7
    1206:	99 1f       	adc	r25, r25
    1208:	61 f0       	breq	.+24     	; 0x1222 <__fp_splitA+0x20>
    120a:	9f 3f       	cpi	r25, 0xFF	; 255
    120c:	79 f0       	breq	.+30     	; 0x122c <__fp_splitA+0x2a>
    120e:	87 95       	ror	r24
    1210:	08 95       	ret
    1212:	12 16       	cp	r1, r18
    1214:	13 06       	cpc	r1, r19
    1216:	14 06       	cpc	r1, r20
    1218:	55 1f       	adc	r21, r21
    121a:	f2 cf       	rjmp	.-28     	; 0x1200 <__fp_split3+0xe>
    121c:	46 95       	lsr	r20
    121e:	f1 df       	rcall	.-30     	; 0x1202 <__fp_splitA>
    1220:	08 c0       	rjmp	.+16     	; 0x1232 <__fp_splitA+0x30>
    1222:	16 16       	cp	r1, r22
    1224:	17 06       	cpc	r1, r23
    1226:	18 06       	cpc	r1, r24
    1228:	99 1f       	adc	r25, r25
    122a:	f1 cf       	rjmp	.-30     	; 0x120e <__fp_splitA+0xc>
    122c:	86 95       	lsr	r24
    122e:	71 05       	cpc	r23, r1
    1230:	61 05       	cpc	r22, r1
    1232:	08 94       	sec
    1234:	08 95       	ret

00001236 <__fp_zero>:
    1236:	e8 94       	clt

00001238 <__fp_szero>:
    1238:	bb 27       	eor	r27, r27
    123a:	66 27       	eor	r22, r22
    123c:	77 27       	eor	r23, r23
    123e:	cb 01       	movw	r24, r22
    1240:	97 f9       	bld	r25, 7
    1242:	08 95       	ret

00001244 <__udivmodsi4>:
    1244:	a1 e2       	ldi	r26, 0x21	; 33
    1246:	1a 2e       	mov	r1, r26
    1248:	aa 1b       	sub	r26, r26
    124a:	bb 1b       	sub	r27, r27
    124c:	fd 01       	movw	r30, r26
    124e:	0d c0       	rjmp	.+26     	; 0x126a <__udivmodsi4_ep>

00001250 <__udivmodsi4_loop>:
    1250:	aa 1f       	adc	r26, r26
    1252:	bb 1f       	adc	r27, r27
    1254:	ee 1f       	adc	r30, r30
    1256:	ff 1f       	adc	r31, r31
    1258:	a2 17       	cp	r26, r18
    125a:	b3 07       	cpc	r27, r19
    125c:	e4 07       	cpc	r30, r20
    125e:	f5 07       	cpc	r31, r21
    1260:	20 f0       	brcs	.+8      	; 0x126a <__udivmodsi4_ep>
    1262:	a2 1b       	sub	r26, r18
    1264:	b3 0b       	sbc	r27, r19
    1266:	e4 0b       	sbc	r30, r20
    1268:	f5 0b       	sbc	r31, r21

0000126a <__udivmodsi4_ep>:
    126a:	66 1f       	adc	r22, r22
    126c:	77 1f       	adc	r23, r23
    126e:	88 1f       	adc	r24, r24
    1270:	99 1f       	adc	r25, r25
    1272:	1a 94       	dec	r1
    1274:	69 f7       	brne	.-38     	; 0x1250 <__udivmodsi4_loop>
    1276:	60 95       	com	r22
    1278:	70 95       	com	r23
    127a:	80 95       	com	r24
    127c:	90 95       	com	r25
    127e:	9b 01       	movw	r18, r22
    1280:	ac 01       	movw	r20, r24
    1282:	bd 01       	movw	r22, r26
    1284:	cf 01       	movw	r24, r30
    1286:	08 95       	ret

00001288 <dtostrf>:
    1288:	ef 92       	push	r14
    128a:	0f 93       	push	r16
    128c:	1f 93       	push	r17
    128e:	cf 93       	push	r28
    1290:	df 93       	push	r29
    1292:	e8 01       	movw	r28, r16
    1294:	47 fd       	sbrc	r20, 7
    1296:	02 c0       	rjmp	.+4      	; 0x129c <dtostrf+0x14>
    1298:	34 e0       	ldi	r19, 0x04	; 4
    129a:	01 c0       	rjmp	.+2      	; 0x129e <dtostrf+0x16>
    129c:	34 e1       	ldi	r19, 0x14	; 20
    129e:	04 2e       	mov	r0, r20
    12a0:	00 0c       	add	r0, r0
    12a2:	55 0b       	sbc	r21, r21
    12a4:	57 ff       	sbrs	r21, 7
    12a6:	03 c0       	rjmp	.+6      	; 0x12ae <dtostrf+0x26>
    12a8:	51 95       	neg	r21
    12aa:	41 95       	neg	r20
    12ac:	51 09       	sbc	r21, r1
    12ae:	e3 2e       	mov	r14, r19
    12b0:	02 2f       	mov	r16, r18
    12b2:	24 2f       	mov	r18, r20
    12b4:	ae 01       	movw	r20, r28
    12b6:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <dtoa_prf>
    12ba:	ce 01       	movw	r24, r28
    12bc:	df 91       	pop	r29
    12be:	cf 91       	pop	r28
    12c0:	1f 91       	pop	r17
    12c2:	0f 91       	pop	r16
    12c4:	ef 90       	pop	r14
    12c6:	08 95       	ret

000012c8 <strstr>:
    12c8:	fb 01       	movw	r30, r22
    12ca:	51 91       	ld	r21, Z+
    12cc:	55 23       	and	r21, r21
    12ce:	a9 f0       	breq	.+42     	; 0x12fa <strstr+0x32>
    12d0:	bf 01       	movw	r22, r30
    12d2:	dc 01       	movw	r26, r24
    12d4:	4d 91       	ld	r20, X+
    12d6:	45 17       	cp	r20, r21
    12d8:	41 11       	cpse	r20, r1
    12da:	e1 f7       	brne	.-8      	; 0x12d4 <strstr+0xc>
    12dc:	59 f4       	brne	.+22     	; 0x12f4 <strstr+0x2c>
    12de:	cd 01       	movw	r24, r26
    12e0:	01 90       	ld	r0, Z+
    12e2:	00 20       	and	r0, r0
    12e4:	49 f0       	breq	.+18     	; 0x12f8 <strstr+0x30>
    12e6:	4d 91       	ld	r20, X+
    12e8:	40 15       	cp	r20, r0
    12ea:	41 11       	cpse	r20, r1
    12ec:	c9 f3       	breq	.-14     	; 0x12e0 <strstr+0x18>
    12ee:	fb 01       	movw	r30, r22
    12f0:	41 11       	cpse	r20, r1
    12f2:	ef cf       	rjmp	.-34     	; 0x12d2 <strstr+0xa>
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	08 95       	ret

000012fc <sprintf>:
    12fc:	ae e0       	ldi	r26, 0x0E	; 14
    12fe:	b0 e0       	ldi	r27, 0x00	; 0
    1300:	e4 e8       	ldi	r30, 0x84	; 132
    1302:	f9 e0       	ldi	r31, 0x09	; 9
    1304:	0c 94 a5 11 	jmp	0x234a	; 0x234a <__prologue_saves__+0x1c>
    1308:	0d 89       	ldd	r16, Y+21	; 0x15
    130a:	1e 89       	ldd	r17, Y+22	; 0x16
    130c:	86 e0       	ldi	r24, 0x06	; 6
    130e:	8c 83       	std	Y+4, r24	; 0x04
    1310:	1a 83       	std	Y+2, r17	; 0x02
    1312:	09 83       	std	Y+1, r16	; 0x01
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	9f e7       	ldi	r25, 0x7F	; 127
    1318:	9e 83       	std	Y+6, r25	; 0x06
    131a:	8d 83       	std	Y+5, r24	; 0x05
    131c:	ae 01       	movw	r20, r28
    131e:	47 5e       	subi	r20, 0xE7	; 231
    1320:	5f 4f       	sbci	r21, 0xFF	; 255
    1322:	6f 89       	ldd	r22, Y+23	; 0x17
    1324:	78 8d       	ldd	r23, Y+24	; 0x18
    1326:	ce 01       	movw	r24, r28
    1328:	01 96       	adiw	r24, 0x01	; 1
    132a:	0e 94 b9 09 	call	0x1372	; 0x1372 <vfprintf>
    132e:	ef 81       	ldd	r30, Y+7	; 0x07
    1330:	f8 85       	ldd	r31, Y+8	; 0x08
    1332:	e0 0f       	add	r30, r16
    1334:	f1 1f       	adc	r31, r17
    1336:	10 82       	st	Z, r1
    1338:	2e 96       	adiw	r28, 0x0e	; 14
    133a:	e4 e0       	ldi	r30, 0x04	; 4
    133c:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__epilogue_restores__+0x1c>

00001340 <sscanf>:
    1340:	ae e0       	ldi	r26, 0x0E	; 14
    1342:	b0 e0       	ldi	r27, 0x00	; 0
    1344:	e6 ea       	ldi	r30, 0xA6	; 166
    1346:	f9 e0       	ldi	r31, 0x09	; 9
    1348:	0c 94 a7 11 	jmp	0x234e	; 0x234e <__prologue_saves__+0x20>
    134c:	85 e0       	ldi	r24, 0x05	; 5
    134e:	8c 83       	std	Y+4, r24	; 0x04
    1350:	8b 89       	ldd	r24, Y+19	; 0x13
    1352:	9c 89       	ldd	r25, Y+20	; 0x14
    1354:	9a 83       	std	Y+2, r25	; 0x02
    1356:	89 83       	std	Y+1, r24	; 0x01
    1358:	ae 01       	movw	r20, r28
    135a:	49 5e       	subi	r20, 0xE9	; 233
    135c:	5f 4f       	sbci	r21, 0xFF	; 255
    135e:	6d 89       	ldd	r22, Y+21	; 0x15
    1360:	7e 89       	ldd	r23, Y+22	; 0x16
    1362:	ce 01       	movw	r24, r28
    1364:	01 96       	adiw	r24, 0x01	; 1
    1366:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <vfscanf>
    136a:	2e 96       	adiw	r28, 0x0e	; 14
    136c:	e2 e0       	ldi	r30, 0x02	; 2
    136e:	0c 94 c3 11 	jmp	0x2386	; 0x2386 <__epilogue_restores__+0x20>

00001372 <vfprintf>:
    1372:	ab e0       	ldi	r26, 0x0B	; 11
    1374:	b0 e0       	ldi	r27, 0x00	; 0
    1376:	ef eb       	ldi	r30, 0xBF	; 191
    1378:	f9 e0       	ldi	r31, 0x09	; 9
    137a:	0c 94 97 11 	jmp	0x232e	; 0x232e <__prologue_saves__>
    137e:	6c 01       	movw	r12, r24
    1380:	7b 01       	movw	r14, r22
    1382:	8a 01       	movw	r16, r20
    1384:	fc 01       	movw	r30, r24
    1386:	17 82       	std	Z+7, r1	; 0x07
    1388:	16 82       	std	Z+6, r1	; 0x06
    138a:	83 81       	ldd	r24, Z+3	; 0x03
    138c:	81 ff       	sbrs	r24, 1
    138e:	cc c1       	rjmp	.+920    	; 0x1728 <vfprintf+0x3b6>
    1390:	ce 01       	movw	r24, r28
    1392:	01 96       	adiw	r24, 0x01	; 1
    1394:	3c 01       	movw	r6, r24
    1396:	f6 01       	movw	r30, r12
    1398:	93 81       	ldd	r25, Z+3	; 0x03
    139a:	f7 01       	movw	r30, r14
    139c:	93 fd       	sbrc	r25, 3
    139e:	85 91       	lpm	r24, Z+
    13a0:	93 ff       	sbrs	r25, 3
    13a2:	81 91       	ld	r24, Z+
    13a4:	7f 01       	movw	r14, r30
    13a6:	88 23       	and	r24, r24
    13a8:	09 f4       	brne	.+2      	; 0x13ac <vfprintf+0x3a>
    13aa:	ba c1       	rjmp	.+884    	; 0x1720 <vfprintf+0x3ae>
    13ac:	85 32       	cpi	r24, 0x25	; 37
    13ae:	39 f4       	brne	.+14     	; 0x13be <vfprintf+0x4c>
    13b0:	93 fd       	sbrc	r25, 3
    13b2:	85 91       	lpm	r24, Z+
    13b4:	93 ff       	sbrs	r25, 3
    13b6:	81 91       	ld	r24, Z+
    13b8:	7f 01       	movw	r14, r30
    13ba:	85 32       	cpi	r24, 0x25	; 37
    13bc:	29 f4       	brne	.+10     	; 0x13c8 <vfprintf+0x56>
    13be:	b6 01       	movw	r22, r12
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    13c6:	e7 cf       	rjmp	.-50     	; 0x1396 <vfprintf+0x24>
    13c8:	91 2c       	mov	r9, r1
    13ca:	21 2c       	mov	r2, r1
    13cc:	31 2c       	mov	r3, r1
    13ce:	ff e1       	ldi	r31, 0x1F	; 31
    13d0:	f3 15       	cp	r31, r3
    13d2:	d8 f0       	brcs	.+54     	; 0x140a <vfprintf+0x98>
    13d4:	8b 32       	cpi	r24, 0x2B	; 43
    13d6:	79 f0       	breq	.+30     	; 0x13f6 <vfprintf+0x84>
    13d8:	38 f4       	brcc	.+14     	; 0x13e8 <vfprintf+0x76>
    13da:	80 32       	cpi	r24, 0x20	; 32
    13dc:	79 f0       	breq	.+30     	; 0x13fc <vfprintf+0x8a>
    13de:	83 32       	cpi	r24, 0x23	; 35
    13e0:	a1 f4       	brne	.+40     	; 0x140a <vfprintf+0x98>
    13e2:	23 2d       	mov	r18, r3
    13e4:	20 61       	ori	r18, 0x10	; 16
    13e6:	1d c0       	rjmp	.+58     	; 0x1422 <vfprintf+0xb0>
    13e8:	8d 32       	cpi	r24, 0x2D	; 45
    13ea:	61 f0       	breq	.+24     	; 0x1404 <vfprintf+0x92>
    13ec:	80 33       	cpi	r24, 0x30	; 48
    13ee:	69 f4       	brne	.+26     	; 0x140a <vfprintf+0x98>
    13f0:	23 2d       	mov	r18, r3
    13f2:	21 60       	ori	r18, 0x01	; 1
    13f4:	16 c0       	rjmp	.+44     	; 0x1422 <vfprintf+0xb0>
    13f6:	83 2d       	mov	r24, r3
    13f8:	82 60       	ori	r24, 0x02	; 2
    13fa:	38 2e       	mov	r3, r24
    13fc:	e3 2d       	mov	r30, r3
    13fe:	e4 60       	ori	r30, 0x04	; 4
    1400:	3e 2e       	mov	r3, r30
    1402:	2a c0       	rjmp	.+84     	; 0x1458 <vfprintf+0xe6>
    1404:	f3 2d       	mov	r31, r3
    1406:	f8 60       	ori	r31, 0x08	; 8
    1408:	1d c0       	rjmp	.+58     	; 0x1444 <vfprintf+0xd2>
    140a:	37 fc       	sbrc	r3, 7
    140c:	2d c0       	rjmp	.+90     	; 0x1468 <vfprintf+0xf6>
    140e:	20 ed       	ldi	r18, 0xD0	; 208
    1410:	28 0f       	add	r18, r24
    1412:	2a 30       	cpi	r18, 0x0A	; 10
    1414:	40 f0       	brcs	.+16     	; 0x1426 <vfprintf+0xb4>
    1416:	8e 32       	cpi	r24, 0x2E	; 46
    1418:	b9 f4       	brne	.+46     	; 0x1448 <vfprintf+0xd6>
    141a:	36 fc       	sbrc	r3, 6
    141c:	81 c1       	rjmp	.+770    	; 0x1720 <vfprintf+0x3ae>
    141e:	23 2d       	mov	r18, r3
    1420:	20 64       	ori	r18, 0x40	; 64
    1422:	32 2e       	mov	r3, r18
    1424:	19 c0       	rjmp	.+50     	; 0x1458 <vfprintf+0xe6>
    1426:	36 fe       	sbrs	r3, 6
    1428:	06 c0       	rjmp	.+12     	; 0x1436 <vfprintf+0xc4>
    142a:	8a e0       	ldi	r24, 0x0A	; 10
    142c:	98 9e       	mul	r9, r24
    142e:	20 0d       	add	r18, r0
    1430:	11 24       	eor	r1, r1
    1432:	92 2e       	mov	r9, r18
    1434:	11 c0       	rjmp	.+34     	; 0x1458 <vfprintf+0xe6>
    1436:	ea e0       	ldi	r30, 0x0A	; 10
    1438:	2e 9e       	mul	r2, r30
    143a:	20 0d       	add	r18, r0
    143c:	11 24       	eor	r1, r1
    143e:	22 2e       	mov	r2, r18
    1440:	f3 2d       	mov	r31, r3
    1442:	f0 62       	ori	r31, 0x20	; 32
    1444:	3f 2e       	mov	r3, r31
    1446:	08 c0       	rjmp	.+16     	; 0x1458 <vfprintf+0xe6>
    1448:	8c 36       	cpi	r24, 0x6C	; 108
    144a:	21 f4       	brne	.+8      	; 0x1454 <vfprintf+0xe2>
    144c:	83 2d       	mov	r24, r3
    144e:	80 68       	ori	r24, 0x80	; 128
    1450:	38 2e       	mov	r3, r24
    1452:	02 c0       	rjmp	.+4      	; 0x1458 <vfprintf+0xe6>
    1454:	88 36       	cpi	r24, 0x68	; 104
    1456:	41 f4       	brne	.+16     	; 0x1468 <vfprintf+0xf6>
    1458:	f7 01       	movw	r30, r14
    145a:	93 fd       	sbrc	r25, 3
    145c:	85 91       	lpm	r24, Z+
    145e:	93 ff       	sbrs	r25, 3
    1460:	81 91       	ld	r24, Z+
    1462:	7f 01       	movw	r14, r30
    1464:	81 11       	cpse	r24, r1
    1466:	b3 cf       	rjmp	.-154    	; 0x13ce <vfprintf+0x5c>
    1468:	98 2f       	mov	r25, r24
    146a:	9f 7d       	andi	r25, 0xDF	; 223
    146c:	95 54       	subi	r25, 0x45	; 69
    146e:	93 30       	cpi	r25, 0x03	; 3
    1470:	28 f4       	brcc	.+10     	; 0x147c <vfprintf+0x10a>
    1472:	0c 5f       	subi	r16, 0xFC	; 252
    1474:	1f 4f       	sbci	r17, 0xFF	; 255
    1476:	9f e3       	ldi	r25, 0x3F	; 63
    1478:	99 83       	std	Y+1, r25	; 0x01
    147a:	0d c0       	rjmp	.+26     	; 0x1496 <vfprintf+0x124>
    147c:	83 36       	cpi	r24, 0x63	; 99
    147e:	31 f0       	breq	.+12     	; 0x148c <vfprintf+0x11a>
    1480:	83 37       	cpi	r24, 0x73	; 115
    1482:	71 f0       	breq	.+28     	; 0x14a0 <vfprintf+0x12e>
    1484:	83 35       	cpi	r24, 0x53	; 83
    1486:	09 f0       	breq	.+2      	; 0x148a <vfprintf+0x118>
    1488:	59 c0       	rjmp	.+178    	; 0x153c <vfprintf+0x1ca>
    148a:	21 c0       	rjmp	.+66     	; 0x14ce <vfprintf+0x15c>
    148c:	f8 01       	movw	r30, r16
    148e:	80 81       	ld	r24, Z
    1490:	89 83       	std	Y+1, r24	; 0x01
    1492:	0e 5f       	subi	r16, 0xFE	; 254
    1494:	1f 4f       	sbci	r17, 0xFF	; 255
    1496:	88 24       	eor	r8, r8
    1498:	83 94       	inc	r8
    149a:	91 2c       	mov	r9, r1
    149c:	53 01       	movw	r10, r6
    149e:	13 c0       	rjmp	.+38     	; 0x14c6 <vfprintf+0x154>
    14a0:	28 01       	movw	r4, r16
    14a2:	f2 e0       	ldi	r31, 0x02	; 2
    14a4:	4f 0e       	add	r4, r31
    14a6:	51 1c       	adc	r5, r1
    14a8:	f8 01       	movw	r30, r16
    14aa:	a0 80       	ld	r10, Z
    14ac:	b1 80       	ldd	r11, Z+1	; 0x01
    14ae:	36 fe       	sbrs	r3, 6
    14b0:	03 c0       	rjmp	.+6      	; 0x14b8 <vfprintf+0x146>
    14b2:	69 2d       	mov	r22, r9
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <vfprintf+0x14a>
    14b8:	6f ef       	ldi	r22, 0xFF	; 255
    14ba:	7f ef       	ldi	r23, 0xFF	; 255
    14bc:	c5 01       	movw	r24, r10
    14be:	0e 94 98 10 	call	0x2130	; 0x2130 <strnlen>
    14c2:	4c 01       	movw	r8, r24
    14c4:	82 01       	movw	r16, r4
    14c6:	f3 2d       	mov	r31, r3
    14c8:	ff 77       	andi	r31, 0x7F	; 127
    14ca:	3f 2e       	mov	r3, r31
    14cc:	16 c0       	rjmp	.+44     	; 0x14fa <vfprintf+0x188>
    14ce:	28 01       	movw	r4, r16
    14d0:	22 e0       	ldi	r18, 0x02	; 2
    14d2:	42 0e       	add	r4, r18
    14d4:	51 1c       	adc	r5, r1
    14d6:	f8 01       	movw	r30, r16
    14d8:	a0 80       	ld	r10, Z
    14da:	b1 80       	ldd	r11, Z+1	; 0x01
    14dc:	36 fe       	sbrs	r3, 6
    14de:	03 c0       	rjmp	.+6      	; 0x14e6 <vfprintf+0x174>
    14e0:	69 2d       	mov	r22, r9
    14e2:	70 e0       	ldi	r23, 0x00	; 0
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <vfprintf+0x178>
    14e6:	6f ef       	ldi	r22, 0xFF	; 255
    14e8:	7f ef       	ldi	r23, 0xFF	; 255
    14ea:	c5 01       	movw	r24, r10
    14ec:	0e 94 8d 10 	call	0x211a	; 0x211a <strnlen_P>
    14f0:	4c 01       	movw	r8, r24
    14f2:	f3 2d       	mov	r31, r3
    14f4:	f0 68       	ori	r31, 0x80	; 128
    14f6:	3f 2e       	mov	r3, r31
    14f8:	82 01       	movw	r16, r4
    14fa:	33 fc       	sbrc	r3, 3
    14fc:	1b c0       	rjmp	.+54     	; 0x1534 <vfprintf+0x1c2>
    14fe:	82 2d       	mov	r24, r2
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	88 16       	cp	r8, r24
    1504:	99 06       	cpc	r9, r25
    1506:	b0 f4       	brcc	.+44     	; 0x1534 <vfprintf+0x1c2>
    1508:	b6 01       	movw	r22, r12
    150a:	80 e2       	ldi	r24, 0x20	; 32
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    1512:	2a 94       	dec	r2
    1514:	f4 cf       	rjmp	.-24     	; 0x14fe <vfprintf+0x18c>
    1516:	f5 01       	movw	r30, r10
    1518:	37 fc       	sbrc	r3, 7
    151a:	85 91       	lpm	r24, Z+
    151c:	37 fe       	sbrs	r3, 7
    151e:	81 91       	ld	r24, Z+
    1520:	5f 01       	movw	r10, r30
    1522:	b6 01       	movw	r22, r12
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    152a:	21 10       	cpse	r2, r1
    152c:	2a 94       	dec	r2
    152e:	21 e0       	ldi	r18, 0x01	; 1
    1530:	82 1a       	sub	r8, r18
    1532:	91 08       	sbc	r9, r1
    1534:	81 14       	cp	r8, r1
    1536:	91 04       	cpc	r9, r1
    1538:	71 f7       	brne	.-36     	; 0x1516 <vfprintf+0x1a4>
    153a:	e8 c0       	rjmp	.+464    	; 0x170c <vfprintf+0x39a>
    153c:	84 36       	cpi	r24, 0x64	; 100
    153e:	11 f0       	breq	.+4      	; 0x1544 <vfprintf+0x1d2>
    1540:	89 36       	cpi	r24, 0x69	; 105
    1542:	41 f5       	brne	.+80     	; 0x1594 <vfprintf+0x222>
    1544:	f8 01       	movw	r30, r16
    1546:	37 fe       	sbrs	r3, 7
    1548:	07 c0       	rjmp	.+14     	; 0x1558 <vfprintf+0x1e6>
    154a:	60 81       	ld	r22, Z
    154c:	71 81       	ldd	r23, Z+1	; 0x01
    154e:	82 81       	ldd	r24, Z+2	; 0x02
    1550:	93 81       	ldd	r25, Z+3	; 0x03
    1552:	0c 5f       	subi	r16, 0xFC	; 252
    1554:	1f 4f       	sbci	r17, 0xFF	; 255
    1556:	08 c0       	rjmp	.+16     	; 0x1568 <vfprintf+0x1f6>
    1558:	60 81       	ld	r22, Z
    155a:	71 81       	ldd	r23, Z+1	; 0x01
    155c:	07 2e       	mov	r0, r23
    155e:	00 0c       	add	r0, r0
    1560:	88 0b       	sbc	r24, r24
    1562:	99 0b       	sbc	r25, r25
    1564:	0e 5f       	subi	r16, 0xFE	; 254
    1566:	1f 4f       	sbci	r17, 0xFF	; 255
    1568:	f3 2d       	mov	r31, r3
    156a:	ff 76       	andi	r31, 0x6F	; 111
    156c:	3f 2e       	mov	r3, r31
    156e:	97 ff       	sbrs	r25, 7
    1570:	09 c0       	rjmp	.+18     	; 0x1584 <vfprintf+0x212>
    1572:	90 95       	com	r25
    1574:	80 95       	com	r24
    1576:	70 95       	com	r23
    1578:	61 95       	neg	r22
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	8f 4f       	sbci	r24, 0xFF	; 255
    157e:	9f 4f       	sbci	r25, 0xFF	; 255
    1580:	f0 68       	ori	r31, 0x80	; 128
    1582:	3f 2e       	mov	r3, r31
    1584:	2a e0       	ldi	r18, 0x0A	; 10
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	a3 01       	movw	r20, r6
    158a:	0e 94 36 11 	call	0x226c	; 0x226c <__ultoa_invert>
    158e:	88 2e       	mov	r8, r24
    1590:	86 18       	sub	r8, r6
    1592:	45 c0       	rjmp	.+138    	; 0x161e <vfprintf+0x2ac>
    1594:	85 37       	cpi	r24, 0x75	; 117
    1596:	31 f4       	brne	.+12     	; 0x15a4 <vfprintf+0x232>
    1598:	23 2d       	mov	r18, r3
    159a:	2f 7e       	andi	r18, 0xEF	; 239
    159c:	b2 2e       	mov	r11, r18
    159e:	2a e0       	ldi	r18, 0x0A	; 10
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	25 c0       	rjmp	.+74     	; 0x15ee <vfprintf+0x27c>
    15a4:	93 2d       	mov	r25, r3
    15a6:	99 7f       	andi	r25, 0xF9	; 249
    15a8:	b9 2e       	mov	r11, r25
    15aa:	8f 36       	cpi	r24, 0x6F	; 111
    15ac:	c1 f0       	breq	.+48     	; 0x15de <vfprintf+0x26c>
    15ae:	18 f4       	brcc	.+6      	; 0x15b6 <vfprintf+0x244>
    15b0:	88 35       	cpi	r24, 0x58	; 88
    15b2:	79 f0       	breq	.+30     	; 0x15d2 <vfprintf+0x260>
    15b4:	b5 c0       	rjmp	.+362    	; 0x1720 <vfprintf+0x3ae>
    15b6:	80 37       	cpi	r24, 0x70	; 112
    15b8:	19 f0       	breq	.+6      	; 0x15c0 <vfprintf+0x24e>
    15ba:	88 37       	cpi	r24, 0x78	; 120
    15bc:	21 f0       	breq	.+8      	; 0x15c6 <vfprintf+0x254>
    15be:	b0 c0       	rjmp	.+352    	; 0x1720 <vfprintf+0x3ae>
    15c0:	e9 2f       	mov	r30, r25
    15c2:	e0 61       	ori	r30, 0x10	; 16
    15c4:	be 2e       	mov	r11, r30
    15c6:	b4 fe       	sbrs	r11, 4
    15c8:	0d c0       	rjmp	.+26     	; 0x15e4 <vfprintf+0x272>
    15ca:	fb 2d       	mov	r31, r11
    15cc:	f4 60       	ori	r31, 0x04	; 4
    15ce:	bf 2e       	mov	r11, r31
    15d0:	09 c0       	rjmp	.+18     	; 0x15e4 <vfprintf+0x272>
    15d2:	34 fe       	sbrs	r3, 4
    15d4:	0a c0       	rjmp	.+20     	; 0x15ea <vfprintf+0x278>
    15d6:	29 2f       	mov	r18, r25
    15d8:	26 60       	ori	r18, 0x06	; 6
    15da:	b2 2e       	mov	r11, r18
    15dc:	06 c0       	rjmp	.+12     	; 0x15ea <vfprintf+0x278>
    15de:	28 e0       	ldi	r18, 0x08	; 8
    15e0:	30 e0       	ldi	r19, 0x00	; 0
    15e2:	05 c0       	rjmp	.+10     	; 0x15ee <vfprintf+0x27c>
    15e4:	20 e1       	ldi	r18, 0x10	; 16
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <vfprintf+0x27c>
    15ea:	20 e1       	ldi	r18, 0x10	; 16
    15ec:	32 e0       	ldi	r19, 0x02	; 2
    15ee:	f8 01       	movw	r30, r16
    15f0:	b7 fe       	sbrs	r11, 7
    15f2:	07 c0       	rjmp	.+14     	; 0x1602 <vfprintf+0x290>
    15f4:	60 81       	ld	r22, Z
    15f6:	71 81       	ldd	r23, Z+1	; 0x01
    15f8:	82 81       	ldd	r24, Z+2	; 0x02
    15fa:	93 81       	ldd	r25, Z+3	; 0x03
    15fc:	0c 5f       	subi	r16, 0xFC	; 252
    15fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1600:	06 c0       	rjmp	.+12     	; 0x160e <vfprintf+0x29c>
    1602:	60 81       	ld	r22, Z
    1604:	71 81       	ldd	r23, Z+1	; 0x01
    1606:	80 e0       	ldi	r24, 0x00	; 0
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	0e 5f       	subi	r16, 0xFE	; 254
    160c:	1f 4f       	sbci	r17, 0xFF	; 255
    160e:	a3 01       	movw	r20, r6
    1610:	0e 94 36 11 	call	0x226c	; 0x226c <__ultoa_invert>
    1614:	88 2e       	mov	r8, r24
    1616:	86 18       	sub	r8, r6
    1618:	fb 2d       	mov	r31, r11
    161a:	ff 77       	andi	r31, 0x7F	; 127
    161c:	3f 2e       	mov	r3, r31
    161e:	36 fe       	sbrs	r3, 6
    1620:	0d c0       	rjmp	.+26     	; 0x163c <vfprintf+0x2ca>
    1622:	23 2d       	mov	r18, r3
    1624:	2e 7f       	andi	r18, 0xFE	; 254
    1626:	a2 2e       	mov	r10, r18
    1628:	89 14       	cp	r8, r9
    162a:	58 f4       	brcc	.+22     	; 0x1642 <vfprintf+0x2d0>
    162c:	34 fe       	sbrs	r3, 4
    162e:	0b c0       	rjmp	.+22     	; 0x1646 <vfprintf+0x2d4>
    1630:	32 fc       	sbrc	r3, 2
    1632:	09 c0       	rjmp	.+18     	; 0x1646 <vfprintf+0x2d4>
    1634:	83 2d       	mov	r24, r3
    1636:	8e 7e       	andi	r24, 0xEE	; 238
    1638:	a8 2e       	mov	r10, r24
    163a:	05 c0       	rjmp	.+10     	; 0x1646 <vfprintf+0x2d4>
    163c:	b8 2c       	mov	r11, r8
    163e:	a3 2c       	mov	r10, r3
    1640:	03 c0       	rjmp	.+6      	; 0x1648 <vfprintf+0x2d6>
    1642:	b8 2c       	mov	r11, r8
    1644:	01 c0       	rjmp	.+2      	; 0x1648 <vfprintf+0x2d6>
    1646:	b9 2c       	mov	r11, r9
    1648:	a4 fe       	sbrs	r10, 4
    164a:	0f c0       	rjmp	.+30     	; 0x166a <vfprintf+0x2f8>
    164c:	fe 01       	movw	r30, r28
    164e:	e8 0d       	add	r30, r8
    1650:	f1 1d       	adc	r31, r1
    1652:	80 81       	ld	r24, Z
    1654:	80 33       	cpi	r24, 0x30	; 48
    1656:	21 f4       	brne	.+8      	; 0x1660 <vfprintf+0x2ee>
    1658:	9a 2d       	mov	r25, r10
    165a:	99 7e       	andi	r25, 0xE9	; 233
    165c:	a9 2e       	mov	r10, r25
    165e:	09 c0       	rjmp	.+18     	; 0x1672 <vfprintf+0x300>
    1660:	a2 fe       	sbrs	r10, 2
    1662:	06 c0       	rjmp	.+12     	; 0x1670 <vfprintf+0x2fe>
    1664:	b3 94       	inc	r11
    1666:	b3 94       	inc	r11
    1668:	04 c0       	rjmp	.+8      	; 0x1672 <vfprintf+0x300>
    166a:	8a 2d       	mov	r24, r10
    166c:	86 78       	andi	r24, 0x86	; 134
    166e:	09 f0       	breq	.+2      	; 0x1672 <vfprintf+0x300>
    1670:	b3 94       	inc	r11
    1672:	a3 fc       	sbrc	r10, 3
    1674:	11 c0       	rjmp	.+34     	; 0x1698 <vfprintf+0x326>
    1676:	a0 fe       	sbrs	r10, 0
    1678:	06 c0       	rjmp	.+12     	; 0x1686 <vfprintf+0x314>
    167a:	b2 14       	cp	r11, r2
    167c:	88 f4       	brcc	.+34     	; 0x16a0 <vfprintf+0x32e>
    167e:	28 0c       	add	r2, r8
    1680:	92 2c       	mov	r9, r2
    1682:	9b 18       	sub	r9, r11
    1684:	0e c0       	rjmp	.+28     	; 0x16a2 <vfprintf+0x330>
    1686:	b2 14       	cp	r11, r2
    1688:	60 f4       	brcc	.+24     	; 0x16a2 <vfprintf+0x330>
    168a:	b6 01       	movw	r22, r12
    168c:	80 e2       	ldi	r24, 0x20	; 32
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    1694:	b3 94       	inc	r11
    1696:	f7 cf       	rjmp	.-18     	; 0x1686 <vfprintf+0x314>
    1698:	b2 14       	cp	r11, r2
    169a:	18 f4       	brcc	.+6      	; 0x16a2 <vfprintf+0x330>
    169c:	2b 18       	sub	r2, r11
    169e:	02 c0       	rjmp	.+4      	; 0x16a4 <vfprintf+0x332>
    16a0:	98 2c       	mov	r9, r8
    16a2:	21 2c       	mov	r2, r1
    16a4:	a4 fe       	sbrs	r10, 4
    16a6:	10 c0       	rjmp	.+32     	; 0x16c8 <vfprintf+0x356>
    16a8:	b6 01       	movw	r22, r12
    16aa:	80 e3       	ldi	r24, 0x30	; 48
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    16b2:	a2 fe       	sbrs	r10, 2
    16b4:	17 c0       	rjmp	.+46     	; 0x16e4 <vfprintf+0x372>
    16b6:	a1 fc       	sbrc	r10, 1
    16b8:	03 c0       	rjmp	.+6      	; 0x16c0 <vfprintf+0x34e>
    16ba:	88 e7       	ldi	r24, 0x78	; 120
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	02 c0       	rjmp	.+4      	; 0x16c4 <vfprintf+0x352>
    16c0:	88 e5       	ldi	r24, 0x58	; 88
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	b6 01       	movw	r22, r12
    16c6:	0c c0       	rjmp	.+24     	; 0x16e0 <vfprintf+0x36e>
    16c8:	8a 2d       	mov	r24, r10
    16ca:	86 78       	andi	r24, 0x86	; 134
    16cc:	59 f0       	breq	.+22     	; 0x16e4 <vfprintf+0x372>
    16ce:	a1 fe       	sbrs	r10, 1
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <vfprintf+0x364>
    16d2:	8b e2       	ldi	r24, 0x2B	; 43
    16d4:	01 c0       	rjmp	.+2      	; 0x16d8 <vfprintf+0x366>
    16d6:	80 e2       	ldi	r24, 0x20	; 32
    16d8:	a7 fc       	sbrc	r10, 7
    16da:	8d e2       	ldi	r24, 0x2D	; 45
    16dc:	b6 01       	movw	r22, r12
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    16e4:	89 14       	cp	r8, r9
    16e6:	38 f4       	brcc	.+14     	; 0x16f6 <vfprintf+0x384>
    16e8:	b6 01       	movw	r22, r12
    16ea:	80 e3       	ldi	r24, 0x30	; 48
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    16f2:	9a 94       	dec	r9
    16f4:	f7 cf       	rjmp	.-18     	; 0x16e4 <vfprintf+0x372>
    16f6:	8a 94       	dec	r8
    16f8:	f3 01       	movw	r30, r6
    16fa:	e8 0d       	add	r30, r8
    16fc:	f1 1d       	adc	r31, r1
    16fe:	80 81       	ld	r24, Z
    1700:	b6 01       	movw	r22, r12
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    1708:	81 10       	cpse	r8, r1
    170a:	f5 cf       	rjmp	.-22     	; 0x16f6 <vfprintf+0x384>
    170c:	22 20       	and	r2, r2
    170e:	09 f4       	brne	.+2      	; 0x1712 <vfprintf+0x3a0>
    1710:	42 ce       	rjmp	.-892    	; 0x1396 <vfprintf+0x24>
    1712:	b6 01       	movw	r22, r12
    1714:	80 e2       	ldi	r24, 0x20	; 32
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <fputc>
    171c:	2a 94       	dec	r2
    171e:	f6 cf       	rjmp	.-20     	; 0x170c <vfprintf+0x39a>
    1720:	f6 01       	movw	r30, r12
    1722:	86 81       	ldd	r24, Z+6	; 0x06
    1724:	97 81       	ldd	r25, Z+7	; 0x07
    1726:	02 c0       	rjmp	.+4      	; 0x172c <vfprintf+0x3ba>
    1728:	8f ef       	ldi	r24, 0xFF	; 255
    172a:	9f ef       	ldi	r25, 0xFF	; 255
    172c:	2b 96       	adiw	r28, 0x0b	; 11
    172e:	e2 e1       	ldi	r30, 0x12	; 18
    1730:	0c 94 b3 11 	jmp	0x2366	; 0x2366 <__epilogue_restores__>

00001734 <putval>:
    1734:	20 fd       	sbrc	r18, 0
    1736:	09 c0       	rjmp	.+18     	; 0x174a <putval+0x16>
    1738:	fc 01       	movw	r30, r24
    173a:	23 fd       	sbrc	r18, 3
    173c:	05 c0       	rjmp	.+10     	; 0x1748 <putval+0x14>
    173e:	22 ff       	sbrs	r18, 2
    1740:	02 c0       	rjmp	.+4      	; 0x1746 <putval+0x12>
    1742:	73 83       	std	Z+3, r23	; 0x03
    1744:	62 83       	std	Z+2, r22	; 0x02
    1746:	51 83       	std	Z+1, r21	; 0x01
    1748:	40 83       	st	Z, r20
    174a:	08 95       	ret

0000174c <mulacc>:
    174c:	44 fd       	sbrc	r20, 4
    174e:	17 c0       	rjmp	.+46     	; 0x177e <mulacc+0x32>
    1750:	46 fd       	sbrc	r20, 6
    1752:	17 c0       	rjmp	.+46     	; 0x1782 <mulacc+0x36>
    1754:	ab 01       	movw	r20, r22
    1756:	bc 01       	movw	r22, r24
    1758:	da 01       	movw	r26, r20
    175a:	fb 01       	movw	r30, r22
    175c:	aa 0f       	add	r26, r26
    175e:	bb 1f       	adc	r27, r27
    1760:	ee 1f       	adc	r30, r30
    1762:	ff 1f       	adc	r31, r31
    1764:	10 94       	com	r1
    1766:	d1 f7       	brne	.-12     	; 0x175c <mulacc+0x10>
    1768:	4a 0f       	add	r20, r26
    176a:	5b 1f       	adc	r21, r27
    176c:	6e 1f       	adc	r22, r30
    176e:	7f 1f       	adc	r23, r31
    1770:	cb 01       	movw	r24, r22
    1772:	ba 01       	movw	r22, r20
    1774:	66 0f       	add	r22, r22
    1776:	77 1f       	adc	r23, r23
    1778:	88 1f       	adc	r24, r24
    177a:	99 1f       	adc	r25, r25
    177c:	09 c0       	rjmp	.+18     	; 0x1790 <mulacc+0x44>
    177e:	33 e0       	ldi	r19, 0x03	; 3
    1780:	01 c0       	rjmp	.+2      	; 0x1784 <mulacc+0x38>
    1782:	34 e0       	ldi	r19, 0x04	; 4
    1784:	66 0f       	add	r22, r22
    1786:	77 1f       	adc	r23, r23
    1788:	88 1f       	adc	r24, r24
    178a:	99 1f       	adc	r25, r25
    178c:	31 50       	subi	r19, 0x01	; 1
    178e:	d1 f7       	brne	.-12     	; 0x1784 <mulacc+0x38>
    1790:	62 0f       	add	r22, r18
    1792:	71 1d       	adc	r23, r1
    1794:	81 1d       	adc	r24, r1
    1796:	91 1d       	adc	r25, r1
    1798:	08 95       	ret

0000179a <skip_spaces>:
    179a:	0f 93       	push	r16
    179c:	1f 93       	push	r17
    179e:	cf 93       	push	r28
    17a0:	df 93       	push	r29
    17a2:	8c 01       	movw	r16, r24
    17a4:	c8 01       	movw	r24, r16
    17a6:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    17aa:	ec 01       	movw	r28, r24
    17ac:	97 fd       	sbrc	r25, 7
    17ae:	08 c0       	rjmp	.+16     	; 0x17c0 <skip_spaces+0x26>
    17b0:	0e 94 79 10 	call	0x20f2	; 0x20f2 <isspace>
    17b4:	89 2b       	or	r24, r25
    17b6:	b1 f7       	brne	.-20     	; 0x17a4 <skip_spaces+0xa>
    17b8:	b8 01       	movw	r22, r16
    17ba:	ce 01       	movw	r24, r28
    17bc:	0e 94 1d 11 	call	0x223a	; 0x223a <ungetc>
    17c0:	ce 01       	movw	r24, r28
    17c2:	df 91       	pop	r29
    17c4:	cf 91       	pop	r28
    17c6:	1f 91       	pop	r17
    17c8:	0f 91       	pop	r16
    17ca:	08 95       	ret

000017cc <conv_int>:
    17cc:	8f 92       	push	r8
    17ce:	9f 92       	push	r9
    17d0:	af 92       	push	r10
    17d2:	bf 92       	push	r11
    17d4:	ef 92       	push	r14
    17d6:	ff 92       	push	r15
    17d8:	0f 93       	push	r16
    17da:	1f 93       	push	r17
    17dc:	cf 93       	push	r28
    17de:	df 93       	push	r29
    17e0:	8c 01       	movw	r16, r24
    17e2:	d6 2f       	mov	r29, r22
    17e4:	7a 01       	movw	r14, r20
    17e6:	b2 2e       	mov	r11, r18
    17e8:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    17ec:	9c 01       	movw	r18, r24
    17ee:	33 27       	eor	r19, r19
    17f0:	2b 32       	cpi	r18, 0x2B	; 43
    17f2:	31 05       	cpc	r19, r1
    17f4:	31 f0       	breq	.+12     	; 0x1802 <conv_int+0x36>
    17f6:	2d 32       	cpi	r18, 0x2D	; 45
    17f8:	31 05       	cpc	r19, r1
    17fa:	61 f4       	brne	.+24     	; 0x1814 <conv_int+0x48>
    17fc:	8b 2d       	mov	r24, r11
    17fe:	80 68       	ori	r24, 0x80	; 128
    1800:	b8 2e       	mov	r11, r24
    1802:	d1 50       	subi	r29, 0x01	; 1
    1804:	11 f4       	brne	.+4      	; 0x180a <conv_int+0x3e>
    1806:	80 e0       	ldi	r24, 0x00	; 0
    1808:	68 c0       	rjmp	.+208    	; 0x18da <conv_int+0x10e>
    180a:	c8 01       	movw	r24, r16
    180c:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    1810:	97 fd       	sbrc	r25, 7
    1812:	f9 cf       	rjmp	.-14     	; 0x1806 <conv_int+0x3a>
    1814:	cb 2d       	mov	r28, r11
    1816:	cd 7f       	andi	r28, 0xFD	; 253
    1818:	2b 2d       	mov	r18, r11
    181a:	20 73       	andi	r18, 0x30	; 48
    181c:	09 f5       	brne	.+66     	; 0x1860 <conv_int+0x94>
    181e:	80 33       	cpi	r24, 0x30	; 48
    1820:	f9 f4       	brne	.+62     	; 0x1860 <conv_int+0x94>
    1822:	aa 24       	eor	r10, r10
    1824:	aa 94       	dec	r10
    1826:	ad 0e       	add	r10, r29
    1828:	09 f4       	brne	.+2      	; 0x182c <conv_int+0x60>
    182a:	43 c0       	rjmp	.+134    	; 0x18b2 <conv_int+0xe6>
    182c:	c8 01       	movw	r24, r16
    182e:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    1832:	97 fd       	sbrc	r25, 7
    1834:	3e c0       	rjmp	.+124    	; 0x18b2 <conv_int+0xe6>
    1836:	9c 01       	movw	r18, r24
    1838:	2f 7d       	andi	r18, 0xDF	; 223
    183a:	33 27       	eor	r19, r19
    183c:	28 35       	cpi	r18, 0x58	; 88
    183e:	31 05       	cpc	r19, r1
    1840:	49 f4       	brne	.+18     	; 0x1854 <conv_int+0x88>
    1842:	c2 64       	ori	r28, 0x42	; 66
    1844:	d2 50       	subi	r29, 0x02	; 2
    1846:	a9 f1       	breq	.+106    	; 0x18b2 <conv_int+0xe6>
    1848:	c8 01       	movw	r24, r16
    184a:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    184e:	97 ff       	sbrs	r25, 7
    1850:	07 c0       	rjmp	.+14     	; 0x1860 <conv_int+0x94>
    1852:	2f c0       	rjmp	.+94     	; 0x18b2 <conv_int+0xe6>
    1854:	b6 fe       	sbrs	r11, 6
    1856:	02 c0       	rjmp	.+4      	; 0x185c <conv_int+0x90>
    1858:	c2 60       	ori	r28, 0x02	; 2
    185a:	01 c0       	rjmp	.+2      	; 0x185e <conv_int+0x92>
    185c:	c2 61       	ori	r28, 0x12	; 18
    185e:	da 2d       	mov	r29, r10
    1860:	81 2c       	mov	r8, r1
    1862:	91 2c       	mov	r9, r1
    1864:	54 01       	movw	r10, r8
    1866:	20 ed       	ldi	r18, 0xD0	; 208
    1868:	28 0f       	add	r18, r24
    186a:	28 30       	cpi	r18, 0x08	; 8
    186c:	80 f0       	brcs	.+32     	; 0x188e <conv_int+0xc2>
    186e:	c4 ff       	sbrs	r28, 4
    1870:	04 c0       	rjmp	.+8      	; 0x187a <conv_int+0xae>
    1872:	b8 01       	movw	r22, r16
    1874:	0e 94 1d 11 	call	0x223a	; 0x223a <ungetc>
    1878:	19 c0       	rjmp	.+50     	; 0x18ac <conv_int+0xe0>
    187a:	2a 30       	cpi	r18, 0x0A	; 10
    187c:	40 f0       	brcs	.+16     	; 0x188e <conv_int+0xc2>
    187e:	c6 ff       	sbrs	r28, 6
    1880:	f8 cf       	rjmp	.-16     	; 0x1872 <conv_int+0xa6>
    1882:	2f 7d       	andi	r18, 0xDF	; 223
    1884:	3f ee       	ldi	r19, 0xEF	; 239
    1886:	32 0f       	add	r19, r18
    1888:	36 30       	cpi	r19, 0x06	; 6
    188a:	98 f7       	brcc	.-26     	; 0x1872 <conv_int+0xa6>
    188c:	27 50       	subi	r18, 0x07	; 7
    188e:	4c 2f       	mov	r20, r28
    1890:	c5 01       	movw	r24, r10
    1892:	b4 01       	movw	r22, r8
    1894:	0e 94 a6 0b 	call	0x174c	; 0x174c <mulacc>
    1898:	4b 01       	movw	r8, r22
    189a:	5c 01       	movw	r10, r24
    189c:	c2 60       	ori	r28, 0x02	; 2
    189e:	d1 50       	subi	r29, 0x01	; 1
    18a0:	59 f0       	breq	.+22     	; 0x18b8 <conv_int+0xec>
    18a2:	c8 01       	movw	r24, r16
    18a4:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    18a8:	97 ff       	sbrs	r25, 7
    18aa:	dd cf       	rjmp	.-70     	; 0x1866 <conv_int+0x9a>
    18ac:	c1 fd       	sbrc	r28, 1
    18ae:	04 c0       	rjmp	.+8      	; 0x18b8 <conv_int+0xec>
    18b0:	aa cf       	rjmp	.-172    	; 0x1806 <conv_int+0x3a>
    18b2:	81 2c       	mov	r8, r1
    18b4:	91 2c       	mov	r9, r1
    18b6:	54 01       	movw	r10, r8
    18b8:	c7 ff       	sbrs	r28, 7
    18ba:	08 c0       	rjmp	.+16     	; 0x18cc <conv_int+0x100>
    18bc:	b0 94       	com	r11
    18be:	a0 94       	com	r10
    18c0:	90 94       	com	r9
    18c2:	80 94       	com	r8
    18c4:	81 1c       	adc	r8, r1
    18c6:	91 1c       	adc	r9, r1
    18c8:	a1 1c       	adc	r10, r1
    18ca:	b1 1c       	adc	r11, r1
    18cc:	2c 2f       	mov	r18, r28
    18ce:	b5 01       	movw	r22, r10
    18d0:	a4 01       	movw	r20, r8
    18d2:	c7 01       	movw	r24, r14
    18d4:	0e 94 9a 0b 	call	0x1734	; 0x1734 <putval>
    18d8:	81 e0       	ldi	r24, 0x01	; 1
    18da:	df 91       	pop	r29
    18dc:	cf 91       	pop	r28
    18de:	1f 91       	pop	r17
    18e0:	0f 91       	pop	r16
    18e2:	ff 90       	pop	r15
    18e4:	ef 90       	pop	r14
    18e6:	bf 90       	pop	r11
    18e8:	af 90       	pop	r10
    18ea:	9f 90       	pop	r9
    18ec:	8f 90       	pop	r8
    18ee:	08 95       	ret

000018f0 <conv_brk>:
    18f0:	a0 e2       	ldi	r26, 0x20	; 32
    18f2:	b0 e0       	ldi	r27, 0x00	; 0
    18f4:	ee e7       	ldi	r30, 0x7E	; 126
    18f6:	fc e0       	ldi	r31, 0x0C	; 12
    18f8:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__prologue_saves__+0x6>
    18fc:	5c 01       	movw	r10, r24
    18fe:	96 2e       	mov	r9, r22
    1900:	7a 01       	movw	r14, r20
    1902:	f9 01       	movw	r30, r18
    1904:	8e 01       	movw	r16, r28
    1906:	0f 5f       	subi	r16, 0xFF	; 255
    1908:	1f 4f       	sbci	r17, 0xFF	; 255
    190a:	68 01       	movw	r12, r16
    190c:	80 e2       	ldi	r24, 0x20	; 32
    190e:	d8 01       	movw	r26, r16
    1910:	1d 92       	st	X+, r1
    1912:	8a 95       	dec	r24
    1914:	e9 f7       	brne	.-6      	; 0x1910 <conv_brk+0x20>
    1916:	d5 01       	movw	r26, r10
    1918:	13 96       	adiw	r26, 0x03	; 3
    191a:	8c 90       	ld	r8, X
    191c:	80 e0       	ldi	r24, 0x00	; 0
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	61 2c       	mov	r6, r1
    1922:	71 2c       	mov	r7, r1
    1924:	30 e0       	ldi	r19, 0x00	; 0
    1926:	61 e0       	ldi	r22, 0x01	; 1
    1928:	70 e0       	ldi	r23, 0x00	; 0
    192a:	83 fc       	sbrc	r8, 3
    192c:	25 91       	lpm	r18, Z+
    192e:	83 fe       	sbrs	r8, 3
    1930:	21 91       	ld	r18, Z+
    1932:	8f 01       	movw	r16, r30
    1934:	52 2e       	mov	r5, r18
    1936:	21 11       	cpse	r18, r1
    1938:	03 c0       	rjmp	.+6      	; 0x1940 <conv_brk+0x50>
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	92 c0       	rjmp	.+292    	; 0x1a64 <conv_brk+0x174>
    1940:	2e 35       	cpi	r18, 0x5E	; 94
    1942:	11 f4       	brne	.+4      	; 0x1948 <conv_brk+0x58>
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	51 f1       	breq	.+84     	; 0x199c <conv_brk+0xac>
    1948:	43 2f       	mov	r20, r19
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	48 17       	cp	r20, r24
    194e:	59 07       	cpc	r21, r25
    1950:	3c f4       	brge	.+14     	; 0x1960 <conv_brk+0x70>
    1952:	2d 35       	cpi	r18, 0x5D	; 93
    1954:	59 f1       	breq	.+86     	; 0x19ac <conv_brk+0xbc>
    1956:	2d 32       	cpi	r18, 0x2D	; 45
    1958:	19 f4       	brne	.+6      	; 0x1960 <conv_brk+0x70>
    195a:	77 20       	and	r7, r7
    195c:	09 f1       	breq	.+66     	; 0x19a0 <conv_brk+0xb0>
    195e:	03 c0       	rjmp	.+6      	; 0x1966 <conv_brk+0x76>
    1960:	77 20       	and	r7, r7
    1962:	09 f4       	brne	.+2      	; 0x1966 <conv_brk+0x76>
    1964:	6a c0       	rjmp	.+212    	; 0x1a3a <conv_brk+0x14a>
    1966:	45 2d       	mov	r20, r5
    1968:	46 95       	lsr	r20
    196a:	46 95       	lsr	r20
    196c:	46 95       	lsr	r20
    196e:	d6 01       	movw	r26, r12
    1970:	a4 0f       	add	r26, r20
    1972:	b1 1d       	adc	r27, r1
    1974:	45 2d       	mov	r20, r5
    1976:	47 70       	andi	r20, 0x07	; 7
    1978:	8b 01       	movw	r16, r22
    197a:	02 c0       	rjmp	.+4      	; 0x1980 <conv_brk+0x90>
    197c:	00 0f       	add	r16, r16
    197e:	11 1f       	adc	r17, r17
    1980:	4a 95       	dec	r20
    1982:	e2 f7       	brpl	.-8      	; 0x197c <conv_brk+0x8c>
    1984:	a8 01       	movw	r20, r16
    1986:	5c 91       	ld	r21, X
    1988:	45 2b       	or	r20, r21
    198a:	4c 93       	st	X, r20
    198c:	65 14       	cp	r6, r5
    198e:	59 f0       	breq	.+22     	; 0x19a6 <conv_brk+0xb6>
    1990:	56 14       	cp	r5, r6
    1992:	10 f4       	brcc	.+4      	; 0x1998 <conv_brk+0xa8>
    1994:	53 94       	inc	r5
    1996:	e7 cf       	rjmp	.-50     	; 0x1966 <conv_brk+0x76>
    1998:	5a 94       	dec	r5
    199a:	e5 cf       	rjmp	.-54     	; 0x1966 <conv_brk+0x76>
    199c:	31 e0       	ldi	r19, 0x01	; 1
    199e:	04 c0       	rjmp	.+8      	; 0x19a8 <conv_brk+0xb8>
    19a0:	77 24       	eor	r7, r7
    19a2:	73 94       	inc	r7
    19a4:	01 c0       	rjmp	.+2      	; 0x19a8 <conv_brk+0xb8>
    19a6:	71 2c       	mov	r7, r1
    19a8:	01 96       	adiw	r24, 0x01	; 1
    19aa:	bf cf       	rjmp	.-130    	; 0x192a <conv_brk+0x3a>
    19ac:	77 20       	and	r7, r7
    19ae:	19 f0       	breq	.+6      	; 0x19b6 <conv_brk+0xc6>
    19b0:	8e 81       	ldd	r24, Y+6	; 0x06
    19b2:	80 62       	ori	r24, 0x20	; 32
    19b4:	8e 83       	std	Y+6, r24	; 0x06
    19b6:	31 11       	cpse	r19, r1
    19b8:	03 c0       	rjmp	.+6      	; 0x19c0 <conv_brk+0xd0>
    19ba:	88 24       	eor	r8, r8
    19bc:	83 94       	inc	r8
    19be:	17 c0       	rjmp	.+46     	; 0x19ee <conv_brk+0xfe>
    19c0:	f6 01       	movw	r30, r12
    19c2:	9e 01       	movw	r18, r28
    19c4:	2f 5d       	subi	r18, 0xDF	; 223
    19c6:	3f 4f       	sbci	r19, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	80 95       	com	r24
    19cc:	81 93       	st	Z+, r24
    19ce:	2e 17       	cp	r18, r30
    19d0:	3f 07       	cpc	r19, r31
    19d2:	d1 f7       	brne	.-12     	; 0x19c8 <conv_brk+0xd8>
    19d4:	f2 cf       	rjmp	.-28     	; 0x19ba <conv_brk+0xca>
    19d6:	e1 14       	cp	r14, r1
    19d8:	f1 04       	cpc	r15, r1
    19da:	29 f0       	breq	.+10     	; 0x19e6 <conv_brk+0xf6>
    19dc:	d7 01       	movw	r26, r14
    19de:	8c 93       	st	X, r24
    19e0:	f7 01       	movw	r30, r14
    19e2:	31 96       	adiw	r30, 0x01	; 1
    19e4:	7f 01       	movw	r14, r30
    19e6:	9a 94       	dec	r9
    19e8:	81 2c       	mov	r8, r1
    19ea:	99 20       	and	r9, r9
    19ec:	f9 f0       	breq	.+62     	; 0x1a2c <conv_brk+0x13c>
    19ee:	c5 01       	movw	r24, r10
    19f0:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    19f4:	97 fd       	sbrc	r25, 7
    19f6:	18 c0       	rjmp	.+48     	; 0x1a28 <conv_brk+0x138>
    19f8:	fc 01       	movw	r30, r24
    19fa:	ff 27       	eor	r31, r31
    19fc:	23 e0       	ldi	r18, 0x03	; 3
    19fe:	f5 95       	asr	r31
    1a00:	e7 95       	ror	r30
    1a02:	2a 95       	dec	r18
    1a04:	e1 f7       	brne	.-8      	; 0x19fe <conv_brk+0x10e>
    1a06:	ec 0d       	add	r30, r12
    1a08:	fd 1d       	adc	r31, r13
    1a0a:	20 81       	ld	r18, Z
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	ac 01       	movw	r20, r24
    1a10:	47 70       	andi	r20, 0x07	; 7
    1a12:	55 27       	eor	r21, r21
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <conv_brk+0x12a>
    1a16:	35 95       	asr	r19
    1a18:	27 95       	ror	r18
    1a1a:	4a 95       	dec	r20
    1a1c:	e2 f7       	brpl	.-8      	; 0x1a16 <conv_brk+0x126>
    1a1e:	20 fd       	sbrc	r18, 0
    1a20:	da cf       	rjmp	.-76     	; 0x19d6 <conv_brk+0xe6>
    1a22:	b5 01       	movw	r22, r10
    1a24:	0e 94 1d 11 	call	0x223a	; 0x223a <ungetc>
    1a28:	81 10       	cpse	r8, r1
    1a2a:	87 cf       	rjmp	.-242    	; 0x193a <conv_brk+0x4a>
    1a2c:	e1 14       	cp	r14, r1
    1a2e:	f1 04       	cpc	r15, r1
    1a30:	11 f0       	breq	.+4      	; 0x1a36 <conv_brk+0x146>
    1a32:	d7 01       	movw	r26, r14
    1a34:	1c 92       	st	X, r1
    1a36:	c8 01       	movw	r24, r16
    1a38:	15 c0       	rjmp	.+42     	; 0x1a64 <conv_brk+0x174>
    1a3a:	42 2f       	mov	r20, r18
    1a3c:	46 95       	lsr	r20
    1a3e:	46 95       	lsr	r20
    1a40:	46 95       	lsr	r20
    1a42:	d6 01       	movw	r26, r12
    1a44:	a4 0f       	add	r26, r20
    1a46:	b1 1d       	adc	r27, r1
    1a48:	42 2f       	mov	r20, r18
    1a4a:	47 70       	andi	r20, 0x07	; 7
    1a4c:	8b 01       	movw	r16, r22
    1a4e:	02 c0       	rjmp	.+4      	; 0x1a54 <conv_brk+0x164>
    1a50:	00 0f       	add	r16, r16
    1a52:	11 1f       	adc	r17, r17
    1a54:	4a 95       	dec	r20
    1a56:	e2 f7       	brpl	.-8      	; 0x1a50 <conv_brk+0x160>
    1a58:	a8 01       	movw	r20, r16
    1a5a:	5c 91       	ld	r21, X
    1a5c:	45 2b       	or	r20, r21
    1a5e:	4c 93       	st	X, r20
    1a60:	62 2e       	mov	r6, r18
    1a62:	a2 cf       	rjmp	.-188    	; 0x19a8 <conv_brk+0xb8>
    1a64:	a0 96       	adiw	r28, 0x20	; 32
    1a66:	ef e0       	ldi	r30, 0x0F	; 15
    1a68:	0c 94 b6 11 	jmp	0x236c	; 0x236c <__epilogue_restores__+0x6>

00001a6c <vfscanf>:
    1a6c:	a0 e0       	ldi	r26, 0x00	; 0
    1a6e:	b0 e0       	ldi	r27, 0x00	; 0
    1a70:	ec e3       	ldi	r30, 0x3C	; 60
    1a72:	fd e0       	ldi	r31, 0x0D	; 13
    1a74:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__prologue_saves__+0x6>
    1a78:	6c 01       	movw	r12, r24
    1a7a:	eb 01       	movw	r28, r22
    1a7c:	5a 01       	movw	r10, r20
    1a7e:	fc 01       	movw	r30, r24
    1a80:	17 82       	std	Z+7, r1	; 0x07
    1a82:	16 82       	std	Z+6, r1	; 0x06
    1a84:	51 2c       	mov	r5, r1
    1a86:	f6 01       	movw	r30, r12
    1a88:	e3 80       	ldd	r14, Z+3	; 0x03
    1a8a:	fe 01       	movw	r30, r28
    1a8c:	e3 fc       	sbrc	r14, 3
    1a8e:	85 91       	lpm	r24, Z+
    1a90:	e3 fe       	sbrs	r14, 3
    1a92:	81 91       	ld	r24, Z+
    1a94:	18 2f       	mov	r17, r24
    1a96:	ef 01       	movw	r28, r30
    1a98:	88 23       	and	r24, r24
    1a9a:	09 f4       	brne	.+2      	; 0x1a9e <vfscanf+0x32>
    1a9c:	ee c0       	rjmp	.+476    	; 0x1c7a <vfscanf+0x20e>
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	0e 94 79 10 	call	0x20f2	; 0x20f2 <isspace>
    1aa4:	89 2b       	or	r24, r25
    1aa6:	21 f0       	breq	.+8      	; 0x1ab0 <vfscanf+0x44>
    1aa8:	c6 01       	movw	r24, r12
    1aaa:	0e 94 cd 0b 	call	0x179a	; 0x179a <skip_spaces>
    1aae:	eb cf       	rjmp	.-42     	; 0x1a86 <vfscanf+0x1a>
    1ab0:	15 32       	cpi	r17, 0x25	; 37
    1ab2:	41 f4       	brne	.+16     	; 0x1ac4 <vfscanf+0x58>
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	e3 fc       	sbrc	r14, 3
    1ab8:	15 91       	lpm	r17, Z+
    1aba:	e3 fe       	sbrs	r14, 3
    1abc:	11 91       	ld	r17, Z+
    1abe:	ef 01       	movw	r28, r30
    1ac0:	15 32       	cpi	r17, 0x25	; 37
    1ac2:	81 f4       	brne	.+32     	; 0x1ae4 <vfscanf+0x78>
    1ac4:	c6 01       	movw	r24, r12
    1ac6:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    1aca:	97 fd       	sbrc	r25, 7
    1acc:	d4 c0       	rjmp	.+424    	; 0x1c76 <vfscanf+0x20a>
    1ace:	41 2f       	mov	r20, r17
    1ad0:	50 e0       	ldi	r21, 0x00	; 0
    1ad2:	9c 01       	movw	r18, r24
    1ad4:	33 27       	eor	r19, r19
    1ad6:	24 17       	cp	r18, r20
    1ad8:	35 07       	cpc	r19, r21
    1ada:	a9 f2       	breq	.-86     	; 0x1a86 <vfscanf+0x1a>
    1adc:	b6 01       	movw	r22, r12
    1ade:	0e 94 1d 11 	call	0x223a	; 0x223a <ungetc>
    1ae2:	cb c0       	rjmp	.+406    	; 0x1c7a <vfscanf+0x20e>
    1ae4:	1a 32       	cpi	r17, 0x2A	; 42
    1ae6:	39 f4       	brne	.+14     	; 0x1af6 <vfscanf+0x8a>
    1ae8:	e3 fc       	sbrc	r14, 3
    1aea:	15 91       	lpm	r17, Z+
    1aec:	e3 fe       	sbrs	r14, 3
    1aee:	11 91       	ld	r17, Z+
    1af0:	ef 01       	movw	r28, r30
    1af2:	01 e0       	ldi	r16, 0x01	; 1
    1af4:	01 c0       	rjmp	.+2      	; 0x1af8 <vfscanf+0x8c>
    1af6:	00 e0       	ldi	r16, 0x00	; 0
    1af8:	f1 2c       	mov	r15, r1
    1afa:	20 ed       	ldi	r18, 0xD0	; 208
    1afc:	21 0f       	add	r18, r17
    1afe:	2a 30       	cpi	r18, 0x0A	; 10
    1b00:	80 f4       	brcc	.+32     	; 0x1b22 <vfscanf+0xb6>
    1b02:	02 60       	ori	r16, 0x02	; 2
    1b04:	6f 2d       	mov	r22, r15
    1b06:	70 e0       	ldi	r23, 0x00	; 0
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	40 e2       	ldi	r20, 0x20	; 32
    1b0e:	0e 94 a6 0b 	call	0x174c	; 0x174c <mulacc>
    1b12:	f6 2e       	mov	r15, r22
    1b14:	fe 01       	movw	r30, r28
    1b16:	e3 fc       	sbrc	r14, 3
    1b18:	15 91       	lpm	r17, Z+
    1b1a:	e3 fe       	sbrs	r14, 3
    1b1c:	11 91       	ld	r17, Z+
    1b1e:	ef 01       	movw	r28, r30
    1b20:	ec cf       	rjmp	.-40     	; 0x1afa <vfscanf+0x8e>
    1b22:	01 ff       	sbrs	r16, 1
    1b24:	03 c0       	rjmp	.+6      	; 0x1b2c <vfscanf+0xc0>
    1b26:	f1 10       	cpse	r15, r1
    1b28:	03 c0       	rjmp	.+6      	; 0x1b30 <vfscanf+0xc4>
    1b2a:	a7 c0       	rjmp	.+334    	; 0x1c7a <vfscanf+0x20e>
    1b2c:	ff 24       	eor	r15, r15
    1b2e:	fa 94       	dec	r15
    1b30:	18 36       	cpi	r17, 0x68	; 104
    1b32:	19 f0       	breq	.+6      	; 0x1b3a <vfscanf+0xce>
    1b34:	1c 36       	cpi	r17, 0x6C	; 108
    1b36:	51 f0       	breq	.+20     	; 0x1b4c <vfscanf+0xe0>
    1b38:	10 c0       	rjmp	.+32     	; 0x1b5a <vfscanf+0xee>
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	e3 fc       	sbrc	r14, 3
    1b3e:	15 91       	lpm	r17, Z+
    1b40:	e3 fe       	sbrs	r14, 3
    1b42:	11 91       	ld	r17, Z+
    1b44:	ef 01       	movw	r28, r30
    1b46:	18 36       	cpi	r17, 0x68	; 104
    1b48:	41 f4       	brne	.+16     	; 0x1b5a <vfscanf+0xee>
    1b4a:	08 60       	ori	r16, 0x08	; 8
    1b4c:	04 60       	ori	r16, 0x04	; 4
    1b4e:	fe 01       	movw	r30, r28
    1b50:	e3 fc       	sbrc	r14, 3
    1b52:	15 91       	lpm	r17, Z+
    1b54:	e3 fe       	sbrs	r14, 3
    1b56:	11 91       	ld	r17, Z+
    1b58:	ef 01       	movw	r28, r30
    1b5a:	11 23       	and	r17, r17
    1b5c:	09 f4       	brne	.+2      	; 0x1b60 <vfscanf+0xf4>
    1b5e:	8d c0       	rjmp	.+282    	; 0x1c7a <vfscanf+0x20e>
    1b60:	61 2f       	mov	r22, r17
    1b62:	70 e0       	ldi	r23, 0x00	; 0
    1b64:	84 e5       	ldi	r24, 0x54	; 84
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	0e 94 82 10 	call	0x2104	; 0x2104 <strchr_P>
    1b6c:	89 2b       	or	r24, r25
    1b6e:	09 f4       	brne	.+2      	; 0x1b72 <vfscanf+0x106>
    1b70:	84 c0       	rjmp	.+264    	; 0x1c7a <vfscanf+0x20e>
    1b72:	00 fd       	sbrc	r16, 0
    1b74:	07 c0       	rjmp	.+14     	; 0x1b84 <vfscanf+0x118>
    1b76:	f5 01       	movw	r30, r10
    1b78:	80 80       	ld	r8, Z
    1b7a:	91 80       	ldd	r9, Z+1	; 0x01
    1b7c:	c5 01       	movw	r24, r10
    1b7e:	02 96       	adiw	r24, 0x02	; 2
    1b80:	5c 01       	movw	r10, r24
    1b82:	02 c0       	rjmp	.+4      	; 0x1b88 <vfscanf+0x11c>
    1b84:	81 2c       	mov	r8, r1
    1b86:	91 2c       	mov	r9, r1
    1b88:	1e 36       	cpi	r17, 0x6E	; 110
    1b8a:	51 f4       	brne	.+20     	; 0x1ba0 <vfscanf+0x134>
    1b8c:	f6 01       	movw	r30, r12
    1b8e:	46 81       	ldd	r20, Z+6	; 0x06
    1b90:	57 81       	ldd	r21, Z+7	; 0x07
    1b92:	60 e0       	ldi	r22, 0x00	; 0
    1b94:	70 e0       	ldi	r23, 0x00	; 0
    1b96:	20 2f       	mov	r18, r16
    1b98:	c4 01       	movw	r24, r8
    1b9a:	0e 94 9a 0b 	call	0x1734	; 0x1734 <putval>
    1b9e:	73 cf       	rjmp	.-282    	; 0x1a86 <vfscanf+0x1a>
    1ba0:	13 36       	cpi	r17, 0x63	; 99
    1ba2:	a9 f4       	brne	.+42     	; 0x1bce <vfscanf+0x162>
    1ba4:	01 fd       	sbrc	r16, 1
    1ba6:	02 c0       	rjmp	.+4      	; 0x1bac <vfscanf+0x140>
    1ba8:	ff 24       	eor	r15, r15
    1baa:	f3 94       	inc	r15
    1bac:	c6 01       	movw	r24, r12
    1bae:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    1bb2:	97 fd       	sbrc	r25, 7
    1bb4:	60 c0       	rjmp	.+192    	; 0x1c76 <vfscanf+0x20a>
    1bb6:	81 14       	cp	r8, r1
    1bb8:	91 04       	cpc	r9, r1
    1bba:	29 f0       	breq	.+10     	; 0x1bc6 <vfscanf+0x15a>
    1bbc:	f4 01       	movw	r30, r8
    1bbe:	80 83       	st	Z, r24
    1bc0:	c4 01       	movw	r24, r8
    1bc2:	01 96       	adiw	r24, 0x01	; 1
    1bc4:	4c 01       	movw	r8, r24
    1bc6:	fa 94       	dec	r15
    1bc8:	f1 10       	cpse	r15, r1
    1bca:	f0 cf       	rjmp	.-32     	; 0x1bac <vfscanf+0x140>
    1bcc:	50 c0       	rjmp	.+160    	; 0x1c6e <vfscanf+0x202>
    1bce:	1b 35       	cpi	r17, 0x5B	; 91
    1bd0:	59 f4       	brne	.+22     	; 0x1be8 <vfscanf+0x17c>
    1bd2:	9e 01       	movw	r18, r28
    1bd4:	a4 01       	movw	r20, r8
    1bd6:	6f 2d       	mov	r22, r15
    1bd8:	c6 01       	movw	r24, r12
    1bda:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <conv_brk>
    1bde:	ec 01       	movw	r28, r24
    1be0:	89 2b       	or	r24, r25
    1be2:	09 f0       	breq	.+2      	; 0x1be6 <vfscanf+0x17a>
    1be4:	44 c0       	rjmp	.+136    	; 0x1c6e <vfscanf+0x202>
    1be6:	3e c0       	rjmp	.+124    	; 0x1c64 <vfscanf+0x1f8>
    1be8:	c6 01       	movw	r24, r12
    1bea:	0e 94 cd 0b 	call	0x179a	; 0x179a <skip_spaces>
    1bee:	97 fd       	sbrc	r25, 7
    1bf0:	42 c0       	rjmp	.+132    	; 0x1c76 <vfscanf+0x20a>
    1bf2:	1f 36       	cpi	r17, 0x6F	; 111
    1bf4:	61 f1       	breq	.+88     	; 0x1c4e <vfscanf+0x1e2>
    1bf6:	28 f4       	brcc	.+10     	; 0x1c02 <vfscanf+0x196>
    1bf8:	14 36       	cpi	r17, 0x64	; 100
    1bfa:	39 f1       	breq	.+78     	; 0x1c4a <vfscanf+0x1de>
    1bfc:	19 36       	cpi	r17, 0x69	; 105
    1bfe:	51 f1       	breq	.+84     	; 0x1c54 <vfscanf+0x1e8>
    1c00:	28 c0       	rjmp	.+80     	; 0x1c52 <vfscanf+0x1e6>
    1c02:	13 37       	cpi	r17, 0x73	; 115
    1c04:	71 f0       	breq	.+28     	; 0x1c22 <vfscanf+0x1b6>
    1c06:	15 37       	cpi	r17, 0x75	; 117
    1c08:	01 f1       	breq	.+64     	; 0x1c4a <vfscanf+0x1de>
    1c0a:	23 c0       	rjmp	.+70     	; 0x1c52 <vfscanf+0x1e6>
    1c0c:	81 14       	cp	r8, r1
    1c0e:	91 04       	cpc	r9, r1
    1c10:	29 f0       	breq	.+10     	; 0x1c1c <vfscanf+0x1b0>
    1c12:	f4 01       	movw	r30, r8
    1c14:	60 82       	st	Z, r6
    1c16:	c4 01       	movw	r24, r8
    1c18:	01 96       	adiw	r24, 0x01	; 1
    1c1a:	4c 01       	movw	r8, r24
    1c1c:	fa 94       	dec	r15
    1c1e:	ff 20       	and	r15, r15
    1c20:	71 f0       	breq	.+28     	; 0x1c3e <vfscanf+0x1d2>
    1c22:	c6 01       	movw	r24, r12
    1c24:	0e 94 a3 10 	call	0x2146	; 0x2146 <fgetc>
    1c28:	3c 01       	movw	r6, r24
    1c2a:	97 fd       	sbrc	r25, 7
    1c2c:	08 c0       	rjmp	.+16     	; 0x1c3e <vfscanf+0x1d2>
    1c2e:	0e 94 79 10 	call	0x20f2	; 0x20f2 <isspace>
    1c32:	89 2b       	or	r24, r25
    1c34:	59 f3       	breq	.-42     	; 0x1c0c <vfscanf+0x1a0>
    1c36:	b6 01       	movw	r22, r12
    1c38:	c3 01       	movw	r24, r6
    1c3a:	0e 94 1d 11 	call	0x223a	; 0x223a <ungetc>
    1c3e:	81 14       	cp	r8, r1
    1c40:	91 04       	cpc	r9, r1
    1c42:	a9 f0       	breq	.+42     	; 0x1c6e <vfscanf+0x202>
    1c44:	f4 01       	movw	r30, r8
    1c46:	10 82       	st	Z, r1
    1c48:	12 c0       	rjmp	.+36     	; 0x1c6e <vfscanf+0x202>
    1c4a:	00 62       	ori	r16, 0x20	; 32
    1c4c:	03 c0       	rjmp	.+6      	; 0x1c54 <vfscanf+0x1e8>
    1c4e:	00 61       	ori	r16, 0x10	; 16
    1c50:	01 c0       	rjmp	.+2      	; 0x1c54 <vfscanf+0x1e8>
    1c52:	00 64       	ori	r16, 0x40	; 64
    1c54:	20 2f       	mov	r18, r16
    1c56:	a4 01       	movw	r20, r8
    1c58:	6f 2d       	mov	r22, r15
    1c5a:	c6 01       	movw	r24, r12
    1c5c:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <conv_int>
    1c60:	81 11       	cpse	r24, r1
    1c62:	05 c0       	rjmp	.+10     	; 0x1c6e <vfscanf+0x202>
    1c64:	f6 01       	movw	r30, r12
    1c66:	83 81       	ldd	r24, Z+3	; 0x03
    1c68:	80 73       	andi	r24, 0x30	; 48
    1c6a:	29 f4       	brne	.+10     	; 0x1c76 <vfscanf+0x20a>
    1c6c:	06 c0       	rjmp	.+12     	; 0x1c7a <vfscanf+0x20e>
    1c6e:	00 fd       	sbrc	r16, 0
    1c70:	0a cf       	rjmp	.-492    	; 0x1a86 <vfscanf+0x1a>
    1c72:	53 94       	inc	r5
    1c74:	08 cf       	rjmp	.-496    	; 0x1a86 <vfscanf+0x1a>
    1c76:	55 20       	and	r5, r5
    1c78:	19 f0       	breq	.+6      	; 0x1c80 <vfscanf+0x214>
    1c7a:	85 2d       	mov	r24, r5
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	02 c0       	rjmp	.+4      	; 0x1c84 <vfscanf+0x218>
    1c80:	8f ef       	ldi	r24, 0xFF	; 255
    1c82:	9f ef       	ldi	r25, 0xFF	; 255
    1c84:	cd b7       	in	r28, 0x3d	; 61
    1c86:	de b7       	in	r29, 0x3e	; 62
    1c88:	ef e0       	ldi	r30, 0x0F	; 15
    1c8a:	0c 94 b6 11 	jmp	0x236c	; 0x236c <__epilogue_restores__+0x6>

00001c8e <dtoa_prf>:
    1c8e:	a9 e0       	ldi	r26, 0x09	; 9
    1c90:	b0 e0       	ldi	r27, 0x00	; 0
    1c92:	ed e4       	ldi	r30, 0x4D	; 77
    1c94:	fe e0       	ldi	r31, 0x0E	; 14
    1c96:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__+0xc>
    1c9a:	6a 01       	movw	r12, r20
    1c9c:	12 2f       	mov	r17, r18
    1c9e:	b0 2e       	mov	r11, r16
    1ca0:	2b e3       	ldi	r18, 0x3B	; 59
    1ca2:	20 17       	cp	r18, r16
    1ca4:	20 f0       	brcs	.+8      	; 0x1cae <dtoa_prf+0x20>
    1ca6:	ff 24       	eor	r15, r15
    1ca8:	f3 94       	inc	r15
    1caa:	f0 0e       	add	r15, r16
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <dtoa_prf+0x24>
    1cae:	2c e3       	ldi	r18, 0x3C	; 60
    1cb0:	f2 2e       	mov	r15, r18
    1cb2:	0f 2d       	mov	r16, r15
    1cb4:	27 e0       	ldi	r18, 0x07	; 7
    1cb6:	ae 01       	movw	r20, r28
    1cb8:	4f 5f       	subi	r20, 0xFF	; 255
    1cba:	5f 4f       	sbci	r21, 0xFF	; 255
    1cbc:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__ftoa_engine>
    1cc0:	bc 01       	movw	r22, r24
    1cc2:	49 81       	ldd	r20, Y+1	; 0x01
    1cc4:	84 2f       	mov	r24, r20
    1cc6:	89 70       	andi	r24, 0x09	; 9
    1cc8:	81 30       	cpi	r24, 0x01	; 1
    1cca:	31 f0       	breq	.+12     	; 0x1cd8 <dtoa_prf+0x4a>
    1ccc:	e1 fc       	sbrc	r14, 1
    1cce:	06 c0       	rjmp	.+12     	; 0x1cdc <dtoa_prf+0x4e>
    1cd0:	e0 fe       	sbrs	r14, 0
    1cd2:	06 c0       	rjmp	.+12     	; 0x1ce0 <dtoa_prf+0x52>
    1cd4:	90 e2       	ldi	r25, 0x20	; 32
    1cd6:	05 c0       	rjmp	.+10     	; 0x1ce2 <dtoa_prf+0x54>
    1cd8:	9d e2       	ldi	r25, 0x2D	; 45
    1cda:	03 c0       	rjmp	.+6      	; 0x1ce2 <dtoa_prf+0x54>
    1cdc:	9b e2       	ldi	r25, 0x2B	; 43
    1cde:	01 c0       	rjmp	.+2      	; 0x1ce2 <dtoa_prf+0x54>
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	5e 2d       	mov	r21, r14
    1ce4:	50 71       	andi	r21, 0x10	; 16
    1ce6:	43 ff       	sbrs	r20, 3
    1ce8:	3c c0       	rjmp	.+120    	; 0x1d62 <dtoa_prf+0xd4>
    1cea:	91 11       	cpse	r25, r1
    1cec:	02 c0       	rjmp	.+4      	; 0x1cf2 <dtoa_prf+0x64>
    1cee:	83 e0       	ldi	r24, 0x03	; 3
    1cf0:	01 c0       	rjmp	.+2      	; 0x1cf4 <dtoa_prf+0x66>
    1cf2:	84 e0       	ldi	r24, 0x04	; 4
    1cf4:	81 17       	cp	r24, r17
    1cf6:	18 f4       	brcc	.+6      	; 0x1cfe <dtoa_prf+0x70>
    1cf8:	21 2f       	mov	r18, r17
    1cfa:	28 1b       	sub	r18, r24
    1cfc:	01 c0       	rjmp	.+2      	; 0x1d00 <dtoa_prf+0x72>
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	51 11       	cpse	r21, r1
    1d02:	0b c0       	rjmp	.+22     	; 0x1d1a <dtoa_prf+0x8c>
    1d04:	f6 01       	movw	r30, r12
    1d06:	82 2f       	mov	r24, r18
    1d08:	30 e2       	ldi	r19, 0x20	; 32
    1d0a:	88 23       	and	r24, r24
    1d0c:	19 f0       	breq	.+6      	; 0x1d14 <dtoa_prf+0x86>
    1d0e:	31 93       	st	Z+, r19
    1d10:	81 50       	subi	r24, 0x01	; 1
    1d12:	fb cf       	rjmp	.-10     	; 0x1d0a <dtoa_prf+0x7c>
    1d14:	c2 0e       	add	r12, r18
    1d16:	d1 1c       	adc	r13, r1
    1d18:	20 e0       	ldi	r18, 0x00	; 0
    1d1a:	99 23       	and	r25, r25
    1d1c:	29 f0       	breq	.+10     	; 0x1d28 <dtoa_prf+0x9a>
    1d1e:	d6 01       	movw	r26, r12
    1d20:	9c 93       	st	X, r25
    1d22:	f6 01       	movw	r30, r12
    1d24:	31 96       	adiw	r30, 0x01	; 1
    1d26:	6f 01       	movw	r12, r30
    1d28:	c6 01       	movw	r24, r12
    1d2a:	03 96       	adiw	r24, 0x03	; 3
    1d2c:	e2 fe       	sbrs	r14, 2
    1d2e:	0a c0       	rjmp	.+20     	; 0x1d44 <dtoa_prf+0xb6>
    1d30:	3e e4       	ldi	r19, 0x4E	; 78
    1d32:	d6 01       	movw	r26, r12
    1d34:	3c 93       	st	X, r19
    1d36:	41 e4       	ldi	r20, 0x41	; 65
    1d38:	11 96       	adiw	r26, 0x01	; 1
    1d3a:	4c 93       	st	X, r20
    1d3c:	11 97       	sbiw	r26, 0x01	; 1
    1d3e:	12 96       	adiw	r26, 0x02	; 2
    1d40:	3c 93       	st	X, r19
    1d42:	06 c0       	rjmp	.+12     	; 0x1d50 <dtoa_prf+0xc2>
    1d44:	3e e6       	ldi	r19, 0x6E	; 110
    1d46:	f6 01       	movw	r30, r12
    1d48:	30 83       	st	Z, r19
    1d4a:	41 e6       	ldi	r20, 0x61	; 97
    1d4c:	41 83       	std	Z+1, r20	; 0x01
    1d4e:	32 83       	std	Z+2, r19	; 0x02
    1d50:	fc 01       	movw	r30, r24
    1d52:	32 2f       	mov	r19, r18
    1d54:	40 e2       	ldi	r20, 0x20	; 32
    1d56:	33 23       	and	r19, r19
    1d58:	09 f4       	brne	.+2      	; 0x1d5c <dtoa_prf+0xce>
    1d5a:	42 c0       	rjmp	.+132    	; 0x1de0 <dtoa_prf+0x152>
    1d5c:	41 93       	st	Z+, r20
    1d5e:	31 50       	subi	r19, 0x01	; 1
    1d60:	fa cf       	rjmp	.-12     	; 0x1d56 <dtoa_prf+0xc8>
    1d62:	42 ff       	sbrs	r20, 2
    1d64:	44 c0       	rjmp	.+136    	; 0x1dee <dtoa_prf+0x160>
    1d66:	91 11       	cpse	r25, r1
    1d68:	02 c0       	rjmp	.+4      	; 0x1d6e <dtoa_prf+0xe0>
    1d6a:	83 e0       	ldi	r24, 0x03	; 3
    1d6c:	01 c0       	rjmp	.+2      	; 0x1d70 <dtoa_prf+0xe2>
    1d6e:	84 e0       	ldi	r24, 0x04	; 4
    1d70:	81 17       	cp	r24, r17
    1d72:	18 f4       	brcc	.+6      	; 0x1d7a <dtoa_prf+0xec>
    1d74:	21 2f       	mov	r18, r17
    1d76:	28 1b       	sub	r18, r24
    1d78:	01 c0       	rjmp	.+2      	; 0x1d7c <dtoa_prf+0xee>
    1d7a:	20 e0       	ldi	r18, 0x00	; 0
    1d7c:	51 11       	cpse	r21, r1
    1d7e:	0b c0       	rjmp	.+22     	; 0x1d96 <dtoa_prf+0x108>
    1d80:	f6 01       	movw	r30, r12
    1d82:	82 2f       	mov	r24, r18
    1d84:	30 e2       	ldi	r19, 0x20	; 32
    1d86:	88 23       	and	r24, r24
    1d88:	19 f0       	breq	.+6      	; 0x1d90 <dtoa_prf+0x102>
    1d8a:	31 93       	st	Z+, r19
    1d8c:	81 50       	subi	r24, 0x01	; 1
    1d8e:	fb cf       	rjmp	.-10     	; 0x1d86 <dtoa_prf+0xf8>
    1d90:	c2 0e       	add	r12, r18
    1d92:	d1 1c       	adc	r13, r1
    1d94:	20 e0       	ldi	r18, 0x00	; 0
    1d96:	99 23       	and	r25, r25
    1d98:	29 f0       	breq	.+10     	; 0x1da4 <dtoa_prf+0x116>
    1d9a:	d6 01       	movw	r26, r12
    1d9c:	9c 93       	st	X, r25
    1d9e:	f6 01       	movw	r30, r12
    1da0:	31 96       	adiw	r30, 0x01	; 1
    1da2:	6f 01       	movw	r12, r30
    1da4:	c6 01       	movw	r24, r12
    1da6:	03 96       	adiw	r24, 0x03	; 3
    1da8:	e2 fe       	sbrs	r14, 2
    1daa:	0b c0       	rjmp	.+22     	; 0x1dc2 <dtoa_prf+0x134>
    1dac:	39 e4       	ldi	r19, 0x49	; 73
    1dae:	d6 01       	movw	r26, r12
    1db0:	3c 93       	st	X, r19
    1db2:	3e e4       	ldi	r19, 0x4E	; 78
    1db4:	11 96       	adiw	r26, 0x01	; 1
    1db6:	3c 93       	st	X, r19
    1db8:	11 97       	sbiw	r26, 0x01	; 1
    1dba:	36 e4       	ldi	r19, 0x46	; 70
    1dbc:	12 96       	adiw	r26, 0x02	; 2
    1dbe:	3c 93       	st	X, r19
    1dc0:	07 c0       	rjmp	.+14     	; 0x1dd0 <dtoa_prf+0x142>
    1dc2:	39 e6       	ldi	r19, 0x69	; 105
    1dc4:	f6 01       	movw	r30, r12
    1dc6:	30 83       	st	Z, r19
    1dc8:	3e e6       	ldi	r19, 0x6E	; 110
    1dca:	31 83       	std	Z+1, r19	; 0x01
    1dcc:	36 e6       	ldi	r19, 0x66	; 102
    1dce:	32 83       	std	Z+2, r19	; 0x02
    1dd0:	fc 01       	movw	r30, r24
    1dd2:	32 2f       	mov	r19, r18
    1dd4:	40 e2       	ldi	r20, 0x20	; 32
    1dd6:	33 23       	and	r19, r19
    1dd8:	19 f0       	breq	.+6      	; 0x1de0 <dtoa_prf+0x152>
    1dda:	41 93       	st	Z+, r20
    1ddc:	31 50       	subi	r19, 0x01	; 1
    1dde:	fb cf       	rjmp	.-10     	; 0x1dd6 <dtoa_prf+0x148>
    1de0:	fc 01       	movw	r30, r24
    1de2:	e2 0f       	add	r30, r18
    1de4:	f1 1d       	adc	r31, r1
    1de6:	10 82       	st	Z, r1
    1de8:	8e ef       	ldi	r24, 0xFE	; 254
    1dea:	9f ef       	ldi	r25, 0xFF	; 255
    1dec:	a6 c0       	rjmp	.+332    	; 0x1f3a <dtoa_prf+0x2ac>
    1dee:	21 e0       	ldi	r18, 0x01	; 1
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	91 11       	cpse	r25, r1
    1df4:	02 c0       	rjmp	.+4      	; 0x1dfa <dtoa_prf+0x16c>
    1df6:	20 e0       	ldi	r18, 0x00	; 0
    1df8:	30 e0       	ldi	r19, 0x00	; 0
    1dfa:	16 16       	cp	r1, r22
    1dfc:	17 06       	cpc	r1, r23
    1dfe:	1c f4       	brge	.+6      	; 0x1e06 <dtoa_prf+0x178>
    1e00:	fb 01       	movw	r30, r22
    1e02:	31 96       	adiw	r30, 0x01	; 1
    1e04:	02 c0       	rjmp	.+4      	; 0x1e0a <dtoa_prf+0x17c>
    1e06:	e1 e0       	ldi	r30, 0x01	; 1
    1e08:	f0 e0       	ldi	r31, 0x00	; 0
    1e0a:	2e 0f       	add	r18, r30
    1e0c:	3f 1f       	adc	r19, r31
    1e0e:	bb 20       	and	r11, r11
    1e10:	21 f0       	breq	.+8      	; 0x1e1a <dtoa_prf+0x18c>
    1e12:	eb 2d       	mov	r30, r11
    1e14:	f0 e0       	ldi	r31, 0x00	; 0
    1e16:	31 96       	adiw	r30, 0x01	; 1
    1e18:	02 c0       	rjmp	.+4      	; 0x1e1e <dtoa_prf+0x190>
    1e1a:	e0 e0       	ldi	r30, 0x00	; 0
    1e1c:	f0 e0       	ldi	r31, 0x00	; 0
    1e1e:	2e 0f       	add	r18, r30
    1e20:	3f 1f       	adc	r19, r31
    1e22:	e1 2f       	mov	r30, r17
    1e24:	f0 e0       	ldi	r31, 0x00	; 0
    1e26:	2e 17       	cp	r18, r30
    1e28:	3f 07       	cpc	r19, r31
    1e2a:	1c f4       	brge	.+6      	; 0x1e32 <dtoa_prf+0x1a4>
    1e2c:	12 1b       	sub	r17, r18
    1e2e:	21 2f       	mov	r18, r17
    1e30:	01 c0       	rjmp	.+2      	; 0x1e34 <dtoa_prf+0x1a6>
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	8e 2d       	mov	r24, r14
    1e36:	88 71       	andi	r24, 0x18	; 24
    1e38:	59 f4       	brne	.+22     	; 0x1e50 <dtoa_prf+0x1c2>
    1e3a:	f6 01       	movw	r30, r12
    1e3c:	82 2f       	mov	r24, r18
    1e3e:	30 e2       	ldi	r19, 0x20	; 32
    1e40:	88 23       	and	r24, r24
    1e42:	19 f0       	breq	.+6      	; 0x1e4a <dtoa_prf+0x1bc>
    1e44:	31 93       	st	Z+, r19
    1e46:	81 50       	subi	r24, 0x01	; 1
    1e48:	fb cf       	rjmp	.-10     	; 0x1e40 <dtoa_prf+0x1b2>
    1e4a:	c2 0e       	add	r12, r18
    1e4c:	d1 1c       	adc	r13, r1
    1e4e:	20 e0       	ldi	r18, 0x00	; 0
    1e50:	99 23       	and	r25, r25
    1e52:	29 f0       	breq	.+10     	; 0x1e5e <dtoa_prf+0x1d0>
    1e54:	d6 01       	movw	r26, r12
    1e56:	9c 93       	st	X, r25
    1e58:	f6 01       	movw	r30, r12
    1e5a:	31 96       	adiw	r30, 0x01	; 1
    1e5c:	6f 01       	movw	r12, r30
    1e5e:	51 11       	cpse	r21, r1
    1e60:	0b c0       	rjmp	.+22     	; 0x1e78 <dtoa_prf+0x1ea>
    1e62:	f6 01       	movw	r30, r12
    1e64:	82 2f       	mov	r24, r18
    1e66:	90 e3       	ldi	r25, 0x30	; 48
    1e68:	88 23       	and	r24, r24
    1e6a:	19 f0       	breq	.+6      	; 0x1e72 <dtoa_prf+0x1e4>
    1e6c:	91 93       	st	Z+, r25
    1e6e:	81 50       	subi	r24, 0x01	; 1
    1e70:	fb cf       	rjmp	.-10     	; 0x1e68 <dtoa_prf+0x1da>
    1e72:	c2 0e       	add	r12, r18
    1e74:	d1 1c       	adc	r13, r1
    1e76:	20 e0       	ldi	r18, 0x00	; 0
    1e78:	0f 2d       	mov	r16, r15
    1e7a:	06 0f       	add	r16, r22
    1e7c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e7e:	34 2f       	mov	r19, r20
    1e80:	30 71       	andi	r19, 0x10	; 16
    1e82:	44 ff       	sbrs	r20, 4
    1e84:	03 c0       	rjmp	.+6      	; 0x1e8c <dtoa_prf+0x1fe>
    1e86:	91 33       	cpi	r25, 0x31	; 49
    1e88:	09 f4       	brne	.+2      	; 0x1e8c <dtoa_prf+0x1fe>
    1e8a:	01 50       	subi	r16, 0x01	; 1
    1e8c:	10 16       	cp	r1, r16
    1e8e:	24 f4       	brge	.+8      	; 0x1e98 <dtoa_prf+0x20a>
    1e90:	09 30       	cpi	r16, 0x09	; 9
    1e92:	18 f0       	brcs	.+6      	; 0x1e9a <dtoa_prf+0x20c>
    1e94:	08 e0       	ldi	r16, 0x08	; 8
    1e96:	01 c0       	rjmp	.+2      	; 0x1e9a <dtoa_prf+0x20c>
    1e98:	01 e0       	ldi	r16, 0x01	; 1
    1e9a:	ab 01       	movw	r20, r22
    1e9c:	77 ff       	sbrs	r23, 7
    1e9e:	02 c0       	rjmp	.+4      	; 0x1ea4 <dtoa_prf+0x216>
    1ea0:	40 e0       	ldi	r20, 0x00	; 0
    1ea2:	50 e0       	ldi	r21, 0x00	; 0
    1ea4:	fb 01       	movw	r30, r22
    1ea6:	e4 1b       	sub	r30, r20
    1ea8:	f5 0b       	sbc	r31, r21
    1eaa:	a1 e0       	ldi	r26, 0x01	; 1
    1eac:	b0 e0       	ldi	r27, 0x00	; 0
    1eae:	ac 0f       	add	r26, r28
    1eb0:	bd 1f       	adc	r27, r29
    1eb2:	ea 0f       	add	r30, r26
    1eb4:	fb 1f       	adc	r31, r27
    1eb6:	8e e2       	ldi	r24, 0x2E	; 46
    1eb8:	a8 2e       	mov	r10, r24
    1eba:	4b 01       	movw	r8, r22
    1ebc:	80 1a       	sub	r8, r16
    1ebe:	91 08       	sbc	r9, r1
    1ec0:	0b 2d       	mov	r16, r11
    1ec2:	10 e0       	ldi	r17, 0x00	; 0
    1ec4:	11 95       	neg	r17
    1ec6:	01 95       	neg	r16
    1ec8:	11 09       	sbc	r17, r1
    1eca:	4f 3f       	cpi	r20, 0xFF	; 255
    1ecc:	bf ef       	ldi	r27, 0xFF	; 255
    1ece:	5b 07       	cpc	r21, r27
    1ed0:	21 f4       	brne	.+8      	; 0x1eda <dtoa_prf+0x24c>
    1ed2:	d6 01       	movw	r26, r12
    1ed4:	ac 92       	st	X, r10
    1ed6:	11 96       	adiw	r26, 0x01	; 1
    1ed8:	6d 01       	movw	r12, r26
    1eda:	64 17       	cp	r22, r20
    1edc:	75 07       	cpc	r23, r21
    1ede:	2c f0       	brlt	.+10     	; 0x1eea <dtoa_prf+0x25c>
    1ee0:	84 16       	cp	r8, r20
    1ee2:	95 06       	cpc	r9, r21
    1ee4:	14 f4       	brge	.+4      	; 0x1eea <dtoa_prf+0x25c>
    1ee6:	81 81       	ldd	r24, Z+1	; 0x01
    1ee8:	01 c0       	rjmp	.+2      	; 0x1eec <dtoa_prf+0x25e>
    1eea:	80 e3       	ldi	r24, 0x30	; 48
    1eec:	41 50       	subi	r20, 0x01	; 1
    1eee:	51 09       	sbc	r21, r1
    1ef0:	31 96       	adiw	r30, 0x01	; 1
    1ef2:	d6 01       	movw	r26, r12
    1ef4:	11 96       	adiw	r26, 0x01	; 1
    1ef6:	7d 01       	movw	r14, r26
    1ef8:	40 17       	cp	r20, r16
    1efa:	51 07       	cpc	r21, r17
    1efc:	24 f0       	brlt	.+8      	; 0x1f06 <dtoa_prf+0x278>
    1efe:	d6 01       	movw	r26, r12
    1f00:	8c 93       	st	X, r24
    1f02:	67 01       	movw	r12, r14
    1f04:	e2 cf       	rjmp	.-60     	; 0x1eca <dtoa_prf+0x23c>
    1f06:	64 17       	cp	r22, r20
    1f08:	75 07       	cpc	r23, r21
    1f0a:	39 f4       	brne	.+14     	; 0x1f1a <dtoa_prf+0x28c>
    1f0c:	96 33       	cpi	r25, 0x36	; 54
    1f0e:	20 f4       	brcc	.+8      	; 0x1f18 <dtoa_prf+0x28a>
    1f10:	95 33       	cpi	r25, 0x35	; 53
    1f12:	19 f4       	brne	.+6      	; 0x1f1a <dtoa_prf+0x28c>
    1f14:	31 11       	cpse	r19, r1
    1f16:	01 c0       	rjmp	.+2      	; 0x1f1a <dtoa_prf+0x28c>
    1f18:	81 e3       	ldi	r24, 0x31	; 49
    1f1a:	f6 01       	movw	r30, r12
    1f1c:	80 83       	st	Z, r24
    1f1e:	f7 01       	movw	r30, r14
    1f20:	82 2f       	mov	r24, r18
    1f22:	90 e2       	ldi	r25, 0x20	; 32
    1f24:	88 23       	and	r24, r24
    1f26:	19 f0       	breq	.+6      	; 0x1f2e <dtoa_prf+0x2a0>
    1f28:	91 93       	st	Z+, r25
    1f2a:	81 50       	subi	r24, 0x01	; 1
    1f2c:	fb cf       	rjmp	.-10     	; 0x1f24 <dtoa_prf+0x296>
    1f2e:	f7 01       	movw	r30, r14
    1f30:	e2 0f       	add	r30, r18
    1f32:	f1 1d       	adc	r31, r1
    1f34:	10 82       	st	Z, r1
    1f36:	80 e0       	ldi	r24, 0x00	; 0
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	29 96       	adiw	r28, 0x09	; 9
    1f3c:	ec e0       	ldi	r30, 0x0C	; 12
    1f3e:	0c 94 b9 11 	jmp	0x2372	; 0x2372 <__epilogue_restores__+0xc>

00001f42 <__ftoa_engine>:
    1f42:	28 30       	cpi	r18, 0x08	; 8
    1f44:	08 f0       	brcs	.+2      	; 0x1f48 <__ftoa_engine+0x6>
    1f46:	27 e0       	ldi	r18, 0x07	; 7
    1f48:	33 27       	eor	r19, r19
    1f4a:	da 01       	movw	r26, r20
    1f4c:	99 0f       	add	r25, r25
    1f4e:	31 1d       	adc	r19, r1
    1f50:	87 fd       	sbrc	r24, 7
    1f52:	91 60       	ori	r25, 0x01	; 1
    1f54:	00 96       	adiw	r24, 0x00	; 0
    1f56:	61 05       	cpc	r22, r1
    1f58:	71 05       	cpc	r23, r1
    1f5a:	39 f4       	brne	.+14     	; 0x1f6a <__ftoa_engine+0x28>
    1f5c:	32 60       	ori	r19, 0x02	; 2
    1f5e:	2e 5f       	subi	r18, 0xFE	; 254
    1f60:	3d 93       	st	X+, r19
    1f62:	30 e3       	ldi	r19, 0x30	; 48
    1f64:	2a 95       	dec	r18
    1f66:	e1 f7       	brne	.-8      	; 0x1f60 <__ftoa_engine+0x1e>
    1f68:	08 95       	ret
    1f6a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f6c:	30 f0       	brcs	.+12     	; 0x1f7a <__ftoa_engine+0x38>
    1f6e:	80 38       	cpi	r24, 0x80	; 128
    1f70:	71 05       	cpc	r23, r1
    1f72:	61 05       	cpc	r22, r1
    1f74:	09 f0       	breq	.+2      	; 0x1f78 <__ftoa_engine+0x36>
    1f76:	3c 5f       	subi	r19, 0xFC	; 252
    1f78:	3c 5f       	subi	r19, 0xFC	; 252
    1f7a:	3d 93       	st	X+, r19
    1f7c:	91 30       	cpi	r25, 0x01	; 1
    1f7e:	08 f0       	brcs	.+2      	; 0x1f82 <__ftoa_engine+0x40>
    1f80:	80 68       	ori	r24, 0x80	; 128
    1f82:	91 1d       	adc	r25, r1
    1f84:	df 93       	push	r29
    1f86:	cf 93       	push	r28
    1f88:	1f 93       	push	r17
    1f8a:	0f 93       	push	r16
    1f8c:	ff 92       	push	r15
    1f8e:	ef 92       	push	r14
    1f90:	19 2f       	mov	r17, r25
    1f92:	98 7f       	andi	r25, 0xF8	; 248
    1f94:	96 95       	lsr	r25
    1f96:	e9 2f       	mov	r30, r25
    1f98:	96 95       	lsr	r25
    1f9a:	96 95       	lsr	r25
    1f9c:	e9 0f       	add	r30, r25
    1f9e:	ff 27       	eor	r31, r31
    1fa0:	e6 54       	subi	r30, 0x46	; 70
    1fa2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa4:	99 27       	eor	r25, r25
    1fa6:	33 27       	eor	r19, r19
    1fa8:	ee 24       	eor	r14, r14
    1faa:	ff 24       	eor	r15, r15
    1fac:	a7 01       	movw	r20, r14
    1fae:	e7 01       	movw	r28, r14
    1fb0:	05 90       	lpm	r0, Z+
    1fb2:	08 94       	sec
    1fb4:	07 94       	ror	r0
    1fb6:	28 f4       	brcc	.+10     	; 0x1fc2 <__ftoa_engine+0x80>
    1fb8:	36 0f       	add	r19, r22
    1fba:	e7 1e       	adc	r14, r23
    1fbc:	f8 1e       	adc	r15, r24
    1fbe:	49 1f       	adc	r20, r25
    1fc0:	51 1d       	adc	r21, r1
    1fc2:	66 0f       	add	r22, r22
    1fc4:	77 1f       	adc	r23, r23
    1fc6:	88 1f       	adc	r24, r24
    1fc8:	99 1f       	adc	r25, r25
    1fca:	06 94       	lsr	r0
    1fcc:	a1 f7       	brne	.-24     	; 0x1fb6 <__ftoa_engine+0x74>
    1fce:	05 90       	lpm	r0, Z+
    1fd0:	07 94       	ror	r0
    1fd2:	28 f4       	brcc	.+10     	; 0x1fde <__ftoa_engine+0x9c>
    1fd4:	e7 0e       	add	r14, r23
    1fd6:	f8 1e       	adc	r15, r24
    1fd8:	49 1f       	adc	r20, r25
    1fda:	56 1f       	adc	r21, r22
    1fdc:	c1 1d       	adc	r28, r1
    1fde:	77 0f       	add	r23, r23
    1fe0:	88 1f       	adc	r24, r24
    1fe2:	99 1f       	adc	r25, r25
    1fe4:	66 1f       	adc	r22, r22
    1fe6:	06 94       	lsr	r0
    1fe8:	a1 f7       	brne	.-24     	; 0x1fd2 <__ftoa_engine+0x90>
    1fea:	05 90       	lpm	r0, Z+
    1fec:	07 94       	ror	r0
    1fee:	28 f4       	brcc	.+10     	; 0x1ffa <__ftoa_engine+0xb8>
    1ff0:	f8 0e       	add	r15, r24
    1ff2:	49 1f       	adc	r20, r25
    1ff4:	56 1f       	adc	r21, r22
    1ff6:	c7 1f       	adc	r28, r23
    1ff8:	d1 1d       	adc	r29, r1
    1ffa:	88 0f       	add	r24, r24
    1ffc:	99 1f       	adc	r25, r25
    1ffe:	66 1f       	adc	r22, r22
    2000:	77 1f       	adc	r23, r23
    2002:	06 94       	lsr	r0
    2004:	a1 f7       	brne	.-24     	; 0x1fee <__ftoa_engine+0xac>
    2006:	05 90       	lpm	r0, Z+
    2008:	07 94       	ror	r0
    200a:	20 f4       	brcc	.+8      	; 0x2014 <__ftoa_engine+0xd2>
    200c:	49 0f       	add	r20, r25
    200e:	56 1f       	adc	r21, r22
    2010:	c7 1f       	adc	r28, r23
    2012:	d8 1f       	adc	r29, r24
    2014:	99 0f       	add	r25, r25
    2016:	66 1f       	adc	r22, r22
    2018:	77 1f       	adc	r23, r23
    201a:	88 1f       	adc	r24, r24
    201c:	06 94       	lsr	r0
    201e:	a9 f7       	brne	.-22     	; 0x200a <__ftoa_engine+0xc8>
    2020:	84 91       	lpm	r24, Z
    2022:	10 95       	com	r17
    2024:	17 70       	andi	r17, 0x07	; 7
    2026:	41 f0       	breq	.+16     	; 0x2038 <__ftoa_engine+0xf6>
    2028:	d6 95       	lsr	r29
    202a:	c7 95       	ror	r28
    202c:	57 95       	ror	r21
    202e:	47 95       	ror	r20
    2030:	f7 94       	ror	r15
    2032:	e7 94       	ror	r14
    2034:	1a 95       	dec	r17
    2036:	c1 f7       	brne	.-16     	; 0x2028 <__ftoa_engine+0xe6>
    2038:	e0 e6       	ldi	r30, 0x60	; 96
    203a:	f0 e0       	ldi	r31, 0x00	; 0
    203c:	68 94       	set
    203e:	15 90       	lpm	r1, Z+
    2040:	15 91       	lpm	r17, Z+
    2042:	35 91       	lpm	r19, Z+
    2044:	65 91       	lpm	r22, Z+
    2046:	95 91       	lpm	r25, Z+
    2048:	05 90       	lpm	r0, Z+
    204a:	7f e2       	ldi	r23, 0x2F	; 47
    204c:	73 95       	inc	r23
    204e:	e1 18       	sub	r14, r1
    2050:	f1 0a       	sbc	r15, r17
    2052:	43 0b       	sbc	r20, r19
    2054:	56 0b       	sbc	r21, r22
    2056:	c9 0b       	sbc	r28, r25
    2058:	d0 09       	sbc	r29, r0
    205a:	c0 f7       	brcc	.-16     	; 0x204c <__ftoa_engine+0x10a>
    205c:	e1 0c       	add	r14, r1
    205e:	f1 1e       	adc	r15, r17
    2060:	43 1f       	adc	r20, r19
    2062:	56 1f       	adc	r21, r22
    2064:	c9 1f       	adc	r28, r25
    2066:	d0 1d       	adc	r29, r0
    2068:	7e f4       	brtc	.+30     	; 0x2088 <__ftoa_engine+0x146>
    206a:	70 33       	cpi	r23, 0x30	; 48
    206c:	11 f4       	brne	.+4      	; 0x2072 <__ftoa_engine+0x130>
    206e:	8a 95       	dec	r24
    2070:	e6 cf       	rjmp	.-52     	; 0x203e <__ftoa_engine+0xfc>
    2072:	e8 94       	clt
    2074:	01 50       	subi	r16, 0x01	; 1
    2076:	30 f0       	brcs	.+12     	; 0x2084 <__ftoa_engine+0x142>
    2078:	08 0f       	add	r16, r24
    207a:	0a f4       	brpl	.+2      	; 0x207e <__ftoa_engine+0x13c>
    207c:	00 27       	eor	r16, r16
    207e:	02 17       	cp	r16, r18
    2080:	08 f4       	brcc	.+2      	; 0x2084 <__ftoa_engine+0x142>
    2082:	20 2f       	mov	r18, r16
    2084:	23 95       	inc	r18
    2086:	02 2f       	mov	r16, r18
    2088:	7a 33       	cpi	r23, 0x3A	; 58
    208a:	28 f0       	brcs	.+10     	; 0x2096 <__ftoa_engine+0x154>
    208c:	79 e3       	ldi	r23, 0x39	; 57
    208e:	7d 93       	st	X+, r23
    2090:	2a 95       	dec	r18
    2092:	e9 f7       	brne	.-6      	; 0x208e <__ftoa_engine+0x14c>
    2094:	10 c0       	rjmp	.+32     	; 0x20b6 <__ftoa_engine+0x174>
    2096:	7d 93       	st	X+, r23
    2098:	2a 95       	dec	r18
    209a:	89 f6       	brne	.-94     	; 0x203e <__ftoa_engine+0xfc>
    209c:	06 94       	lsr	r0
    209e:	97 95       	ror	r25
    20a0:	67 95       	ror	r22
    20a2:	37 95       	ror	r19
    20a4:	17 95       	ror	r17
    20a6:	17 94       	ror	r1
    20a8:	e1 18       	sub	r14, r1
    20aa:	f1 0a       	sbc	r15, r17
    20ac:	43 0b       	sbc	r20, r19
    20ae:	56 0b       	sbc	r21, r22
    20b0:	c9 0b       	sbc	r28, r25
    20b2:	d0 09       	sbc	r29, r0
    20b4:	98 f0       	brcs	.+38     	; 0x20dc <__ftoa_engine+0x19a>
    20b6:	23 95       	inc	r18
    20b8:	7e 91       	ld	r23, -X
    20ba:	73 95       	inc	r23
    20bc:	7a 33       	cpi	r23, 0x3A	; 58
    20be:	08 f0       	brcs	.+2      	; 0x20c2 <__ftoa_engine+0x180>
    20c0:	70 e3       	ldi	r23, 0x30	; 48
    20c2:	7c 93       	st	X, r23
    20c4:	20 13       	cpse	r18, r16
    20c6:	b8 f7       	brcc	.-18     	; 0x20b6 <__ftoa_engine+0x174>
    20c8:	7e 91       	ld	r23, -X
    20ca:	70 61       	ori	r23, 0x10	; 16
    20cc:	7d 93       	st	X+, r23
    20ce:	30 f0       	brcs	.+12     	; 0x20dc <__ftoa_engine+0x19a>
    20d0:	83 95       	inc	r24
    20d2:	71 e3       	ldi	r23, 0x31	; 49
    20d4:	7d 93       	st	X+, r23
    20d6:	70 e3       	ldi	r23, 0x30	; 48
    20d8:	2a 95       	dec	r18
    20da:	e1 f7       	brne	.-8      	; 0x20d4 <__ftoa_engine+0x192>
    20dc:	11 24       	eor	r1, r1
    20de:	ef 90       	pop	r14
    20e0:	ff 90       	pop	r15
    20e2:	0f 91       	pop	r16
    20e4:	1f 91       	pop	r17
    20e6:	cf 91       	pop	r28
    20e8:	df 91       	pop	r29
    20ea:	99 27       	eor	r25, r25
    20ec:	87 fd       	sbrc	r24, 7
    20ee:	90 95       	com	r25
    20f0:	08 95       	ret

000020f2 <isspace>:
    20f2:	91 11       	cpse	r25, r1
    20f4:	0c 94 94 11 	jmp	0x2328	; 0x2328 <__ctype_isfalse>
    20f8:	80 32       	cpi	r24, 0x20	; 32
    20fa:	19 f0       	breq	.+6      	; 0x2102 <isspace+0x10>
    20fc:	89 50       	subi	r24, 0x09	; 9
    20fe:	85 50       	subi	r24, 0x05	; 5
    2100:	c8 f7       	brcc	.-14     	; 0x20f4 <isspace+0x2>
    2102:	08 95       	ret

00002104 <strchr_P>:
    2104:	fc 01       	movw	r30, r24
    2106:	05 90       	lpm	r0, Z+
    2108:	06 16       	cp	r0, r22
    210a:	21 f0       	breq	.+8      	; 0x2114 <strchr_P+0x10>
    210c:	00 20       	and	r0, r0
    210e:	d9 f7       	brne	.-10     	; 0x2106 <strchr_P+0x2>
    2110:	c0 01       	movw	r24, r0
    2112:	08 95       	ret
    2114:	31 97       	sbiw	r30, 0x01	; 1
    2116:	cf 01       	movw	r24, r30
    2118:	08 95       	ret

0000211a <strnlen_P>:
    211a:	fc 01       	movw	r30, r24
    211c:	05 90       	lpm	r0, Z+
    211e:	61 50       	subi	r22, 0x01	; 1
    2120:	70 40       	sbci	r23, 0x00	; 0
    2122:	01 10       	cpse	r0, r1
    2124:	d8 f7       	brcc	.-10     	; 0x211c <strnlen_P+0x2>
    2126:	80 95       	com	r24
    2128:	90 95       	com	r25
    212a:	8e 0f       	add	r24, r30
    212c:	9f 1f       	adc	r25, r31
    212e:	08 95       	ret

00002130 <strnlen>:
    2130:	fc 01       	movw	r30, r24
    2132:	61 50       	subi	r22, 0x01	; 1
    2134:	70 40       	sbci	r23, 0x00	; 0
    2136:	01 90       	ld	r0, Z+
    2138:	01 10       	cpse	r0, r1
    213a:	d8 f7       	brcc	.-10     	; 0x2132 <strnlen+0x2>
    213c:	80 95       	com	r24
    213e:	90 95       	com	r25
    2140:	8e 0f       	add	r24, r30
    2142:	9f 1f       	adc	r25, r31
    2144:	08 95       	ret

00002146 <fgetc>:
    2146:	cf 93       	push	r28
    2148:	df 93       	push	r29
    214a:	ec 01       	movw	r28, r24
    214c:	2b 81       	ldd	r18, Y+3	; 0x03
    214e:	20 ff       	sbrs	r18, 0
    2150:	33 c0       	rjmp	.+102    	; 0x21b8 <fgetc+0x72>
    2152:	26 ff       	sbrs	r18, 6
    2154:	0a c0       	rjmp	.+20     	; 0x216a <fgetc+0x24>
    2156:	2f 7b       	andi	r18, 0xBF	; 191
    2158:	2b 83       	std	Y+3, r18	; 0x03
    215a:	8e 81       	ldd	r24, Y+6	; 0x06
    215c:	9f 81       	ldd	r25, Y+7	; 0x07
    215e:	01 96       	adiw	r24, 0x01	; 1
    2160:	9f 83       	std	Y+7, r25	; 0x07
    2162:	8e 83       	std	Y+6, r24	; 0x06
    2164:	8a 81       	ldd	r24, Y+2	; 0x02
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	29 c0       	rjmp	.+82     	; 0x21bc <fgetc+0x76>
    216a:	22 ff       	sbrs	r18, 2
    216c:	0f c0       	rjmp	.+30     	; 0x218c <fgetc+0x46>
    216e:	e8 81       	ld	r30, Y
    2170:	f9 81       	ldd	r31, Y+1	; 0x01
    2172:	80 81       	ld	r24, Z
    2174:	08 2e       	mov	r0, r24
    2176:	00 0c       	add	r0, r0
    2178:	99 0b       	sbc	r25, r25
    217a:	00 97       	sbiw	r24, 0x00	; 0
    217c:	19 f4       	brne	.+6      	; 0x2184 <fgetc+0x3e>
    217e:	20 62       	ori	r18, 0x20	; 32
    2180:	2b 83       	std	Y+3, r18	; 0x03
    2182:	1a c0       	rjmp	.+52     	; 0x21b8 <fgetc+0x72>
    2184:	31 96       	adiw	r30, 0x01	; 1
    2186:	f9 83       	std	Y+1, r31	; 0x01
    2188:	e8 83       	st	Y, r30
    218a:	0e c0       	rjmp	.+28     	; 0x21a8 <fgetc+0x62>
    218c:	ea 85       	ldd	r30, Y+10	; 0x0a
    218e:	fb 85       	ldd	r31, Y+11	; 0x0b
    2190:	09 95       	icall
    2192:	97 ff       	sbrs	r25, 7
    2194:	09 c0       	rjmp	.+18     	; 0x21a8 <fgetc+0x62>
    2196:	2b 81       	ldd	r18, Y+3	; 0x03
    2198:	01 96       	adiw	r24, 0x01	; 1
    219a:	11 f0       	breq	.+4      	; 0x21a0 <fgetc+0x5a>
    219c:	80 e2       	ldi	r24, 0x20	; 32
    219e:	01 c0       	rjmp	.+2      	; 0x21a2 <fgetc+0x5c>
    21a0:	80 e1       	ldi	r24, 0x10	; 16
    21a2:	82 2b       	or	r24, r18
    21a4:	8b 83       	std	Y+3, r24	; 0x03
    21a6:	08 c0       	rjmp	.+16     	; 0x21b8 <fgetc+0x72>
    21a8:	2e 81       	ldd	r18, Y+6	; 0x06
    21aa:	3f 81       	ldd	r19, Y+7	; 0x07
    21ac:	2f 5f       	subi	r18, 0xFF	; 255
    21ae:	3f 4f       	sbci	r19, 0xFF	; 255
    21b0:	3f 83       	std	Y+7, r19	; 0x07
    21b2:	2e 83       	std	Y+6, r18	; 0x06
    21b4:	99 27       	eor	r25, r25
    21b6:	02 c0       	rjmp	.+4      	; 0x21bc <fgetc+0x76>
    21b8:	8f ef       	ldi	r24, 0xFF	; 255
    21ba:	9f ef       	ldi	r25, 0xFF	; 255
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	08 95       	ret

000021c2 <fputc>:
    21c2:	0f 93       	push	r16
    21c4:	1f 93       	push	r17
    21c6:	cf 93       	push	r28
    21c8:	df 93       	push	r29
    21ca:	fb 01       	movw	r30, r22
    21cc:	23 81       	ldd	r18, Z+3	; 0x03
    21ce:	21 fd       	sbrc	r18, 1
    21d0:	03 c0       	rjmp	.+6      	; 0x21d8 <fputc+0x16>
    21d2:	8f ef       	ldi	r24, 0xFF	; 255
    21d4:	9f ef       	ldi	r25, 0xFF	; 255
    21d6:	2c c0       	rjmp	.+88     	; 0x2230 <fputc+0x6e>
    21d8:	22 ff       	sbrs	r18, 2
    21da:	16 c0       	rjmp	.+44     	; 0x2208 <fputc+0x46>
    21dc:	46 81       	ldd	r20, Z+6	; 0x06
    21de:	57 81       	ldd	r21, Z+7	; 0x07
    21e0:	24 81       	ldd	r18, Z+4	; 0x04
    21e2:	35 81       	ldd	r19, Z+5	; 0x05
    21e4:	42 17       	cp	r20, r18
    21e6:	53 07       	cpc	r21, r19
    21e8:	44 f4       	brge	.+16     	; 0x21fa <fputc+0x38>
    21ea:	a0 81       	ld	r26, Z
    21ec:	b1 81       	ldd	r27, Z+1	; 0x01
    21ee:	9d 01       	movw	r18, r26
    21f0:	2f 5f       	subi	r18, 0xFF	; 255
    21f2:	3f 4f       	sbci	r19, 0xFF	; 255
    21f4:	31 83       	std	Z+1, r19	; 0x01
    21f6:	20 83       	st	Z, r18
    21f8:	8c 93       	st	X, r24
    21fa:	26 81       	ldd	r18, Z+6	; 0x06
    21fc:	37 81       	ldd	r19, Z+7	; 0x07
    21fe:	2f 5f       	subi	r18, 0xFF	; 255
    2200:	3f 4f       	sbci	r19, 0xFF	; 255
    2202:	37 83       	std	Z+7, r19	; 0x07
    2204:	26 83       	std	Z+6, r18	; 0x06
    2206:	14 c0       	rjmp	.+40     	; 0x2230 <fputc+0x6e>
    2208:	8b 01       	movw	r16, r22
    220a:	ec 01       	movw	r28, r24
    220c:	fb 01       	movw	r30, r22
    220e:	00 84       	ldd	r0, Z+8	; 0x08
    2210:	f1 85       	ldd	r31, Z+9	; 0x09
    2212:	e0 2d       	mov	r30, r0
    2214:	09 95       	icall
    2216:	89 2b       	or	r24, r25
    2218:	e1 f6       	brne	.-72     	; 0x21d2 <fputc+0x10>
    221a:	d8 01       	movw	r26, r16
    221c:	16 96       	adiw	r26, 0x06	; 6
    221e:	8d 91       	ld	r24, X+
    2220:	9c 91       	ld	r25, X
    2222:	17 97       	sbiw	r26, 0x07	; 7
    2224:	01 96       	adiw	r24, 0x01	; 1
    2226:	17 96       	adiw	r26, 0x07	; 7
    2228:	9c 93       	st	X, r25
    222a:	8e 93       	st	-X, r24
    222c:	16 97       	sbiw	r26, 0x06	; 6
    222e:	ce 01       	movw	r24, r28
    2230:	df 91       	pop	r29
    2232:	cf 91       	pop	r28
    2234:	1f 91       	pop	r17
    2236:	0f 91       	pop	r16
    2238:	08 95       	ret

0000223a <ungetc>:
    223a:	fb 01       	movw	r30, r22
    223c:	23 81       	ldd	r18, Z+3	; 0x03
    223e:	20 ff       	sbrs	r18, 0
    2240:	12 c0       	rjmp	.+36     	; 0x2266 <ungetc+0x2c>
    2242:	26 fd       	sbrc	r18, 6
    2244:	10 c0       	rjmp	.+32     	; 0x2266 <ungetc+0x2c>
    2246:	8f 3f       	cpi	r24, 0xFF	; 255
    2248:	3f ef       	ldi	r19, 0xFF	; 255
    224a:	93 07       	cpc	r25, r19
    224c:	61 f0       	breq	.+24     	; 0x2266 <ungetc+0x2c>
    224e:	82 83       	std	Z+2, r24	; 0x02
    2250:	2f 7d       	andi	r18, 0xDF	; 223
    2252:	20 64       	ori	r18, 0x40	; 64
    2254:	23 83       	std	Z+3, r18	; 0x03
    2256:	26 81       	ldd	r18, Z+6	; 0x06
    2258:	37 81       	ldd	r19, Z+7	; 0x07
    225a:	21 50       	subi	r18, 0x01	; 1
    225c:	31 09       	sbc	r19, r1
    225e:	37 83       	std	Z+7, r19	; 0x07
    2260:	26 83       	std	Z+6, r18	; 0x06
    2262:	99 27       	eor	r25, r25
    2264:	08 95       	ret
    2266:	8f ef       	ldi	r24, 0xFF	; 255
    2268:	9f ef       	ldi	r25, 0xFF	; 255
    226a:	08 95       	ret

0000226c <__ultoa_invert>:
    226c:	fa 01       	movw	r30, r20
    226e:	aa 27       	eor	r26, r26
    2270:	28 30       	cpi	r18, 0x08	; 8
    2272:	51 f1       	breq	.+84     	; 0x22c8 <__ultoa_invert+0x5c>
    2274:	20 31       	cpi	r18, 0x10	; 16
    2276:	81 f1       	breq	.+96     	; 0x22d8 <__ultoa_invert+0x6c>
    2278:	e8 94       	clt
    227a:	6f 93       	push	r22
    227c:	6e 7f       	andi	r22, 0xFE	; 254
    227e:	6e 5f       	subi	r22, 0xFE	; 254
    2280:	7f 4f       	sbci	r23, 0xFF	; 255
    2282:	8f 4f       	sbci	r24, 0xFF	; 255
    2284:	9f 4f       	sbci	r25, 0xFF	; 255
    2286:	af 4f       	sbci	r26, 0xFF	; 255
    2288:	b1 e0       	ldi	r27, 0x01	; 1
    228a:	3e d0       	rcall	.+124    	; 0x2308 <__ultoa_invert+0x9c>
    228c:	b4 e0       	ldi	r27, 0x04	; 4
    228e:	3c d0       	rcall	.+120    	; 0x2308 <__ultoa_invert+0x9c>
    2290:	67 0f       	add	r22, r23
    2292:	78 1f       	adc	r23, r24
    2294:	89 1f       	adc	r24, r25
    2296:	9a 1f       	adc	r25, r26
    2298:	a1 1d       	adc	r26, r1
    229a:	68 0f       	add	r22, r24
    229c:	79 1f       	adc	r23, r25
    229e:	8a 1f       	adc	r24, r26
    22a0:	91 1d       	adc	r25, r1
    22a2:	a1 1d       	adc	r26, r1
    22a4:	6a 0f       	add	r22, r26
    22a6:	71 1d       	adc	r23, r1
    22a8:	81 1d       	adc	r24, r1
    22aa:	91 1d       	adc	r25, r1
    22ac:	a1 1d       	adc	r26, r1
    22ae:	20 d0       	rcall	.+64     	; 0x22f0 <__ultoa_invert+0x84>
    22b0:	09 f4       	brne	.+2      	; 0x22b4 <__ultoa_invert+0x48>
    22b2:	68 94       	set
    22b4:	3f 91       	pop	r19
    22b6:	2a e0       	ldi	r18, 0x0A	; 10
    22b8:	26 9f       	mul	r18, r22
    22ba:	11 24       	eor	r1, r1
    22bc:	30 19       	sub	r19, r0
    22be:	30 5d       	subi	r19, 0xD0	; 208
    22c0:	31 93       	st	Z+, r19
    22c2:	de f6       	brtc	.-74     	; 0x227a <__ultoa_invert+0xe>
    22c4:	cf 01       	movw	r24, r30
    22c6:	08 95       	ret
    22c8:	46 2f       	mov	r20, r22
    22ca:	47 70       	andi	r20, 0x07	; 7
    22cc:	40 5d       	subi	r20, 0xD0	; 208
    22ce:	41 93       	st	Z+, r20
    22d0:	b3 e0       	ldi	r27, 0x03	; 3
    22d2:	0f d0       	rcall	.+30     	; 0x22f2 <__ultoa_invert+0x86>
    22d4:	c9 f7       	brne	.-14     	; 0x22c8 <__ultoa_invert+0x5c>
    22d6:	f6 cf       	rjmp	.-20     	; 0x22c4 <__ultoa_invert+0x58>
    22d8:	46 2f       	mov	r20, r22
    22da:	4f 70       	andi	r20, 0x0F	; 15
    22dc:	40 5d       	subi	r20, 0xD0	; 208
    22de:	4a 33       	cpi	r20, 0x3A	; 58
    22e0:	18 f0       	brcs	.+6      	; 0x22e8 <__ultoa_invert+0x7c>
    22e2:	49 5d       	subi	r20, 0xD9	; 217
    22e4:	31 fd       	sbrc	r19, 1
    22e6:	40 52       	subi	r20, 0x20	; 32
    22e8:	41 93       	st	Z+, r20
    22ea:	02 d0       	rcall	.+4      	; 0x22f0 <__ultoa_invert+0x84>
    22ec:	a9 f7       	brne	.-22     	; 0x22d8 <__ultoa_invert+0x6c>
    22ee:	ea cf       	rjmp	.-44     	; 0x22c4 <__ultoa_invert+0x58>
    22f0:	b4 e0       	ldi	r27, 0x04	; 4
    22f2:	a6 95       	lsr	r26
    22f4:	97 95       	ror	r25
    22f6:	87 95       	ror	r24
    22f8:	77 95       	ror	r23
    22fa:	67 95       	ror	r22
    22fc:	ba 95       	dec	r27
    22fe:	c9 f7       	brne	.-14     	; 0x22f2 <__ultoa_invert+0x86>
    2300:	00 97       	sbiw	r24, 0x00	; 0
    2302:	61 05       	cpc	r22, r1
    2304:	71 05       	cpc	r23, r1
    2306:	08 95       	ret
    2308:	9b 01       	movw	r18, r22
    230a:	ac 01       	movw	r20, r24
    230c:	0a 2e       	mov	r0, r26
    230e:	06 94       	lsr	r0
    2310:	57 95       	ror	r21
    2312:	47 95       	ror	r20
    2314:	37 95       	ror	r19
    2316:	27 95       	ror	r18
    2318:	ba 95       	dec	r27
    231a:	c9 f7       	brne	.-14     	; 0x230e <__ultoa_invert+0xa2>
    231c:	62 0f       	add	r22, r18
    231e:	73 1f       	adc	r23, r19
    2320:	84 1f       	adc	r24, r20
    2322:	95 1f       	adc	r25, r21
    2324:	a0 1d       	adc	r26, r0
    2326:	08 95       	ret

00002328 <__ctype_isfalse>:
    2328:	99 27       	eor	r25, r25
    232a:	88 27       	eor	r24, r24

0000232c <__ctype_istrue>:
    232c:	08 95       	ret

0000232e <__prologue_saves__>:
    232e:	2f 92       	push	r2
    2330:	3f 92       	push	r3
    2332:	4f 92       	push	r4
    2334:	5f 92       	push	r5
    2336:	6f 92       	push	r6
    2338:	7f 92       	push	r7
    233a:	8f 92       	push	r8
    233c:	9f 92       	push	r9
    233e:	af 92       	push	r10
    2340:	bf 92       	push	r11
    2342:	cf 92       	push	r12
    2344:	df 92       	push	r13
    2346:	ef 92       	push	r14
    2348:	ff 92       	push	r15
    234a:	0f 93       	push	r16
    234c:	1f 93       	push	r17
    234e:	cf 93       	push	r28
    2350:	df 93       	push	r29
    2352:	cd b7       	in	r28, 0x3d	; 61
    2354:	de b7       	in	r29, 0x3e	; 62
    2356:	ca 1b       	sub	r28, r26
    2358:	db 0b       	sbc	r29, r27
    235a:	0f b6       	in	r0, 0x3f	; 63
    235c:	f8 94       	cli
    235e:	de bf       	out	0x3e, r29	; 62
    2360:	0f be       	out	0x3f, r0	; 63
    2362:	cd bf       	out	0x3d, r28	; 61
    2364:	09 94       	ijmp

00002366 <__epilogue_restores__>:
    2366:	2a 88       	ldd	r2, Y+18	; 0x12
    2368:	39 88       	ldd	r3, Y+17	; 0x11
    236a:	48 88       	ldd	r4, Y+16	; 0x10
    236c:	5f 84       	ldd	r5, Y+15	; 0x0f
    236e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2370:	7d 84       	ldd	r7, Y+13	; 0x0d
    2372:	8c 84       	ldd	r8, Y+12	; 0x0c
    2374:	9b 84       	ldd	r9, Y+11	; 0x0b
    2376:	aa 84       	ldd	r10, Y+10	; 0x0a
    2378:	b9 84       	ldd	r11, Y+9	; 0x09
    237a:	c8 84       	ldd	r12, Y+8	; 0x08
    237c:	df 80       	ldd	r13, Y+7	; 0x07
    237e:	ee 80       	ldd	r14, Y+6	; 0x06
    2380:	fd 80       	ldd	r15, Y+5	; 0x05
    2382:	0c 81       	ldd	r16, Y+4	; 0x04
    2384:	1b 81       	ldd	r17, Y+3	; 0x03
    2386:	aa 81       	ldd	r26, Y+2	; 0x02
    2388:	b9 81       	ldd	r27, Y+1	; 0x01
    238a:	ce 0f       	add	r28, r30
    238c:	d1 1d       	adc	r29, r1
    238e:	0f b6       	in	r0, 0x3f	; 63
    2390:	f8 94       	cli
    2392:	de bf       	out	0x3e, r29	; 62
    2394:	0f be       	out	0x3f, r0	; 63
    2396:	cd bf       	out	0x3d, r28	; 61
    2398:	ed 01       	movw	r28, r26
    239a:	08 95       	ret

0000239c <_exit>:
    239c:	f8 94       	cli

0000239e <__stop_program>:
    239e:	ff cf       	rjmp	.-2      	; 0x239e <__stop_program>
